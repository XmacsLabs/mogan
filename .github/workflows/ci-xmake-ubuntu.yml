name: Build and Test on Ubuntu

on:
  push:
    branches: [ branch-1.2 ]
    paths:
      - 'src/**'
      - '!src/Plugins/Macos/**'
      - '!src/Plugins/Windows/**'
      - 'tests/**'
      - 'xmake.lua'
      - '.github/workflows/ci-xmake-ubuntu.yml'
  pull_request:
    branches: [ branch-1.2 ]
    paths:
      - 'src/**'
      - '!src/Plugins/Macos/**'
      - '!src/Plugins/Windows/**'
      - 'tests/**'
      - 'xmake.lua'
      - '.github/workflows/ci-xmake-ubuntu.yml'

jobs:
  linuxbuild:
    runs-on: ubuntu-22.04
    if: always()
    continue-on-error: true
    strategy:
      fail-fast: true
      matrix:
        include:
        - qt_pkg: qtbase5-dev libqt5svg5-dev qt5-image-formats-plugins
          qt_ver: 5
        - qt_pkg: qt6-base-dev libqt6svg6-dev qt6-image-formats-plugins
          qt_ver: 6
    steps:
      - name: Install dependencies
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y gcc \
              fonts-noto-cjk libpng-dev zlib1g-dev libjpeg-turbo8-dev \
              libcurl4-openssl-dev libfreetype-dev libsqlite3-dev \
              ${{matrix.qt_pkg}}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      # Force xmake to a specific folder (for cache)
      - name: Set xmake env
        run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" >> $GITHUB_ENV

      # Install xmake
      - uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: v2.7.8
          actions-cache-folder: '.xmake-cache'

      # Update xmake repository (in order to have the file that will be cached)
      - name: Update xmake repository
        run: xmake repo --update

      # Fetch xmake dephash
      - name: Retrieve dependencies hash
        id: dep_hash
        run: echo "hash=$(xmake l utils.ci.packageskey)" >> $GITHUB_OUTPUT

      # Cache xmake dependencies
      - name: Retrieve cached xmake dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
          key: ${{ runner.os }}-qt${{ matrix.qt_ver }}-deps-${{ steps.dep_hash.outputs.hash }}

      - name: config
        run: xmake config --yes
      - name: build
        id: build
        run: xmake build --yes --verbose --diagnosis --all
      - name: test
        run: xmake run --yes --verbose --diagnosis --group=tests
        env:
          QT_QPA_PLATFORM: offscreen

