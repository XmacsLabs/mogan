<TMU|<tuple|1.0.4|1.2.9.3-rc2>>

<style|<tuple|book|chinese|doc|smart-ref|preview-ref>>

<\body>
  <\hide-preamble>
    <assign|paragraph-toc|<macro|name|>>
  </hide-preamble>

  <\table-of-contents|toc>
    <vspace*|1fn><with|font-series|bold|math-font-series|bold|1<space|2spc>开始使用> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-1><vspace|0.5fn>

    1.1<space|2spc>本文档惯例 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-2>

    1.2<space|2spc>配置T<rsub|<space|-0.4spc><move|<resize|<with|math-level|0|E>||||0.5fn>|0fn|-0.1fn>><space|-0.4spc>X<rsub|<space|-0.4spc><move|<resize|M<space|-0.2spc>A<space|-0.4spc>CS||||0.5fn>|0fn|-0.1fn>> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-8>

    1.3<space|2spc>新建、打开和保存文档 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-11>

    1.4<space|2spc>打印文档 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-25>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|2<space|2spc>配置T<rsub|<space|-0.4spc><move|<resize|<with|math-level|0|E>||||0.5fn>|0fn|-0.1fn>><space|-0.4spc>X<rsub|<space|-0.4spc><move|<resize|M<space|-0.2spc>A<space|-0.4spc>CS||||0.5fn>|0fn|-0.1fn>>> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-32><vspace|0.5fn>

    2.1<space|2spc>用户首选项 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-33>

    2.2<space|2spc>配置键盘 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-60>

    2.3<space|2spc>东方语言用户须知 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-65>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|3<space|2spc>撰写简单的文档> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-71><vspace|0.5fn>

    3.1<space|2spc>概况 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-72>

    3.2<space|2spc>结构化文本 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-76>

    3.3<space|2spc>语义标记 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-95>

    3.4<space|2spc>列表 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-98>

    3.5<space|2spc>环境块 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-103>

    3.6<space|2spc>布局问题 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-108>

    3.7<space|2spc>字体选择系统 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-113>

    3.8<space|2spc>精通键盘 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-115>

    <with|par-left|1tab|3.8.1<space|2spc>基本前缀规则 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-116>>

    <with|par-left|1tab|3.8.2<space|2spc>文本模式下的常用快捷键 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-118>>

    <with|par-left|1tab|3.8.3<space|2spc>混合命令和LaTeX模拟 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-119>>

    <with|par-left|1tab|3.8.4<space|2spc>动态对象 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-120>>

    <with|par-left|1tab|3.8.5<space|2spc>一些有用的键盘快捷键 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-122>>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|4<space|2spc>数学公式> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-125><vspace|0.5fn>

    4.1<space|2spc>在文档中输入数学公式 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-126>

    4.2<space|2spc>数学符号 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-134>

    4.3<space|2spc>主要数学结构 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-135>

    4.4<space|2spc>大型分隔符 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-138>

    4.5<space|2spc>大型算符 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-141>

    4.6<space|2spc>加宽的顶标 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-143>

    4.7<space|2spc>语义编辑工具 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-145>

    4.8<space|2spc>常见错误和语法纠正 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-147>

    4.9<space|2spc>数学符号的语义 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-153>

    4.10<space|2spc>定制数学语义 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-155>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|5<space|2spc>表格处理> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-158><vspace|0.5fn>

    5.1<space|2spc>创建表格 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-159>

    5.2<space|2spc>格式化模式 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-170>

    5.3<space|2spc>对齐 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-172>

    5.4<space|2spc>大小 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-177>

    5.5<space|2spc>边界和背景色 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-182>

    5.6<space|2spc>高级特性 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-187>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|6<space|2spc>链接和内容自动生成> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-189><vspace|0.5fn>

    6.1<space|2spc>创建标签，链接和参考 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-190>

    6.2<space|2spc>插入图片 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-197>

    6.3<space|2spc>生成目录 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-200>

    6.4<space|2spc>编制参考文献 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-205>

    <with|par-left|1tab|6.4.1<space|2spc>用参考文献条目编辑文件 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-206>>

    <with|par-left|1tab|6.4.2<space|2spc>Inserting citations and compiling bibliographies <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-213>>

    6.5<space|2spc>生成索引 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-218>

    6.6<space|2spc>编制术语表 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-238>

    6.7<space|2spc>同一类内容的不同生成 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-242>

    6.8<space|2spc>书籍和多文件的文档 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-249>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|7<space|2spc>内置绘图工具> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-253><vspace|0.5fn>

    7.1<space|2spc>开始作图 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-254>

    7.2<space|2spc>插入图形对象 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-263>

    7.3<space|2spc>编辑图形对象 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-283>

    7.4<space|2spc>样式属性详述 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-285>

    7.5<space|2spc>编辑对象的组合 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-295>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|8<space|2spc>进阶布局特性> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-301><vspace|0.5fn>

    8.1<space|2spc>文档流 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-302>

    8.2<space|2spc>浮动对象 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-305>

    8.3<space|2spc>分页 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-312>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|9<space|2spc>编辑工具> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-317><vspace|0.5fn>

    9.1<space|2spc>剪切和粘贴 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-318>

    9.2<space|2spc>查找和替换 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-327>

    9.3<space|2spc>拼写检查 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-332>

    9.4<space|2spc>撤销和恢复 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-335>

    9.5<space|2spc>结构化编辑 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-338>

    9.6<space|2spc>结构化光标移动 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-342>

    9.7<space|2spc>结构化变元 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-343>

    9.8<space|2spc>移动和缩放对象 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-348>

    9.9<space|2spc>版本控制 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-356>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|10<space|2spc>幻灯片> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-377><vspace|0.5fn>

    10.1<space|2spc>Beamer styles <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-383>

    10.2<space|2spc>Traversal of a presentation <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-394>

    10.3<space|2spc>Overlays <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-418>

    10.4<space|2spc>Decorations <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-440>

    10.5<space|2spc>Animations <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-442>

    10.6<space|2spc>Exporting presentations <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-468>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|11<space|2spc>交互式界面> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-471><vspace|0.5fn>

    11.1<space|2spc>创建会话 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-473>

    11.2<space|2spc>编辑会话 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-488>

    11.3<space|2spc>选择输入模式 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-501>

    11.4<space|2spc>脚本语言 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-505>

    11.5<space|2spc>电子表格 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-517>

    11.6<space|2spc>远程插件 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-524>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|12<space|2spc>撰写样式> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-529><vspace|0.5fn>

    12.1<space|2spc>Writing a simple style package <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-534>

    12.2<space|2spc>Rendering of style files and packages <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-543>

    <with|par-left|1tab|12.2.1<space|2spc>ASCII-based or tree-based editing: an intricate choice <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-544>>

    <with|par-left|1tab|12.2.2<space|2spc>Global presentation <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-546>>

    <with|par-left|1tab|12.2.3<space|2spc>Local customization <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-556>>

    12.3<space|2spc>The style-sheet language <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-565>

    <with|par-left|1tab|12.3.1<space|2spc>Assignments <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-570>>

    <with|par-left|1tab|12.3.2<space|2spc>Macro expansion <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-572>>

    <with|par-left|1tab|12.3.3<space|2spc>Formatting primitives <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-574>>

    <with|par-left|1tab|12.3.4<space|2spc>Evaluation control <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-575>>

    <with|par-left|1tab|12.3.5<space|2spc>Control flow <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-577>>

    <with|par-left|1tab|12.3.6<space|2spc>Computational markup <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-579>>

    12.4<space|2spc>Customizing the standard TeXmacs styles <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-584>

    <with|par-left|1tab|12.4.1<space|2spc>Organization of the style files and packages <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-585>>

    <with|par-left|1tab|12.4.2<space|2spc>General principles for customization <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-624>>

    <with|par-left|1tab|12.4.3<space|2spc>Customizing the general layout <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-625>>

    <with|par-left|1tab|12.4.4<space|2spc>Customizing list environments <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-627>>

    <with|par-left|1tab|12.4.5<space|2spc>Customizing numbered textual environments <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-630>>

    <with|par-left|1tab|12.4.6<space|2spc>Customizing sectional tags <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-631>>

    <with|par-left|1tab|12.4.7<space|2spc>Customizing the treatment of title information <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-634>>

    12.5<space|2spc>Further notes and tips <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-635>

    <with|par-left|1tab|12.5.1<space|2spc>Customizing arbitrary tags <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-636>>

    <with|par-left|1tab|12.5.2<space|2spc>Standard utilities <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-637>>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|13<space|2spc>定制墨干> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-640><vspace|0.5fn>

    13.1<space|2spc>金鱼Scheme入门 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-642>

    13.2<space|2spc>撰写初始化配置文件 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-643>

    13.3<space|2spc>定制快捷键 <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-644>
  </table-of-contents>

  <chapter|开始使用>

  <section|本文档惯例><label|sec:convention>

  <paragraph*|菜单项>

  在<TeXmacs>文档中，菜单项以加粗的字体和箭头表示：<menu|Document>，<menu|File|Load>或者<menu|Format|Font shape|Italic>。

  <paragraph*|组合键>

  <TeXmacs>使用下列组合键：

  <\compressed>
    <\description>
      <item*|<prefix|S->>Shift 组合键

      <item*|<prefix|C->>Control 组合键

      <item*|<prefix|A->>Alt 组合键

      <item*|<prefix|M->>Meta 组合键
    </description>
  </compressed>

  例如，<key*|M-S-x> 表示同时按下三个键 <prefix|M->， <prefix|S-> 和 <key|x> 。

  上述组合键对应的具体按键在不同的系统上如下表所示：

  <\big-table>
    <descriptive-table|<tformat|<cwith|1|-1|3|3|cell-lborder|1ln>|<cwith|1|-1|1|-1|cell-row-span|1>|<cwith|1|-1|1|-1|cell-col-span|1>|<cwith|1|-1|1|-1|cell-bsep|3spc>|<cwith|1|-1|1|-1|cell-tsep|3sep>|<cwith|1|1|1|-1|cell-bsep|1spc>|<cwith|2|-1|1|-1|cell-bsep|2sep>|<cwith|1|-1|1|-1|cell-halign|c>|<cwith|1|-1|1|-1|cell-valign|c>|<cwith|1|-1|1|-1|cell-hyphen|n>|<table|<row|<cell|>|<cell|<key*|C->>|<cell|<key*|A->>|<cell|<key*|M->>>|<row|<cell|<name|Windows>>|<cell|<render-key|Ctrl>>|<cell|left <render-key|Alt> >|<cell|<render-key|<math|<shift|<draw-over|<phantom|ihj>|<with|gr-frame|<tuple|scale|0.707111cm|<tuple|0.5gw|0.415159gh>>|gr-mode|<tuple|group-edit|move>|gr-fill-color|black|gr-color|white|gr-snap|<tuple|control point|grid point|grid curve point|curve-grid intersection|curve-curve intersection|text border point|text border>|magnify|0.707106780759852|<graphics|<with|fill-color|black|<cline|<point|-0.190551|-0.0360167>|<point|0.149110332054505|-0.126306389734092>|<point|0.151690038364863|0.212495039026326>|<point|-0.190550998809366|0.148862283370816>>>|<with|color|white|fill-color|black|<with|color|white|fill-color|black|<line|<point|-0.193989980156105|0.049973520664109>|<point|0.145671135070777|0.0525532105172642>>>>|<with|color|white|fill-color|black|<line|<point|-0.0529667|0.176379>|<point|-0.0521067601534595|-0.072132557216563>>>>>|0cm>||2ln>>><math|><math|> >>|<row|<cell|<name|Apple>>|<cell|<render-key|<with|font-family|ss|^<small|<with|font-family|ss| Control>>>> >|<cell|<render-key|<with|font-family|ss|\<option key\><small|<with|font-family|ss| Option>>>> >|<cell|<render-key|<with|font-family|ss|<small|\<place of interest sign\> Command>>>>>>>>
  <|big-table>
    组合键在不同的系统上的对应快捷键
  </big-table>

  <paragraph*|快捷键>

  一些通用的快捷键前缀的详细内容见<smart-ref|section:general_prefix_rules>。

  更加复杂一些的快捷键是通过连续按多个键或者组合键得到的。比如，快捷键<key|-><key|\<gtr\>>是先按下<key|->，再按下<key|\<gtr\>>得到的。在数学模式中，这个快捷键会插入<math|\<rightarrow\>>。类似地，先按下<key|Ctrl+>和<key|x>的组合，再按下 <key|Ctrl+>和<key|f>的组合，你就能得到快捷键<key|Ctrl+X><key|Ctrl+F>。如果你使用的是Emacs快捷键风格，那么这个快捷键是用来打开文件的。

  值得注意的是，<TeXmacs>的菜单和键盘的行为是上下文相关的，具体来说，是依赖于当前的模式（文本模式或者数学模式等等），当前文档的语言和当前光标的位置。比如说，在数学模式中，会有很多方便你输入数学公式的快捷键，但是在文本模式中，这些快<em|>捷键就会失效。

  <paragraph*|特殊键>

  在某些平台上，一些特殊键诸如换行是用特殊字符来描述的。下面这个表格列出了所有这些特殊键及其含义。

  <\big-table|<descriptive-table|<tformat|<cwith|1|-1|3|3|cell-lborder|1ln>|<cwith|1|-1|1|-1|cell-halign|l>|<cwith|1|-1|1|-1|cell-row-span|1>|<cwith|1|-1|1|-1|cell-col-span|1>|<cwith|7|11|1|1|cell-lborder|1ln>|<cwith|7|11|1|2|cell-halign|l>|<cwith|7|11|1|2|cell-row-span|1>|<cwith|7|11|1|2|cell-col-span|1>|<table|<row|<cell|键>|<cell|含义>|<cell|键>|<cell|含义>>|<row|<cell|<key*|S->>|<cell|Shift 组合键>|<cell|<key*|left>>|<cell|光标左移>>|<row|<cell|<key*|capslock>>|<cell|大写锁定>|<cell|<key*|right>>|<cell|光标右移>>|<row|<cell|<key*|C->>|<cell|Ctrl 组合键>|<cell|<key*|up>>|<cell|光标上移>>|<row|<cell|<key*|A->>|<cell|Alt 组合键>|<cell|<key*|down>>|<cell|光标下移>>|<row|<cell|<key*|M->>|<cell|Meta 组合键>|<cell|<key*|home>>|<cell|Home>>|<row|<cell|<key*|return>>|<cell|换行>|<cell|<key*|end>>|<cell|End>>|<row|<cell|<key*|delete>>|<cell|删除>|<cell|<key*|pageup>>|<cell|Page up>>|<row|<cell|<key*|backspace>>|<cell|退格>|<cell|<key*|pagedown>>|<cell|Page down>>|<row|<cell|<key*|escape>>|<cell|Escape>|<cell|<key*|space>>|<cell|空格>>|<row|<cell|<key*|tab>>|<cell|Tab>|<cell|>|<cell|>>>>>>
    特殊键。
  </big-table>

  <section|配置<TeXmacs>>

  第一次启动<TeXmacs>时，程序将自动启用默认配置，一般来说，默认配置就已经够用了。<TeXmacs>会根据你的系统设置决定文档语言和页面类型。当然，有些时候，默认配置并不能满足你的需求，你需要更改配置项。最简单的方式是，直接在<menu|Edit|Preferences>中指定你的偏好。

  我们特别建议你配置好自己喜欢的快捷键风格。我们默认使用和系统一致的快捷键风格。当然，我们也提供类Emacs的快捷键风格，通过<menu|Edit|Preferences|General|look and feel>就可以调整为Emacs风格的快捷键。Emacs风格的快捷键的好处在于，在不同的操作系统上，你始终可以使用一致的快捷键。

  <section|新建、打开和保存文档>

  不加任何命令行参数就启动<TeXmacs>，编辑器会自动为你新建一个空白文档。你也可以用<menu|File|New>自己新建一个文档。新建文档默认未命名。点击<menu|File|Save as>可以给文档命名。我们建议你新建文档后立即使用<menu|file|save>或者<menu|File|Save as...>，这样可以有效避免丢失该文档。

  必要时，建议你设定文档的全局设置，这些设置一般都在<menu|Document>菜单中。首先，你可能需要在<menu|Document|Style>中指定文档的样式比如article，book，seminar。如果你使用多种语言编辑文档，你可以在<menu|Document|Language>中指定该文档的默认语言。类似地，在<menu|Document|Page|Format|Page type>中可指定页面的类型。

  对于新建的文档，样式和页面大小也可以通过<menu|Focus>菜单或者焦点工具栏上的按钮改变。一般来说，焦点工具栏就是菜单下面的第三行工具栏。焦点菜单和焦点工具栏在编辑<strong|结构化文本> (<smart-ref|section:typing_structured_text>) 时尤为方便，其菜单项会跟随光标所在的上下文改变。

  修改文档之后，点击<menu|File|Save>保存文档。文档可以通过<menu|File|Load>打开。注意，在<TeXmacs>中你可以在同一个窗口下编辑多个文档<strong|>，我们把每一个打开的文档叫做缓冲区。点击<menu|go>可以看到菜单分为三个部分，点击第二个部分中展示的文件名，可以切换到不同的缓冲区。另外，墨干V1.2.9.2新增了多标签页的功能，通过点击<menu|View|Tab bar>就可以显示或者隐藏标签页工具栏，通过标签页工具栏，直接点击标签页就可以切换到不同的缓冲区。

  <section|打印文档>

  可以用<menu|File|Print|Print buffer to file>或者<menu|File|Export|PDF>将文档导出成PDF文档。两者的区别在于，前者使用默认打印设置导出文档，后者则是直接忽略了打印设置。

  当你配置好<TeXmacs>之后，编辑器一定是所见即所得的——打印出来之后的结果和你在屏幕上看到的完全一样。特别地，为了完整的所见即所得支持，你应该在<menu|Document|Page|Format|Page rendering>选择<menu|paper>并勾选<menu|Document|Page|Margins|Same screen margins as on paper>。你还应该确认屏幕上的字符显示和你的打印机的每英寸所打印的点数是否相同。这种字符渲染精度可以在<menu|File|Page setup...|Printer dpi>中调整。当前，改变DPI时排版上细微的改变也许会影响到文档中的行与页的分割。在未来的版本中，这个缺陷将不复存在。

  <chapter|配置<TeXmacs>><label|chapter:config_texmacs>

  <section|用户首选项>

  你或许需要将<TeXmacs>调整为符合自己需求的样子，以寻求极致的输入体验。这一切都可以在<menu|Edit|Preferences>中搞定。首先，在<menu|Edit|Preferences|Look and feel>中选择适合自己的快捷键方案。这些方案和你在其他平台上已经适应的方案所差无几。

  有如下用户首选项以供配置:

  <\description>
    <item*|<menu|Look and feel>><label|preferences:look-and-feel>这个选项主要影响<TeXmacs>的快捷键风格。默认风格依据系统而定（<name|Linux>下的Gnome、KDE或Emacs，<name|Mac OS>下的Mac OS，<name|Windows>下的Windows）。Emacs快捷键风格可以作为任何系统下的可选项。

    <item*|<menu|Interactive questions>>这个选项指定了需要用户输入时界面的弹出方式，或者是单独的弹出式窗口，或者是显示在<TeXmacs>的状态栏上。

    <item*|<menu|Details in menus>>这个选项指定了菜单的复杂度，如果选中<menu|Simplified menus>，不常用的选项会自动隐藏。

    <item*|<menu|Language>>指定了界面和<TeXmacs>帮助文档的首选语言。

    <item*|<menu|Keyboard>><label|preferences:keyboard>除了快捷键风格，还有一些其他的设置决定了键盘输入的行为模式，例如：

    <\itemize>
      <item><menu|Automatic quotes>功能

      <item><menu|Automatically close brackets>功能
    </itemize>

    <item*|<menu|Printer>>打印相关可在此子菜单设置。

    <item*|<menu|Security>>理论上，<TeXmacs>可以被嵌入宏和超链接，造成可以执行任意命令的险况。实际情况下，这个特性可能带来安全风险。所以，<menu|Security>这个选项允许用户指定对不受信任的可执行代码的处理方式。

    <item*|<menu|Converters>><TeXmacs>与其他格式的转换可在此菜单下配置。 更多细节参见<hlink|和其他格式的兼容性|../convert/man-convert.en.tm>这一章。

    <item*|<menu|Scripts>>指定外部脚本的默认脚本语言。

    <item*|<menu|Autosave>>指定自动保存的时间间隔。
  </description>

  <section|配置键盘><label|sec:config_keyboard>

  <TeXmacs>键盘的行为模式由<menu|Edit|Preferences>中的一些用户选项指定：

  <\itemize>
    <item><hlink|<menu|Look and feel>|#preferences:look-and-feel>旨在提供和其他平台类似的快捷键与动作绑定的规则。

    <item>细微的调整可在<hlink|<menu|Edit|Preferences|Keyboard>|#preferences:keyboard>中解决。
  </itemize>

  下面要讨论的是在不同系统上的键盘配置问题。

  关于快捷键在文档中的显示，请阅读<smart-ref|sec:convention>。另外，键盘快捷键的相关细节，请参考<smart-ref|sec:master_keyboard>。

  <paragraph*|一致的标准键位>

  <TeXmacs>已经尽量使快捷键和其它平台一致。然而为了方便用户，<TeXmacs>保留一些通用的键盘快捷键：

  <\itemize>
    <item><key|F5>–<key|F12> 保留用作特殊用途

    <item><prefix|std>、<key|Win+>和<prefix|A->用作修饰键

    <item><TeXmacs>自带大量一个或多个修饰键辅以<key|left>, <key|right>, <key|up>, <key|down>, <key|home>, <key|end>, <key|pageup>, <key|pagedown>, <key|backspace>, <key|delete>, <key|space>, <key|tab>或<key|return>的快捷键。
  </itemize>

  <paragraph*|潜在的冲突>

  <TeXmacs>专用的快捷键基本不会和惯例冲突。然而，在表格<nbsp><reference|kbd-conflict-table>中，我们还是可以列出一些标准的快捷键。这些快捷键在其他应用程序中可以工作，但是在<TeXmacs>中不奏效。（注：表格中列出的快捷键并不完全符合。）

  <\big-table|<descriptive-table|<tformat|<cwith|1|-1|1|-1|cell-halign|l>|<cwith|31|31|1|4|cell-halign|l>|<cwith|36|36|1|4|cell-halign|l>|<cwith|7|7|1|4|cell-halign|l>|<cwith|9|9|1|4|cell-halign|l>|<cwith|8|8|3|4|cell-halign|l>|<cwith|8|8|3|4|cell-halign|l>|<cwith|9|9|3|4|cell-halign|l>|<cwith|9|9|3|4|cell-halign|l>|<cwith|12|12|1|4|cell-halign|l>|<cwith|2|-1|4|4|cell-hyphen|n>|<cwith|7|7|3|3|cell-hyphen|t>|<table|<row|<cell|快捷键风格>|<cell|快捷键>|<cell|备选>|<cell|作用>>|<row|<cell|Emacs>|<cell|<key|F10>>|<cell|>|<cell|在窗口中显示菜单栏>>|<row|<cell|Emacs>|<cell|<key|M-!>>|<cell|>|<cell|Shell命令>>|<row|<cell|Emacs>|<cell|<key|M-'>/<key|M-‘>/<key|M-^>>|<cell|>|<cell|Needed for <TeXmacs> accents>>|<row|<cell|Emacs>|<cell|<key|M-/>/<key|M-\\>>|<cell|>|<cell|>>|<row|<cell|>|<cell|<key|M-:>/<key|M-;>>|<cell|>|<cell|>>|<row|<cell|Emacs>|<cell|<key|C-left>/<key|C-right>>|<\cell>
    <key|M-left>/<key|M-right>
  </cell>|<cell|以单词为单位前进/后退>>|<row|<cell|Emacs>|<cell|<key|C-up>/<key|C-down>>|<cell|>|<cell|以段落为单位前进/后退>>|<row|<cell|Emacs>|<cell|<key|M-b>/<key|M-f>>|<cell|>|<cell|以字符为单位前进/后退>>|<row|<cell|Emacs>|<cell|<key|M-l>/<key|M-t>>|<cell|>|<cell|Locase/transpose words (not impl.)>>|<row|<cell|Windows>|<cell|<key|F5>>|<cell|>|<cell|Refresh/Switch to next pane>>|<row|<cell|Windows>|<cell|<key|F6>/<key|C-F6>>|<cell|>|<cell|Switch to next/previous pane/tab>>|<row|<cell|>|<cell|<key|C-S-F6>>|<cell|>|<cell|>>|<row|<cell|Windows>|<cell|<key|C-space>>|<cell|>|<cell|Remove formatting>>|<row|<cell|Windows>|<cell|<key|C-tab>>|<cell|>|<cell|Switch to next child window>>|<row|<cell|Windows>|<cell|<key|C-backspace>>|<cell|>|<cell|Delete word>>|<row|<cell|>|<cell|<key|C-delete>>|<cell|>|<cell|>>|<row|<cell|Mac OS>|<cell|<key|C-F5>/<key|C-F6>>|<cell|>|<cell|Move focus to toolbar/panels>>|<row|<cell|>|<cell|<key|C-S-F6>>|<cell|>|<cell|>>|<row|<cell|Mac OS>|<cell|<key|C-F7>>|<cell|>|<cell|Override keyboard access mode>>|<row|<cell|Mac OS>|<cell|<key|F9>/<key|F10>>|<cell|>|<cell|Tile or untile windows>>|<row|<cell|Mac OS>|<cell|<key|F11>/<key|F12>>|<cell|>|<cell|Hide or show windows/dashboard>>|<row|<cell|Mac OS>|<cell|<key|tab>/<key|S-tab>>|<cell|>|<cell|Navigate through controls>>|<row|<cell|Mac OS>|<cell|<key|C-tab>, <key|C-S-tab>>|<cell|>|<cell|Move focus within control groups>>|<row|<cell|Mac OS>|<cell|<key|C-space>>|<cell|>|<cell|Toggle between input sources>>|<row|<cell|>|<cell|<key|M-C-space>>|<cell|>|<cell|>>|<row|<cell|Mac OS>|<cell|<key|C-left>>|<cell|<key|structured:move left>>|<cell|Move one cell left/right in table>>|<row|<cell|>|<cell|<key|C-right>>|<cell|<key|structured:move right>>|<cell|>>|<row|<cell|Mac OS>|<cell|<key|C-up>>|<cell|<key|structured:move up>>|<cell|Move one cell up/down in table>>|<row|<cell|>|<cell|<key|C-down>>|<cell|<key|structured:move down>>|<cell|>>|<row|<cell|Mac OS>|<cell|<key|home>/<key|end>>|<cell|<key|M-up>/<key|M-down>>|<cell|Move to start/end of document>>|<row|<cell|Mac OS>|<cell|<key|A-pageup>, <key|C-up>>|<cell|<key|pageup>>|<cell|Page up>>|<row|<cell|>|<cell|<key|C-pageup>>|<cell|>|<cell|>>|<row|<cell|Mac OS>|<cell|<key|A-pagedown>, <key|C-down>>|<cell|<key|pagedown>>|<cell|Page down>>|<row|<cell|>|<cell|<key|C-pagedown>>|<cell|>|<cell|>>|<row|<cell|Mac OS>|<cell|<key|C-a>/<key|C-e>>|<cell|<key|A-up>/<key|A-down>>|<cell|Move to start/end of block>>>>>>
    <label|kbd-conflict-table>一些在其他软件中可用、在<TeXmacs>不可用的快捷键
  </big-table>

  <paragraph*|优先的系统全局快捷键>

  除了上述标准快捷键，系统的全局应用会定义一些额外的全局快捷键，这些快捷键会覆盖掉<TeXmacs>的快捷键。比如，<name|MacOSX>中<name|Spaces>这个应用会用<key|C-left>, <key|C-right>, <key|C-up>, <key|C-down>, <key|C-1>, <key|C-2>, <key|C-3>和<key|C-4>在多个屏幕中切换。

  这个问题的一种解决方案是在相应的应用中改变出问题的全局快捷键。比如，<name|Spaces>可以把前缀<prefix|C->改为<prefix|M-A-C->。另外，<TeXmacs>没有使用<prefix|Fn>这个键。

  <paragraph*|用户自定义快捷键>

  <TeXmacs>默认的快捷键不合你的心意时，你还可以配置你自己的快捷键（见<smart-ref|sec:scheme_keyboard>）。

  <section|东方语言用户须知>

  选择合适的中文输入法，对于macOS或者Windows，使用系统默认输入法即可；对于Linux，推荐使用<name|Fcitx>。

  设置<menu|Chinese>环境。其一，首选项中选择<menu|Chinese>作为界面语言，注意该选项只影响菜单项和帮助文档的显示。其二，在菜单项<menu|Document|Language>中选择<menu|Chinese>，否则中文可能无法显示，尤其会影响到段落的换行。当文档语言非简体中文时，还可以通过<menu|Format|Language>为选中区域设置语言。

  <chapter|撰写简单的文档>

  <section|概况>

  一般的字符和标点符号直接键盘输入即可。大多数现代系统也会为重音字符和其他特殊符号提供快捷键。在<TeXmacs>上，<prefix|accent>键前缀可用于输入重音字符。比如，由快捷键<key|accent:acute e>可得「é」，快捷键<key|accent:grave a>则是「à」<\footnote>
    对于中文用户而言，在Linux上可能会遇到<key|Win+‘>被Fcitx输入法占用的情况，可以在Fcitx输入法的附加组件配置项中更改Quick Phrase这个功能的快捷键，避免占用。另外，<key|Win+‘>快捷键的识别在墨干V1.2.9及之前的版本中有问题，请使用墨干V1.2.9.2及以上版本。
  </footnote>。

  较长的单词在行边界处会自动使用连字符连接。对于中文，您需要在菜单<menu|Document|Language>中指定语言，以正确换行。

  在底部状态栏的左边，您可看到文档的样式、当前光标处的文本属性。比如，底部状态栏显示「<with|language|english|<with|font|roman|generic text roman 10><with|font|cyrillic|>>」意味着您是在文本模式工作，所用的<with|font|roman|roman>字体大小为<with|font|roman|10>，所用文档的样式为<with|font|roman|generic>。您可在<menu|格式>菜单中改变当前光标处的文本属性（字体、字体大小、颜色)。也可以选中一块文本后再对该文本操作。默认的全局文本属性在<menu|Document>菜单中更改。

  底部状态栏的右边显示的是光标前字符或者对象的属性。我们会显示当前光标所在位置的环境。所有这些信息都有助于您明确文档中光标的位置。

  <section|结构化文本><label|section:typing_structured_text>

  长文档往往具有良好的结构：即章、节和子节。其中往往包含不同类型的文本，比如纯文本，引用，脚注，定理等。选择好<menu|Document|Style>后，<TeXmacs>会依照样式为文本排版，比如节、页、定理的编号，又如引用和脚注的排版等等。

  目前可用的标准文档样式有：<tmstyle|generic>， <tmstyle|article>， <tmstyle|book>， <tmstyle|letter>， <tmstyle|exam>， <tmstyle|beamer>， <tmstyle|seminar>， <tmstyle|source>。比如，article样式可用于写论文。另外的样式可用于期刊论文或其它特殊用途，比如<TeXmacs>官方文档的样式是<TeXmacs>文档专用的。

  选择好文档的样式后，您可以用节来组织文本，还可以使用特定的语义块（语义块是标记中的一种）。语义块的例子有定理，命题，注意等(见<menu|Insert|Enunciation>)。有序列表（见<menu|Insert|Enumerate>）和无序列表（见<menu|Insert|Itemize>）也可用来组织文本。常用的标记还有<markup|strong>和<markup|name>，这两个都是语义标记（见<menu|Insert|Content tag>），<markup|strong>用于撰写重要的文本内容，<markup|name>用于撰写人名。

  用熟<TeXmacs>后，您可在自己的样式文件中定制语义块。假设您经常引用文本，且您希望引用文本是斜体的，且左右边距皆为1cm。最好的方法是定制一个引用语义块，而不是一次次手动更改文本和段落的属性。这样做不仅仅能够加快引用的输入，还可以直接更改引用语义块的定义，同步改变文档中所出现的所有引用语义块。比如您需要把引用的字体全部改小，此时，直接更改引用语义块的定义明显比一次次手动修改方便。

  了解一些通用的编辑器原理，可以让您高效编辑<TeXmacs>的结构化文本。第一个重要的概念是<em|当前焦点>，请看下面这个例子。假设我们正在输入如下经典定理：

  <\quote-env>
    欧拉恒等式如下所示：

    <\big-envbox>
      <\theorem>
        <small-focus|<math|\<mathe\><rsup|\<mathpi\>*\<mathi\>>=\<um\>1<math-cursor>>>。
      </theorem>
    </big-envbox>
  </quote-env>

  在光标处，灰色和青色的盒子显示的是活跃的标记：在本例中，光标是在定理（一种语义块标记）和公式中。最里面的在青色盒子内部的活跃标记称为<em|当前焦点>（在这个例子中公式<math|\<mathe\><rsup|\<mathpi\>*\<mathi\>>=\<um\>1>就是当前的焦点）。

  <menu|Focus>菜单和焦点工具栏（最后一行工具栏）是高度上下文相关的，它们都依赖于当前焦点。在本例中，点击焦点工具栏中的<menu|Inline formula>按钮，当您选择<menu|Displayed formula>后，文本会变为：

  <\quote-env>
    欧拉恒等式如下所示：

    <\big-envbox>
      <\theorem>
        \;

        <\big-focus>
          <\equation*>
            \<mathe\><rsup|\<mathpi\>*\<mathi\>>=\<um\>1<math-cursor>.
          </equation*>
        </big-focus>
      </theorem>
    </big-envbox>
  </quote-env>

  焦点工具栏左部的箭头按钮可允许您跳转到相似标记。在本例中，这个功能可以帮助您快速浏览文档中的单行公式。关于更多<strong|结构化编辑>（<smart-ref|section:structured_editing>）的信息，请参考<strong|编辑工具>(<smart-ref|chapter:editing_tools>)。

  第二个重要的概念是当前编辑模式。一共有五种编辑模式：文本模式，数学模式，程序模式，图形模式和源代码模式。模式切换比焦点的切换要少得多，其工具栏就在焦点工具栏的上方。<menu|Insert>和<menu|Format>菜单都是模式相关的。

  <section|<localize|content tag>><label|section:content-tags>

  <localize|content tag>是文本中最简单的结构之一。<menu|Insert|Content tag>下拉菜单列出了所有的<localize|content tag>。<localize|content tag>表明一段文字具有特殊性质或者为特殊目的服务。比如，重要的文本应当用<markup|strong>来标记。该标记默认将字体渲染成<strong|粗体>。需要注意的是，文档样式不同，加强文本后渲染效果也会有所不同。比如在幻灯片中，加强文本的渲染效果可能是带点透明效果的不同的颜色。下面是最常用的一些<localize|content tag>及其目的：

  <big-table|<descriptive-table|<tformat|<table|<row|<cell|标记>|<cell|例子>|<cell|目的>>|<row|<cell|<markup|strong>>|<cell|<with|font|roman|this is <strong|important>>>|<cell|加粗文本以显示其重要性>>|<row|<cell|<markup|em>>|<cell|<with|font|roman|the <em|real> thing>>|<cell|强调一段文本>>|<row|<cell|<markup|dfn>>|<cell|<with|font|roman|A <dfn|gnu> is a horny beast>>|<cell|一些概念的定义>>|<row|<cell|<markup|samp>>|<cell|<with|font|roman|the <samp|ae> ligature æ>>|<cell|字母序列>>|<row|<cell|<markup|name>>|<cell|<with|font|roman|the <name|Linux> system>>|<cell|某物的名称>>|<row|<cell|<markup|person>>|<cell|<with|font|roman|I am <name|Joris>>>|<cell|某人的名字>>|<row|<cell|<markup|cite*>>|<cell|<with|font|roman|Melville's <cite*|Moby Dick>>>|<cell|参考书目>>|<row|<cell|<markup|abbr>>|<cell|<with|font|roman|I work at the <abbr|C.N.R.S.>>>|<cell|缩写>>|<row|<cell|<markup|acronym>>|<cell|<with|font|roman|the <acronym|HTML> format>>|<cell|首字母缩写>>|<row|<cell|<markup|verbatim>>|<cell|<with|font|roman|the program said <verbatim|hello>>>|<cell|纯文本，比如计算机程序的输出>>|<row|<cell|<markup|kbd>>|<cell|<with|font|roman|Please type <kbd|return>>>|<cell|应当用键盘输入的文本>>|<row|<cell|<markup|code*>>|<cell|<with|font|concrete|<code*|cout \<less\>\<less\> 1+1;> yields <verbatim|2>>>|<cell|代码>>|<row|<cell|<markup|var>>|<cell|<with|font|roman|<verbatim|cp <var|src-file> <var|dest-file>>>>|<cell|程序中的变量>>>>>|常用<localize|content tag>一览。>

  <section|列表>

  <menu|Insert|Itemize>即插入无序列表。可选择 <math|\<bullet\>> (圆点)， <math|<op|->> (短线) 或者 <math|<op|\<rightarrow\>>> (箭头) 之一作为条目的标记。如下所示，列表中还可嵌入子列表：

  <\itemize>
    <item>第一项

    <item>下面是子列表：

    <\itemize>
      <item>一个子项

      <item>另一个子项
    </itemize>

    <item>最后一项
  </itemize>

  在不同的层级中，列表以不同的样式显示。在最外面一层，我们使用<math|\<bullet\>>，第二层则用<math|<op|\<circ\>>>。光标在列表中时，按下<key|return>键将自动新建一个新项目。如果您的项目内容由多个段落构成，则可以用<shortcut|(kbd-shift-return)>新起一段。

  有序列表可用菜单项<menu|Insert|Enumerate>得到，与无序列表类似，只是各个项目是顺序显示的。下面是一个按罗马数字顺序显示的例子(<menu|Insert|Enumerate|Roman>)：

  <\enumerate-Roman>
    <item>第一项

    <item>第二项

    <item>最后一项
  </enumerate-Roman>

  最后一种列表是描述列表。相应的菜单项是<menu|Insert|Description> ，功能是演示一串概念：

  <\description>
    <\with|font|roman>
      <item*|Gnu>A hairy but gentle beast.

      <item*|Gnat>Only lives in a zoo.
    </with>
  </description>

  <section|环境块>

  与<localize|content tag>类似，环境块的作用是赋予一段文字以特殊含义。<hlink|<localize|content tag>|#section:content-tags>一般只作用于一小段文字，而环境块的作用范围往往横跨多行。数学中常用的环境块是<markup|theorem>和<markup|proof>，如下所示:

  <\theorem>
    不存在正整数<math|a,b,c>和<math|n <around*|(|n\<geqslant\>3|)>>使得<math|a<rsup|n>+b<rsup|n>=c<rsup|n>>。
  </theorem>

  <\proof>
    空白太小，容不下我的证明。（费马）
  </proof>

  可以使用<menu|Insert>菜单下的<menu|enunciation>、<menu|prominent>和<menu|Program>进入环境块。与定理类似的环境块有<markup|proposition>，<compound|markup|lemma>，<markup|corollary>，<markup|axiom>，<markup|definition>。使用<markup|dueto>宏(按下<key|\\ d u e t o return>输入该宏)可以指定与定理相关的学者，像这样:

  <\theorem>
    <dueto|毕达哥拉斯>Under nice circumstances, we have <math|a<rsup|2>+b<rsup|2>=c<rsup|2>>.
  </theorem>

  其它常用的环境块还有<markup|remark>，<markup|note>，<markup|example>，<markup|warning>，<compound|markup|exercise>和<markup|problem>，其渲染效果与定理类似。其余环境块如<markup|verbatim>，<markup|code>，<markup|quote>，<markup|quotation>和<markup|verse>可用于输入多行文本，代码，引用或者诗歌。

  <section|布局问题>

  一般情况下，<TeXmacs>会自己处理文档的布局。所以，尽管我们不想禁止，但是我们也不鼓励你手动排版文档。比如，你不应该插入空格或者空行作为水平方向上字与字之间的空白或者竖直方向上行与行之间的空白。额外的空白应该用<menu|Format|Whitespace>明确指定。这可以让你的文档更加可靠，在对文档做一些影响到断行、分页的细小改动或者做一些诸如改变文档样式的重大改动时，你就不需要重新考虑布局了。

  <TeXmacs>实现了多种精确插入空白的命令。首先，你可以精确地插入指定高度和宽度的空白。水平方向上的空白无需高度这一属性，而且可以是可伸缩的。可伸缩的空白的长度由段落的断行方式决定。更进一步，你还可以插入制表符类型的空白。竖直方向上的空白可以在段落中任意位置插入，根据类型的不同会插入到段落的上面或者下面，我们建议将插入点放在段落起始处或结束处。两个段落间额外的竖直空白高度是其间的竖直空白高度的最大值（和<TeX>相反，这可以防止两个连续定理之间多余的空白）。

  至于段落的布局，用户可以指定段落的对齐方式（自调整、左对齐、中央对齐、右对齐）、边白和段落首行（末行）的向左（右）缩进。用户还可以控制行间以及段落间的间距。

  页面布局的菜单在<menu|Document|Page>可以找到。首先，你可以指定页面在屏幕上的展示方式：在<menu|Document|Page>的格式选项卡下页面渲染选项中选中「<localize|paper>」作为页面类型，你就可以看到明确的分页。默认页面类型「<localize|papyrus>」在你撰写文档时不会分页。页面的边白和文本宽度在<menu|Document|Page|Margins>中指定。

  <section|字体选择系统>

  在<TeXmacs>中，字体有以下五种主要属性：

  <\itemize>
    <item>名称 (roman, pandora, concrete等等)

    <item>字族 (roman, typewriter或者sans serif)

    <item>大小 (基准大小和相对大小 )

    <item>字型 (粗黑，适中 或者 细黑)

    <item>字形 (倾斜，斜体，小体大写等等)
  </itemize>

  注意，在<LaTeX> <math|2\<varepsilon\>>的字体选择系统中，没有细分字体名称和字族。注意，基准字体大小是整个文档的属性，在<menu|Document|Font|Size>中指定。

  <section|精通键盘><label|sec:master_keyboard><rsub|>

  本节主讲快捷键，相关内容除本节外还可以参考<smart-ref|sec:config_keyboard>。

  <subsection|基本前缀规则><label|section:general_prefix_rules>

  由于快捷键多而杂，将它们分类将便于记忆。这里按照键前缀来分类。当前生效的键前缀依赖于<menu|Edit|Preferences>中的快捷键风格。主要的键前缀如以下所示:

  <\description>
    <item*|<prefix|std>>标准快捷键。比如，<shortcut|(kbd-paste)>可以用来粘贴。<\footnote>
      如果你使用墨干浏览本文档，这里的快捷键会按照你所使用的操作系统和选定快捷键风格显示。例如，如果你选择Emacs风格的快捷键，那么该快捷键会自动显示为<key|C-y>。
    </footnote>

    <item*|<prefix|cmd>><TeXmacs>快捷键，往往依赖于当前的编辑模式。比如， <key|text s> 在文本模式下产生<markup|strong>文本，在数学模式下则是<math|<sqrt|>>（平方根）。

    <item*|<prefix|altcmd>>组合式<TeXmacs>快捷键。 通常，这些快捷键是用于先指示命令将要应用的标记的类别再指定具体的命令。

    <item*|<prefix|structured:geometry>>此键前缀用于和方向键及其它特殊键组合，用于<strong|移动和缩放对象>（<smart-ref|section:positioning_and_resizing_objects>）。

    <item*|<prefix|structured:move>>此键前缀用于和方向键及其它特殊键组合，用于<strong|结构化光标移动>（<smart-ref|section:structured_cursor_movement>）。

    <item*|<prefix|special>>此键前缀偶用于和字母和标点符号组合以创建一些额外的简单易记的快捷键。

    <item*|<prefix|symbol>>此键前缀可和常用字符组合使用以插入特殊符号。比如，使用<key|text:symbol s>得到<with|font|roman|ß>以及<key|math:symbol a>得到<math|<op|\<amalg\>>>。<prefix|symbol>键前缀还用于插入字面意义上的字符。比如，<key|symbol \\>总是产生\\，而 <key|\\>用于进入<strong|混合命令>（<smart-ref|hybrid_commands_and_latex_simulation>）。
  </description>

  <subsection|文本模式下的常用快捷键>

  使用<key|a - var>可以得到ā，使用<key|a - var var>可以得到á。这是中文文档中独有的输入拼音的方式。

  <subsection|混合命令和LaTeX模拟><label|hybrid_commands_and_latex_simulation>

  <TeXmacs>允许你直接从键盘输入<LaTeX>命令。具体步骤如下：你先按下<key|\\>以进入<LaTeX>/<TeXmacs>混合命令模式，再输入你需要执行的命令。当你输完命令时，底部的状态栏左边会显示如下信息：

  <\verbatim>
    \ \ \ \ \<less\>return\<gtr\>: action to be undertaken
  </verbatim>

  此时当你按下回车键，你的命令就会被执行。比如在数学模式中，你可以通过输入<key|\\ f r a c return>创建分式。

  如果你输入的命令不是一个（可识别的）<LaTeX>命令，我们首先看该命令是否是一个存在的<TeXmacs>宏，函数或者环境块（由样式文件提供）。如果是这样，相应的宏展开，函数或者环境块将被应用。否则，我们认为你的命令对应于一个环境变量且我们提取其值。<key|\\>键总是等价于这些快捷键对应的功能：<key|inactive l>，<key|inactive e>，<key|inactive a>，<key|inactive #>或者<key|inactive v>。

  使用<key|symbol \\>可以输入字面意义上的\\（backslash）。

  <subsection|动态对象>

  某些更加复杂的对象在编辑的过程中可以有不同状态。这种动态对象的一个例子便是标签和引用，因为引用的标号必须动态确定。另外一些动态标记的例子可以在<smart-ref|chapter:style>中找到。

  编辑进入动态对象时，比如使用<shortcut|(make-label)>插入标签，默认的状态是不激活的。在这种不激活的状态中，你可以输入和这个动态对象相关的信息，比如在标签这个例子中就是标签的名字。有一些动态对象的参数数量不是固定的，可以用<key|var>插入新的参数。

  <\big-figure>
    <with|color|blue|<math|\<langle\>>label<math|\|>>pythagoras<with|color|blue|<math|\<rangle\>>>
  </big-figure|不激活的标签>

  当你将动态对象的相关信息输入完毕后，你可以输入<shortcut|(kbd-return)>激活这个对象。在光标移动到对象后面并敲击<key|backspace>就可以反激活已经激活的动态对象。

  <subsection|一些有用的键盘快捷键>

  一些常用的组合快捷键如下<smart-ref|table:various-useful-shortcuts>所示。特别注意的是由<shortcut|(make-space "1em")>，<shortcut|(make-space "0.2spc")>和 <shortcut|(make-space "-0.2spc")>插入的空白可用<shortcut|(geometry-left)>和<shortcut|(geometry-right)><strong|改变大小>（<smart-ref|section:positioning_and_resizing_objects>）。这种缩放的方式实际上适用于更一般的从菜单<menu|Format|Space>插入的或水平或竖直的空白，也可以是一些其它的对象如图片。

  <\big-table|<descriptive-table|<tformat|<table|<row|<cell|快捷键>|<cell|动作>>|<row|<cell|<shortcut|(remove-structure-upwards)>>|<cell|除去所包含的对象或环境。>>|<row|<cell|<shortcut|(make 'nbsp)>>|<cell|插入一个不间断的空白。>>|<row|<cell|<shortcut|(make-space "1em")>>|<cell|插入一个quad空白。>>|<row|<cell|<shortcut|(make-space "0.2spc")>>|<cell|插入一个小空白。>>|<row|<cell|<shortcut|(make-space "-0.2spc")>>|<cell|插入一个负空白。>>|<row|<cell|<shortcut|(kbd-alternate-tab)>>|<cell|插入一个<with|font|roman|“tab”>。>>|<row|<cell|<shortcut|(go-start)>>|<cell|移动到文档头部。>>|<row|<cell|<shortcut|(go-end)>>|<cell|移动到文档尾部。>>|<row|<cell|<shortcut|(make 'line-break)>>|<cell|插入一个换行符。>>|<row|<cell|<shortcut|(make-rigid)>>|<cell|插入一段不能断行（rigid）的文字（会导致页面变宽）>>>>>>
    <label|table:various-useful-shortcuts>一些有用的键盘快捷键
  </big-table>

  <chapter|数学公式>

  <TeXmacs>要解决的主要问题之一便是数学公式的编辑。当光标处于公式中时，模式敏感的菜单和工具栏就会提供相应的数学符号输入方法。类似地，键盘的行为也会跟着改变，以便您快速输入数学公式。比如，输入<key|- \<gtr\>>可得<math|\<rightarrow\>>。上述行为改变将在本节中详细说明。

  自从<name|1.0.7.10>版，<TeXmacs>为数学公式增添了一些语义编辑功能。只要使用得当，这能使您的公式至少在句法上保证正确。您可用语法纠错来达到这一目标。带有语义的文档显然更加实用，比如使用公式作为计算机代数系统的输入。这样的文档会比一般的文档排版错误更少。其它一些有意思的特性，比如语义搜索和替换，会在不久的将来开发。

  <section|在文档中输入数学公式>

  <TeXmacs>对数学公式有着非常强大的支持。 <TeXmacs>下有三种输入数学公式的方式：

  <\description>
    <item*|<menu|插入|数学|公式>或者<key|$>>

    这个菜单条目输入的是像<math|a<rsup|2>+b<rsup|2>=c<rsup|2>>那样嵌在文本段落中的简短公式。注意公式是一种特殊的排版方式，不会占用过多的垂直方向上的空间。比如求和符号的上下界限往往处于右边（<math|<big|sum><rsup|n><rsub|i=1>>）。此时选中整个数学公式，再在<menu|Format|Mathematics|Display style>中选择打开，求和符号的界限就会显示在其上下两侧（<with|math-display|true|<math|<big|sum><rsup|n><rsub|i=1>>>）。缺省情况下，展示风格是关闭的。

    <item*|<menu|插入|数学|单行公式>或者<shortcut|(make-equation*)>>

    这个条目适合输入较长的公式，比如：

    <\equation*>
      x<rsup|n>+y<rsup|n>=z<rsup|n>,
    </equation*>

    公式的排版会占据整个段落。使用快捷键<shortcut|(numbered-toggle (focus-tree))>可以给公式加上编号（或者删去编号）。快捷键<shortcut|(variant-circulate (focus-tree) #t)>能够让公式在行内模式和单行模式间切换。

    <item*|<menu|插入|数学|多行公式>或者<shortcut|(make-eqnarray*)>>

    这个条目创建了一个<markup|eqnarray<math|<rsup|\<ast\>>>>，一个三列宽的类似表格的环境（详见<smart-ref|section:creating_tables>）。在这个环境中可以方便地输入多行公式，比如：

    <\eqnarray*>
      <tformat|<table|<row|<cell|x+0>|<cell|=>|<cell|x>>|<row|<cell|x+<around*|(|-x|)>>|<cell|=>|<cell|0>>|<row|<cell|x+y >|<cell|=>|<cell|y+x>>|<row|<cell|<around*|(|x+y|)>+z>|<cell|=>|<cell|x+<around*|(|y+z|)>>>>>
    </eqnarray*>

    第一列右对齐，第二列居中，第三列左对齐。 <markup|eqnarray<math|<rsup|\<ast\>>>>环境的典型用途就是显示多步计算：

    <\eqnarray*>
      <tformat|<table|<row|<cell|<around*|(|e<rsup|sin x>+sin<rsup|> e<rsup|x>|)><rprime|'>>|<cell|=>|<cell|<around*|(|e<rsup|sin x>|)><rprime|'>+<around*|(|sin e<rsup|x>|)><rprime|'>>>|<row|<cell|>|<cell|=>|<cell|<around*|(|sin x|)><rprime|'>e<rsup|sin x>+<around*|(|e<rsup|x>|)><rprime|'>cos e<rsup|x>>>|<row|<cell|>|<cell|=>|<cell|e<rsup|sin x> cos x\<noplus\>+e<rsup|x> cos e<rsup|x>,>>>>
    </eqnarray*>

    在这个例子中，大多数行的第一列是空着的。
  </description>

  <section|数学符号>

  使用<prefix|math:greek>输入希腊字母，比如，<key|math:greek a>输入<math|\<alpha\>>，<key|math:greek G>输入<math|\<Gamma\>>。类似地，<prefix|math:bold>， <prefix|math:cal>， <prefix|math:frak> 和 <prefix|math:bbb>可用来输入粗体，手写体，德文黑体和黑板粗体。例如，<shortcut|\<frak-m\>> 得到<math|\<frak-m\>>， <key|S-F6 R>得到<math|\<bbb-R\>>以及<shortcut|\<b-cal-Z\>>得到。

  使用<key|var>还可以从拉丁字符得到希腊字母。比如，<key|p var>得到<math|\<pi\>>。<key|var>键还可以在希腊字母间变换，比如，<key|math:greek p var> 和<key|p var var>都可以得到<math|\<varpi\>>。输入黑板粗体的另外一种方法是输入该大写字母两次。比如，<key|Z Z>得到<math|\<bbb-Z\>>。

  一些符号中包含了诸多变元。比如<key|\<less\>>得到<math|\<less\>>，<key|\<less\> var>得到<math|\<in\>>，<key|\<less\> var var>得到<math|\<subset\>>， <key|\<less\> var var var>得到<math|\<prec\>>等等。反向轮换可用<key|S-var>。即，<key|\<less\> var var S-var>等价于 <key|\<less\> var>。

  其它数学符号可通过自然的键组合得到。比如<key|- \<gtr\>>得到<math|<op|\<rightarrow\>>>，<key|- - \<gtr\>>得到<math|<op|\<longrightarrow\>>>和<key|\<gtr\> =>得到<math|<op|\<geqslant\>>>。类似地，<key|\| var ->得到<math|<op|\<vdash\>>>， <key|\| - \<gtr\>>得到<math|<op|\<mapsto\>>>以及<key|- \<gtr\> \<less\> ->得到<math|<op|\<rightleftarrows\>>>。一般地，在数学符号的输入过程中有如下规则:

  <\description>
    <item*|<key|tab>>在变元间轮换的键。比如，<key|\<gtr\> =>得到<math|<op|\<geqslant\>>>，而<key|\<gtr\> = var>得到<math|<op|\<geq\>>>。类似地，<key|\<less\> var var>得到<math|<op|\<subset\>>>， <key|\<less\> var var =>得到<math|<op|\<subseteq\>>>以及<key|\<less\> var var = var>得到<math|<op|\<subseteqq\>>>。<key|P var>得到<math|\<wp\>>以及<key|e var>得到常量<math|\<mathe\>=exp<around|(|1|)>>。

    <item*|<key|@>>用来将符号嵌入圈或者框中。比如<key|@ +>得到<math|<op|\<oplus\>>>以及<key|@ x>得到<math|<op|\<otimes\>>>。类似地，<key|@ var +>得到<math|<op|\<boxplus\>>>。

    <item*|<key|/>>用于否定。例如，<key|= />得到<math|<op|\<neq\>>>以及<key|\<less\> = />得到<math|<neg|\<leqslant\>>>。注意<key|\<less\> = var var />得到<math|<op|\<nleqq\>>>，而 <key|\<less\> = var var / var>得到<math|<op|\<lneqq\>>>。

    <item*|<key|!>>用于强制使得箭头的上标或下标置于箭头的竖直方向上。比如，<key|- - \<gtr\> ^ x>得到<math|<op|\<longrightarrow\><rsup|x> >>，而<key|- - \<gtr\> ! ^ x>得到<math|\<longrightarrowlim\><rsup|x>>。
  </description>

  逻辑关系<math|\<wedge\>>和<math|\<vee\>>通过<key|&>和<key|%>得到。操作符<math|\<cap\>>和<math|\<cup\>>是其自然而然的变元，可用<key|& var>和<key|% var>得到。许多杂七杂八的符号可通过<prefix|math:symbol>得到。

  注意到某些符号的数学意义不一样，然而长得很是相似；这类符号被称为<localize|homoglyphs>。比如竖直条\|可以是集合定义中的分隔符，如<math|R<rsup|\<gtr\>>=<around*|{|x\<in\>R\|x\<gtr\>0|}>>，也可以是二元关系整除，如<math|11\<divides\>1001>。往往，<localize|homoglyphs>和别的字符的字间空白是不同的。当我们用<math|x*y>表示乘法（通过<key|*>输入），或是用<math|sin x>表示函数应用（通过<key|space>输入），都使用了一个不可见的空白作为表示符，都是空白，但语义上截然不同，像这种不可见的<localize|homoglyphs>是最棘手的歧义问题。

  为了让<TeXmacs>自动处理你的文档以运行数学公式的语法检查等高级功能，我们鼓励用户在输入公式时注意到<localize|homoglyphs>的问题。更多信息，可参见<strong|数学符号的语义>（<smart-ref|section:semantics_of_mathematical_symbols>）。

  <section|主要数学结构>

  最主要的几个数学结构可使用<key|math>前缀以如下方式创建：

  <big-table|<descriptive-table|<tformat|<table|<row|<cell|快捷键>|<cell|目标>|<cell|例子>>|<row|<cell|<key|math $>>|<cell|文本>|<cell|<math|L=<around|{|x\|x<text|足够大>|}>>>>|<row|<cell|<key|math f>>|<cell|分式>|<cell|<math|<frac|a|b+c>>>>|<row|<cell|<key|math s>>|<cell|平方根>|<cell|<math|<sqrt|x+y>>>>|<row|<cell|<key|math S>>|<cell|<math|n>次方根>|<cell|<math|<sqrt|x<rsup|3>+y<rsup|3>|3>>>>|<row|<cell|<key|math n>>|<cell|否定>|<cell|<math|<neg|<frac|a|b+c>>>>>>>>|主要数学标记的创建>

  下面是撇和上下标：

  <big-table|<descriptive-table|<tformat|<table|<row|<cell|快捷键>|<cell|目标>|<cell|例子>>|<row|<cell|<key|'>>|<cell|撇号>|<cell|<math|f<rprime|'>> or <math|<around|(|g+h|)><rprime|'''>>>>|<row|<cell|<key|‘>>|<cell|反撇号>|<cell|<math|<lprime|‘>f>>>|<row|<cell|<key|_>>|<cell|下标>|<cell|<math|x<rsub|n>> or <math|x<rsub|i<rsub|3>>>>>|<row|<cell|<key|^>>|<cell|上标>|<cell|<math|x<rsup|2>>, <math|x<rsub|n><rsup|2>> or <math|\<mathe\><rsup|\<mathe\><rsup|x>>>>>|<row|<cell|<key|math l _>>|<cell|左下标>|<cell|<math|<lsub|2>x>>>|<row|<cell|<key|math l ^>>|<cell|左上标>|<cell|<math|<lsup|\<pi\>>x> or <math|<lsub|\<ast\>><lsup|\<ast\>>He<rsub|\<ast\>><rsup|\<ast\>>>>>>>>|撇、上下标的创建>

  另外一些重要的数学结构实际上是广义的表格，如矩阵、行列式等，详细请参见<strong|表格结构>（详见<smart-ref|section:creating_tables>）。

  <section|大型分隔符>

  数学公式中的括号应始终匹配：在你输入“(”时，<TeXmacs>会自动插入“)”。使用<menu|Edit|Preferences|Keyboard|Automatic brackets|Disable>以禁用此特性。注意: 文档中已有的括号可能会自动与你输入的括号匹配。

  有时，你不需要封闭的括号，或者你的括号匹配的种类不同。没有关系：如果光标正好在右括号的前面<math|<around*|(|a,b<cursor>|)>>，此时按下<key|]>可以得到表达式<math|<around|(|a,b|]><cursor>>。类似地，删除一个括号会导致其变为<strong|不可见括号>（见<smart-ref|section:semantics_of_mathematical_symbols>），然后你就可以使用任意类型左或者右括号去替换。<math|>

  默认地，括号的大小会随着其中公式的大小自动调整。使用<prefix|math:small>键前缀产生的小型分隔符大小不会随之改变，比如通过<key|A-(>输入的括号是不会自动调整大小的小型分隔符。你还可以使用<shortcut|(alternate-toggle (focus-tree))>让分隔符在大小之间切换。

  对某些分隔符，如 <math|\|>，其左右符号恰好一致。比如输入垂直方向上的竖条<key|\|>产生的是绝对的值。小竖条分隔符通过<shortcut|\|>得到，也可以是<key|\| var>。大竖条分隔符通过<shortcut|(math-separator "\|" #t)>。在<TeX>和<LaTeX>中，这类大型分隔符是不存在的；他们可以用来输入下列公式\ 

  <\equation*>
    <around|\<langle\>|<frac|a|b+c><mid|\|><frac|p|q+r><mid|\|><frac|a|b+c>|\<rangle\>>.
  </equation*>

  中间分隔符也是非常常见的一种分隔符。比如，二元关系整除可以通过<shortcut|\<divides\>>或 <key|\| var var var var>得到。

  在<TeXmacs>中，大型分隔符分为左分隔符，右分隔符和中间分隔符。默认地，(，[，{和<math|<around*|\<langle\>||\<nobracket\>>>是左分隔符； <math|)>，<math|]>，<math|}>和<math|\<rangle\>>是右分隔符。使用<prefix|math:left>，<prefix|math:right>和<prefix|math:middle>可以改变分隔符的状态。比如，<key|math:left )>产生的<math|)>，可以认为是大型左分隔符。

  有时候，你可能需要固定大小的大型分隔符，而不是自动调整。这可以通过改变分隔符之间的表达式大小的方法实现，具体是使用菜单项<menu|Format|Adjust|Resize object>。

  可以使用<key|\\ l e f t . return>输入一对不可见的括号。这对于计算性质的文本非常有用，特别是在公式不仅仅是显示的语义，还要照顾到其精度。还可以用<shortcut|(make-rigid)>将公式保护在固定框内，以防止公式被连字符强行断开。

  <section|大型算符>

  下面的快捷键用于输入较大的数学符号：

  <\big-table>
    <descriptive-table|<tformat|<cwith|3|7|2|2|cell-halign|c>|<cwith|3|7|4|4|cell-halign|c>|<cwith|4|7|1|1|cell-rborder|0.5ln>|<cwith|4|7|1|1|cell-bborder|0.5ln>|<cwith|4|7|1|1|cell-lborder|0.5ln>|<cwith|3|7|1|1|cell-lsep|1spc>|<cwith|3|7|1|1|cell-rsep|1spc>|<cwith|3|7|1|1|cell-bsep|1spc>|<cwith|3|7|1|1|cell-tsep|1spc>|<cwith|5|5|1|1|cell-rborder|0.5ln>|<cwith|5|5|1|1|cell-bborder|0.5ln>|<cwith|5|5|1|1|cell-lborder|0.5ln>|<cwith|5|5|1|1|cell-lsep|1spc>|<cwith|5|5|1|1|cell-rsep|1spc>|<cwith|5|5|1|1|cell-bsep|1spc>|<cwith|5|5|1|1|cell-tsep|1spc>|<cwith|3|3|1|1|cell-rborder|0.5ln>|<cwith|3|3|1|1|cell-bborder|0.5ln>|<cwith|3|3|1|1|cell-lborder|0.5ln>|<cwith|3|3|1|1|cell-lsep|1spc>|<cwith|3|3|1|1|cell-rsep|1spc>|<cwith|3|3|1|1|cell-bsep|1spc>|<cwith|3|3|1|1|cell-tsep|1spc>|<cwith|3|3|1|1|cell-rborder|0.5ln>|<cwith|3|3|1|1|cell-bborder|0.5ln>|<cwith|3|3|1|1|cell-lborder|0.5ln>|<cwith|3|3|1|1|cell-lsep|1spc>|<cwith|3|3|1|1|cell-rsep|1spc>|<cwith|3|3|1|1|cell-bsep|1spc>|<cwith|3|3|1|1|cell-tsep|1spc>|<cwith|4|7|3|3|cell-rborder|0.5ln>|<cwith|4|7|3|3|cell-bborder|0.5ln>|<cwith|3|7|3|3|cell-lsep|1spc>|<cwith|3|7|3|3|cell-rsep|1spc>|<cwith|3|7|3|3|cell-bsep|1spc>|<cwith|3|7|3|3|cell-tsep|1spc>|<cwith|5|5|3|3|cell-rborder|0.5ln>|<cwith|5|5|3|3|cell-bborder|0.5ln>|<cwith|5|5|3|3|cell-lsep|1spc>|<cwith|5|5|3|3|cell-rsep|1spc>|<cwith|5|5|3|3|cell-bsep|1spc>|<cwith|5|5|3|3|cell-tsep|1spc>|<cwith|3|3|3|3|cell-rborder|0.5ln>|<cwith|3|3|3|3|cell-bborder|0.5ln>|<cwith|3|3|3|3|cell-lsep|1spc>|<cwith|3|3|3|3|cell-rsep|1spc>|<cwith|3|3|3|3|cell-bsep|1spc>|<cwith|3|3|3|3|cell-tsep|1spc>|<cwith|3|3|3|3|cell-rborder|0.5ln>|<cwith|3|3|3|3|cell-bborder|0.5ln>|<cwith|3|3|3|3|cell-lsep|1spc>|<cwith|3|3|3|3|cell-rsep|1spc>|<cwith|3|3|3|3|cell-bsep|1spc>|<cwith|3|3|3|3|cell-tsep|1spc>|<cwith|2|2|2|2|cell-halign|c>|<cwith|2|2|4|4|cell-halign|c>|<cwith|2|2|1|1|cell-lsep|1spc>|<cwith|2|2|1|1|cell-rsep|1spc>|<cwith|2|2|1|1|cell-bsep|1spc>|<cwith|2|2|1|1|cell-tsep|1spc>|<cwith|2|2|1|1|cell-rborder|0.5ln>|<cwith|2|2|1|1|cell-bborder|0.5ln>|<cwith|2|2|1|1|cell-lborder|0.5ln>|<cwith|2|2|1|1|cell-lsep|1spc>|<cwith|2|2|1|1|cell-rsep|1spc>|<cwith|2|2|1|1|cell-bsep|1spc>|<cwith|2|2|1|1|cell-tsep|1spc>|<cwith|2|2|1|1|cell-rborder|0.5ln>|<cwith|2|2|1|1|cell-bborder|0.5ln>|<cwith|2|2|1|1|cell-lborder|0.5ln>|<cwith|2|2|1|1|cell-lsep|1spc>|<cwith|2|2|1|1|cell-rsep|1spc>|<cwith|2|2|1|1|cell-bsep|1spc>|<cwith|2|2|1|1|cell-tsep|1spc>|<cwith|2|2|3|3|cell-lsep|1spc>|<cwith|2|2|3|3|cell-rsep|1spc>|<cwith|2|2|3|3|cell-bsep|1spc>|<cwith|2|2|3|3|cell-tsep|1spc>|<cwith|2|2|3|3|cell-rborder|0.5ln>|<cwith|2|2|3|3|cell-bborder|0.5ln>|<cwith|2|2|3|3|cell-lsep|1spc>|<cwith|2|2|3|3|cell-rsep|1spc>|<cwith|2|2|3|3|cell-bsep|1spc>|<cwith|2|2|3|3|cell-tsep|1spc>|<cwith|2|2|3|3|cell-rborder|0.5ln>|<cwith|2|2|3|3|cell-bborder|0.5ln>|<cwith|2|2|3|3|cell-lsep|1spc>|<cwith|2|2|3|3|cell-rsep|1spc>|<cwith|2|2|3|3|cell-bsep|1spc>|<cwith|2|2|3|3|cell-tsep|1spc>|<cwith|1|1|2|2|cell-halign|c>|<cwith|1|1|4|4|cell-halign|c>|<cwith|1|-1|2|2|cell-rborder|1ln>|<table|<row|<cell|快捷键>|<cell|效果>|<cell|快捷键>|<cell|效果>>|<row|<cell|<key|symbol I>>|<cell|<math|<with|math-display|true|<big|int>>>>|<cell|<key|symbol O>>|<cell|<math|<with|math-display|true|<big|oint>>>>>|<row|<cell|<key|symbol P>>|<cell|<math|<with|math-display|true|<big|prod>>>>|<cell|<key|symbol A>>|<cell|<math|<with|math-display|true|<big|amalg>>>>>|<row|<cell|<key|symbol S>>|<cell|<math|<with|math-display|true|<big|sum>>>>|<cell|<key|symbol @ +>>|<cell|<math|<with|math-display|true|<big|oplus>>>>>|<row|<cell|<key|symbol @ x>>|<cell|<math|<with|math-display|true|<big|otimes>>>>|<cell|<key|symbol @ .>>|<cell|<math|<with|math-display|true|<big|odot>>>>>|<row|<cell|<key|symbol U>>|<cell|<math|<with|math-display|true|<big|cup>>>>|<cell|<key|symbol N>>|<cell|<math|<with|math-display|true|<big|cap>>>>>|<row|<cell|<key|symbol V>>|<cell|<math|<with|math-display|true|<big|vee>>>>|<cell|<key|symbol W>>|<cell|<math|<with|math-display|true|<big|wedge>>>>>>>>
  </big-table|大型算符>

  标记周围的浅蓝色小框显示了这些大型算符的作用域。

  积分符号由两种表示，其不同之处在于上下标的位置。默认地，我们使用如下方式:

  <\equation*>
    <big|int><rsub|0><rsup|\<infty\>><frac|\<mathd\> x|1+x<rsup|2>>.
  </equation*>

  另外一种

  <\equation*>
    <big|intlim><rsub|0><rsup|\<infty\>><frac|\<mathd\> x|1+x<rsup|2>>.
  </equation*>

  则可用快捷键<key|symbol L I>获得。类似地，使用快捷键<key|symbol L O>可得到<math|<big|oint>>，其中上下标的位置是第二种形式。

  <section|加宽的顶标>

  下表展示的是如何在符号乃至整个公式上打上顶标。一般来说，顶标会随着下面公式的加宽而加宽。

  <\big-table>
    <descriptive-table|<tformat|<cwith|3|8|3|3|cell-halign|c>|<cwith|3|8|5|5|cell-halign|c>|<cwith|4|8|1|1|cell-rborder|0.5ln>|<cwith|4|8|1|1|cell-bborder|0.5ln>|<cwith|4|8|1|1|cell-lborder|0.5ln>|<cwith|3|8|1|1|cell-lsep|1spc>|<cwith|3|8|1|1|cell-rsep|1spc>|<cwith|3|8|1|1|cell-bsep|1spc>|<cwith|3|8|1|1|cell-tsep|1spc>|<cwith|3|3|1|1|cell-rborder|0.5ln>|<cwith|3|3|1|1|cell-bborder|0.5ln>|<cwith|3|3|1|1|cell-lborder|0.5ln>|<cwith|3|3|1|1|cell-lsep|1spc>|<cwith|3|3|1|1|cell-rsep|1spc>|<cwith|3|3|1|1|cell-bsep|1spc>|<cwith|3|3|1|1|cell-tsep|1spc>|<cwith|3|3|1|1|cell-rborder|0.5ln>|<cwith|3|3|1|1|cell-bborder|0.5ln>|<cwith|3|3|1|1|cell-lborder|0.5ln>|<cwith|3|3|1|1|cell-lsep|1spc>|<cwith|3|3|1|1|cell-rsep|1spc>|<cwith|3|3|1|1|cell-bsep|1spc>|<cwith|3|3|1|1|cell-tsep|1spc>|<cwith|4|8|4|4|cell-rborder|0.5ln>|<cwith|4|8|4|4|cell-bborder|0.5ln>|<cwith|3|8|4|4|cell-lsep|1spc>|<cwith|3|8|4|4|cell-rsep|1spc>|<cwith|3|8|4|4|cell-bsep|1spc>|<cwith|3|8|4|4|cell-tsep|1spc>|<cwith|5|5|4|4|cell-rborder|0.5ln>|<cwith|5|5|4|4|cell-bborder|0.5ln>|<cwith|5|5|4|4|cell-lsep|1spc>|<cwith|5|5|4|4|cell-rsep|1spc>|<cwith|5|5|4|4|cell-bsep|1spc>|<cwith|5|5|4|4|cell-tsep|1spc>|<cwith|3|3|4|4|cell-rborder|0.5ln>|<cwith|3|3|4|4|cell-bborder|0.5ln>|<cwith|3|3|4|4|cell-lsep|1spc>|<cwith|3|3|4|4|cell-rsep|1spc>|<cwith|3|3|4|4|cell-bsep|1spc>|<cwith|3|3|4|4|cell-tsep|1spc>|<cwith|3|3|4|4|cell-rborder|0.5ln>|<cwith|3|3|4|4|cell-bborder|0.5ln>|<cwith|3|3|4|4|cell-lsep|1spc>|<cwith|3|3|4|4|cell-rsep|1spc>|<cwith|3|3|4|4|cell-bsep|1spc>|<cwith|3|3|4|4|cell-tsep|1spc>|<cwith|2|2|3|3|cell-halign|c>|<cwith|2|2|5|5|cell-halign|c>|<cwith|2|2|1|1|cell-lsep|1spc>|<cwith|2|2|1|1|cell-rsep|1spc>|<cwith|2|2|1|1|cell-bsep|1spc>|<cwith|2|2|1|1|cell-tsep|1spc>|<cwith|2|2|1|1|cell-rborder|0.5ln>|<cwith|2|2|1|1|cell-bborder|0.5ln>|<cwith|2|2|1|1|cell-lborder|0.5ln>|<cwith|2|2|1|1|cell-lsep|1spc>|<cwith|2|2|1|1|cell-rsep|1spc>|<cwith|2|2|1|1|cell-bsep|1spc>|<cwith|2|2|1|1|cell-tsep|1spc>|<cwith|2|2|1|1|cell-rborder|0.5ln>|<cwith|2|2|1|1|cell-bborder|0.5ln>|<cwith|2|2|1|1|cell-lborder|0.5ln>|<cwith|2|2|1|1|cell-lsep|1spc>|<cwith|2|2|1|1|cell-rsep|1spc>|<cwith|2|2|1|1|cell-bsep|1spc>|<cwith|2|2|1|1|cell-tsep|1spc>|<cwith|2|2|4|4|cell-lsep|1spc>|<cwith|2|2|4|4|cell-rsep|1spc>|<cwith|2|2|4|4|cell-bsep|1spc>|<cwith|2|2|4|4|cell-tsep|1spc>|<cwith|2|2|4|4|cell-rborder|0.5ln>|<cwith|2|2|4|4|cell-bborder|0.5ln>|<cwith|2|2|4|4|cell-lsep|1spc>|<cwith|2|2|4|4|cell-rsep|1spc>|<cwith|2|2|4|4|cell-bsep|1spc>|<cwith|2|2|4|4|cell-tsep|1spc>|<cwith|2|2|4|4|cell-rborder|0.5ln>|<cwith|2|2|4|4|cell-bborder|0.5ln>|<cwith|2|2|4|4|cell-lsep|1spc>|<cwith|2|2|4|4|cell-rsep|1spc>|<cwith|2|2|4|4|cell-bsep|1spc>|<cwith|2|2|4|4|cell-tsep|1spc>|<cwith|1|1|3|3|cell-halign|c>|<cwith|1|1|5|5|cell-halign|c>|<cwith|1|-1|3|3|cell-rborder|1ln>|<cwith|3|3|3|3|cell-halign|c>|<cwith|3|3|5|5|cell-halign|c>|<cwith|3|3|1|1|cell-lsep|1spc>|<cwith|3|3|1|1|cell-rsep|1spc>|<cwith|3|3|1|1|cell-bsep|1spc>|<cwith|3|3|1|1|cell-tsep|1spc>|<cwith|3|3|1|1|cell-rborder|0.5ln>|<cwith|3|3|1|1|cell-bborder|0.5ln>|<cwith|3|3|1|1|cell-lborder|0.5ln>|<cwith|3|3|1|1|cell-lsep|1spc>|<cwith|3|3|1|1|cell-rsep|1spc>|<cwith|3|3|1|1|cell-bsep|1spc>|<cwith|3|3|1|1|cell-tsep|1spc>|<cwith|3|3|1|1|cell-rborder|0.5ln>|<cwith|3|3|1|1|cell-bborder|0.5ln>|<cwith|3|3|1|1|cell-lborder|0.5ln>|<cwith|3|3|1|1|cell-lsep|1spc>|<cwith|3|3|1|1|cell-rsep|1spc>|<cwith|3|3|1|1|cell-bsep|1spc>|<cwith|3|3|1|1|cell-tsep|1spc>|<cwith|3|3|4|4|cell-lsep|1spc>|<cwith|3|3|4|4|cell-rsep|1spc>|<cwith|3|3|4|4|cell-bsep|1spc>|<cwith|3|3|4|4|cell-tsep|1spc>|<cwith|3|3|4|4|cell-rborder|0.5ln>|<cwith|3|3|4|4|cell-bborder|0.5ln>|<cwith|3|3|4|4|cell-lsep|1spc>|<cwith|3|3|4|4|cell-rsep|1spc>|<cwith|3|3|4|4|cell-bsep|1spc>|<cwith|3|3|4|4|cell-tsep|1spc>|<cwith|3|3|4|4|cell-rborder|0.5ln>|<cwith|3|3|4|4|cell-bborder|0.5ln>|<cwith|3|3|4|4|cell-lsep|1spc>|<cwith|3|3|4|4|cell-rsep|1spc>|<cwith|3|3|4|4|cell-bsep|1spc>|<cwith|3|3|4|4|cell-tsep|1spc>|<cwith|3|3|3|3|cell-rborder|1ln>|<cwith|4|4|5|5|cell-halign|c>|<cwith|4|4|4|4|cell-lsep|1spc>|<cwith|4|4|4|4|cell-rsep|1spc>|<cwith|4|4|4|4|cell-bsep|1spc>|<cwith|4|4|4|4|cell-tsep|1spc>|<cwith|4|4|4|4|cell-rborder|0.5ln>|<cwith|4|4|4|4|cell-bborder|0.5ln>|<cwith|4|4|4|4|cell-lsep|1spc>|<cwith|4|4|4|4|cell-rsep|1spc>|<cwith|4|4|4|4|cell-bsep|1spc>|<cwith|4|4|4|4|cell-tsep|1spc>|<cwith|4|4|4|4|cell-rborder|0.5ln>|<cwith|4|4|4|4|cell-bborder|0.5ln>|<cwith|4|4|4|4|cell-lsep|1spc>|<cwith|4|4|4|4|cell-rsep|1spc>|<cwith|4|4|4|4|cell-bsep|1spc>|<cwith|4|4|4|4|cell-tsep|1spc>|<cwith|5|5|5|5|cell-halign|c>|<cwith|5|5|4|4|cell-lsep|1spc>|<cwith|5|5|4|4|cell-rsep|1spc>|<cwith|5|5|4|4|cell-bsep|1spc>|<cwith|5|5|4|4|cell-tsep|1spc>|<cwith|5|5|4|4|cell-rborder|0.5ln>|<cwith|5|5|4|4|cell-bborder|0.5ln>|<cwith|5|5|4|4|cell-lsep|1spc>|<cwith|5|5|4|4|cell-rsep|1spc>|<cwith|5|5|4|4|cell-bsep|1spc>|<cwith|5|5|4|4|cell-tsep|1spc>|<cwith|5|5|4|4|cell-rborder|0.5ln>|<cwith|5|5|4|4|cell-bborder|0.5ln>|<cwith|5|5|4|4|cell-lsep|1spc>|<cwith|5|5|4|4|cell-rsep|1spc>|<cwith|5|5|4|4|cell-bsep|1spc>|<cwith|5|5|4|4|cell-tsep|1spc>|<cwith|1|-1|1|1|cell-halign|c>|<cwith|1|-1|4|4|cell-halign|c>|<cwith|1|-1|2|2|cell-halign|c>|<cwith|3|3|3|3|cell-halign|c>|<cwith|3|3|5|5|cell-halign|c>|<cwith|3|3|1|1|cell-lsep|1spc>|<cwith|3|3|1|1|cell-rsep|1spc>|<cwith|3|3|1|1|cell-bsep|1spc>|<cwith|3|3|1|1|cell-tsep|1spc>|<cwith|3|3|1|1|cell-rborder|0.5ln>|<cwith|3|3|1|1|cell-bborder|0.5ln>|<cwith|3|3|1|1|cell-lborder|0.5ln>|<cwith|3|3|1|1|cell-lsep|1spc>|<cwith|3|3|1|1|cell-rsep|1spc>|<cwith|3|3|1|1|cell-bsep|1spc>|<cwith|3|3|1|1|cell-tsep|1spc>|<cwith|3|3|1|1|cell-rborder|0.5ln>|<cwith|3|3|1|1|cell-bborder|0.5ln>|<cwith|3|3|1|1|cell-lborder|0.5ln>|<cwith|3|3|1|1|cell-lsep|1spc>|<cwith|3|3|1|1|cell-rsep|1spc>|<cwith|3|3|1|1|cell-bsep|1spc>|<cwith|3|3|1|1|cell-tsep|1spc>|<cwith|3|3|4|4|cell-lsep|1spc>|<cwith|3|3|4|4|cell-rsep|1spc>|<cwith|3|3|4|4|cell-bsep|1spc>|<cwith|3|3|4|4|cell-tsep|1spc>|<cwith|3|3|4|4|cell-rborder|0.5ln>|<cwith|3|3|4|4|cell-bborder|0.5ln>|<cwith|3|3|4|4|cell-lsep|1spc>|<cwith|3|3|4|4|cell-rsep|1spc>|<cwith|3|3|4|4|cell-bsep|1spc>|<cwith|3|3|4|4|cell-tsep|1spc>|<cwith|3|3|4|4|cell-rborder|0.5ln>|<cwith|3|3|4|4|cell-bborder|0.5ln>|<cwith|3|3|4|4|cell-lsep|1spc>|<cwith|3|3|4|4|cell-rsep|1spc>|<cwith|3|3|4|4|cell-bsep|1spc>|<cwith|3|3|4|4|cell-tsep|1spc>|<cwith|3|3|3|3|cell-rborder|1ln>|<cwith|3|3|1|1|cell-halign|c>|<cwith|3|3|4|4|cell-halign|c>|<cwith|3|3|2|2|cell-halign|c>|<cwith|4|4|5|5|cell-halign|c>|<cwith|4|4|4|4|cell-lsep|1spc>|<cwith|4|4|4|4|cell-rsep|1spc>|<cwith|4|4|4|4|cell-bsep|1spc>|<cwith|4|4|4|4|cell-tsep|1spc>|<cwith|4|4|4|4|cell-rborder|0.5ln>|<cwith|4|4|4|4|cell-bborder|0.5ln>|<cwith|4|4|4|4|cell-lsep|1spc>|<cwith|4|4|4|4|cell-rsep|1spc>|<cwith|4|4|4|4|cell-bsep|1spc>|<cwith|4|4|4|4|cell-tsep|1spc>|<cwith|4|4|4|4|cell-rborder|0.5ln>|<cwith|4|4|4|4|cell-bborder|0.5ln>|<cwith|4|4|4|4|cell-lsep|1spc>|<cwith|4|4|4|4|cell-rsep|1spc>|<cwith|4|4|4|4|cell-bsep|1spc>|<cwith|4|4|4|4|cell-tsep|1spc>|<cwith|4|4|4|4|cell-halign|c>|<cwith|5|5|5|5|cell-halign|c>|<cwith|5|5|4|4|cell-lsep|1spc>|<cwith|5|5|4|4|cell-rsep|1spc>|<cwith|5|5|4|4|cell-bsep|1spc>|<cwith|5|5|4|4|cell-tsep|1spc>|<cwith|5|5|4|4|cell-rborder|0.5ln>|<cwith|5|5|4|4|cell-bborder|0.5ln>|<cwith|5|5|4|4|cell-lsep|1spc>|<cwith|5|5|4|4|cell-rsep|1spc>|<cwith|5|5|4|4|cell-bsep|1spc>|<cwith|5|5|4|4|cell-tsep|1spc>|<cwith|5|5|4|4|cell-rborder|0.5ln>|<cwith|5|5|4|4|cell-bborder|0.5ln>|<cwith|5|5|4|4|cell-lsep|1spc>|<cwith|5|5|4|4|cell-rsep|1spc>|<cwith|5|5|4|4|cell-bsep|1spc>|<cwith|5|5|4|4|cell-tsep|1spc>|<cwith|5|5|4|4|cell-halign|c>|<cwith|4|5|3|3|cell-halign|c>|<cwith|4|5|1|1|cell-rborder|0.5ln>|<cwith|4|5|1|1|cell-bborder|0.5ln>|<cwith|4|5|1|1|cell-lborder|0.5ln>|<cwith|4|5|1|1|cell-lsep|1spc>|<cwith|4|5|1|1|cell-rsep|1spc>|<cwith|4|5|1|1|cell-bsep|1spc>|<cwith|4|5|1|1|cell-tsep|1spc>|<cwith|4|4|1|1|cell-rborder|0.5ln>|<cwith|4|4|1|1|cell-bborder|0.5ln>|<cwith|4|4|1|1|cell-lborder|0.5ln>|<cwith|4|4|1|1|cell-lsep|1spc>|<cwith|4|4|1|1|cell-rsep|1spc>|<cwith|4|4|1|1|cell-bsep|1spc>|<cwith|4|4|1|1|cell-tsep|1spc>|<cwith|4|5|3|3|cell-rborder|1ln>|<cwith|4|4|3|3|cell-halign|c>|<cwith|4|4|1|1|cell-lsep|1spc>|<cwith|4|4|1|1|cell-rsep|1spc>|<cwith|4|4|1|1|cell-bsep|1spc>|<cwith|4|4|1|1|cell-tsep|1spc>|<cwith|4|4|1|1|cell-rborder|0.5ln>|<cwith|4|4|1|1|cell-bborder|0.5ln>|<cwith|4|4|1|1|cell-lborder|0.5ln>|<cwith|4|4|1|1|cell-lsep|1spc>|<cwith|4|4|1|1|cell-rsep|1spc>|<cwith|4|4|1|1|cell-bsep|1spc>|<cwith|4|4|1|1|cell-tsep|1spc>|<cwith|4|4|1|1|cell-rborder|0.5ln>|<cwith|4|4|1|1|cell-bborder|0.5ln>|<cwith|4|4|1|1|cell-lborder|0.5ln>|<cwith|4|4|1|1|cell-lsep|1spc>|<cwith|4|4|1|1|cell-rsep|1spc>|<cwith|4|4|1|1|cell-bsep|1spc>|<cwith|4|4|1|1|cell-tsep|1spc>|<cwith|4|4|3|3|cell-rborder|1ln>|<cwith|5|5|3|3|cell-halign|c>|<cwith|5|5|1|1|cell-lsep|1spc>|<cwith|5|5|1|1|cell-rsep|1spc>|<cwith|5|5|1|1|cell-bsep|1spc>|<cwith|5|5|1|1|cell-tsep|1spc>|<cwith|5|5|1|1|cell-rborder|0.5ln>|<cwith|5|5|1|1|cell-bborder|0.5ln>|<cwith|5|5|1|1|cell-lborder|0.5ln>|<cwith|5|5|1|1|cell-lsep|1spc>|<cwith|5|5|1|1|cell-rsep|1spc>|<cwith|5|5|1|1|cell-bsep|1spc>|<cwith|5|5|1|1|cell-tsep|1spc>|<cwith|5|5|1|1|cell-rborder|0.5ln>|<cwith|5|5|1|1|cell-bborder|0.5ln>|<cwith|5|5|1|1|cell-lborder|0.5ln>|<cwith|5|5|1|1|cell-lsep|1spc>|<cwith|5|5|1|1|cell-rsep|1spc>|<cwith|5|5|1|1|cell-bsep|1spc>|<cwith|5|5|1|1|cell-tsep|1spc>|<cwith|5|5|3|3|cell-rborder|1ln>|<cwith|4|5|1|1|cell-halign|c>|<cwith|4|5|2|2|cell-halign|c>|<cwith|4|4|3|3|cell-halign|c>|<cwith|4|4|1|1|cell-lsep|1spc>|<cwith|4|4|1|1|cell-rsep|1spc>|<cwith|4|4|1|1|cell-bsep|1spc>|<cwith|4|4|1|1|cell-tsep|1spc>|<cwith|4|4|1|1|cell-rborder|0.5ln>|<cwith|4|4|1|1|cell-bborder|0.5ln>|<cwith|4|4|1|1|cell-lborder|0.5ln>|<cwith|4|4|1|1|cell-lsep|1spc>|<cwith|4|4|1|1|cell-rsep|1spc>|<cwith|4|4|1|1|cell-bsep|1spc>|<cwith|4|4|1|1|cell-tsep|1spc>|<cwith|4|4|1|1|cell-rborder|0.5ln>|<cwith|4|4|1|1|cell-bborder|0.5ln>|<cwith|4|4|1|1|cell-lborder|0.5ln>|<cwith|4|4|1|1|cell-lsep|1spc>|<cwith|4|4|1|1|cell-rsep|1spc>|<cwith|4|4|1|1|cell-bsep|1spc>|<cwith|4|4|1|1|cell-tsep|1spc>|<cwith|4|4|3|3|cell-rborder|1ln>|<cwith|4|4|1|1|cell-halign|c>|<cwith|4|4|2|2|cell-halign|c>|<cwith|5|5|3|3|cell-halign|c>|<cwith|5|5|1|1|cell-lsep|1spc>|<cwith|5|5|1|1|cell-rsep|1spc>|<cwith|5|5|1|1|cell-bsep|1spc>|<cwith|5|5|1|1|cell-tsep|1spc>|<cwith|5|5|1|1|cell-rborder|0.5ln>|<cwith|5|5|1|1|cell-bborder|0.5ln>|<cwith|5|5|1|1|cell-lborder|0.5ln>|<cwith|5|5|1|1|cell-lsep|1spc>|<cwith|5|5|1|1|cell-rsep|1spc>|<cwith|5|5|1|1|cell-bsep|1spc>|<cwith|5|5|1|1|cell-tsep|1spc>|<cwith|5|5|1|1|cell-rborder|0.5ln>|<cwith|5|5|1|1|cell-bborder|0.5ln>|<cwith|5|5|1|1|cell-lborder|0.5ln>|<cwith|5|5|1|1|cell-lsep|1spc>|<cwith|5|5|1|1|cell-rsep|1spc>|<cwith|5|5|1|1|cell-bsep|1spc>|<cwith|5|5|1|1|cell-tsep|1spc>|<cwith|5|5|3|3|cell-rborder|1ln>|<cwith|5|5|1|1|cell-halign|c>|<cwith|5|5|2|2|cell-halign|c>|<cwith|6|6|3|3|cell-halign|c>|<cwith|6|6|1|1|cell-rborder|0.5ln>|<cwith|6|6|1|1|cell-bborder|0.5ln>|<cwith|6|6|1|1|cell-lborder|0.5ln>|<cwith|6|6|1|1|cell-lsep|1spc>|<cwith|6|6|1|1|cell-rsep|1spc>|<cwith|6|6|1|1|cell-bsep|1spc>|<cwith|6|6|1|1|cell-tsep|1spc>|<cwith|6|6|3|3|cell-rborder|1ln>|<cwith|6|6|1|1|cell-halign|c>|<cwith|6|6|2|2|cell-halign|c>|<cwith|6|6|3|3|cell-halign|c>|<cwith|6|6|1|1|cell-rborder|0.5ln>|<cwith|6|6|1|1|cell-bborder|0.5ln>|<cwith|6|6|1|1|cell-lborder|0.5ln>|<cwith|6|6|1|1|cell-lsep|1spc>|<cwith|6|6|1|1|cell-rsep|1spc>|<cwith|6|6|1|1|cell-bsep|1spc>|<cwith|6|6|1|1|cell-tsep|1spc>|<cwith|6|6|3|3|cell-rborder|1ln>|<cwith|6|6|3|3|cell-halign|c>|<cwith|6|6|1|1|cell-lsep|1spc>|<cwith|6|6|1|1|cell-rsep|1spc>|<cwith|6|6|1|1|cell-bsep|1spc>|<cwith|6|6|1|1|cell-tsep|1spc>|<cwith|6|6|1|1|cell-rborder|0.5ln>|<cwith|6|6|1|1|cell-bborder|0.5ln>|<cwith|6|6|1|1|cell-lborder|0.5ln>|<cwith|6|6|1|1|cell-lsep|1spc>|<cwith|6|6|1|1|cell-rsep|1spc>|<cwith|6|6|1|1|cell-bsep|1spc>|<cwith|6|6|1|1|cell-tsep|1spc>|<cwith|6|6|1|1|cell-rborder|0.5ln>|<cwith|6|6|1|1|cell-bborder|0.5ln>|<cwith|6|6|1|1|cell-lborder|0.5ln>|<cwith|6|6|1|1|cell-lsep|1spc>|<cwith|6|6|1|1|cell-rsep|1spc>|<cwith|6|6|1|1|cell-bsep|1spc>|<cwith|6|6|1|1|cell-tsep|1spc>|<cwith|6|6|3|3|cell-rborder|1ln>|<cwith|6|6|1|1|cell-halign|c>|<cwith|6|6|2|2|cell-halign|c>|<cwith|6|6|3|3|cell-halign|c>|<cwith|6|6|1|1|cell-lsep|1spc>|<cwith|6|6|1|1|cell-rsep|1spc>|<cwith|6|6|1|1|cell-bsep|1spc>|<cwith|6|6|1|1|cell-tsep|1spc>|<cwith|6|6|1|1|cell-rborder|0.5ln>|<cwith|6|6|1|1|cell-bborder|0.5ln>|<cwith|6|6|1|1|cell-lborder|0.5ln>|<cwith|6|6|1|1|cell-lsep|1spc>|<cwith|6|6|1|1|cell-rsep|1spc>|<cwith|6|6|1|1|cell-bsep|1spc>|<cwith|6|6|1|1|cell-tsep|1spc>|<cwith|6|6|1|1|cell-rborder|0.5ln>|<cwith|6|6|1|1|cell-bborder|0.5ln>|<cwith|6|6|1|1|cell-lborder|0.5ln>|<cwith|6|6|1|1|cell-lsep|1spc>|<cwith|6|6|1|1|cell-rsep|1spc>|<cwith|6|6|1|1|cell-bsep|1spc>|<cwith|6|6|1|1|cell-tsep|1spc>|<cwith|6|6|3|3|cell-rborder|1ln>|<cwith|6|6|1|1|cell-halign|c>|<cwith|6|6|2|2|cell-halign|c>|<cwith|7|7|3|3|cell-halign|c>|<cwith|7|7|1|1|cell-rborder|0.5ln>|<cwith|7|7|1|1|cell-bborder|0.5ln>|<cwith|7|7|1|1|cell-lborder|0.5ln>|<cwith|7|7|1|1|cell-lsep|1spc>|<cwith|7|7|1|1|cell-rsep|1spc>|<cwith|7|7|1|1|cell-bsep|1spc>|<cwith|7|7|1|1|cell-tsep|1spc>|<cwith|7|7|3|3|cell-rborder|1ln>|<cwith|7|7|1|1|cell-halign|c>|<cwith|7|7|2|2|cell-halign|c>|<cwith|7|7|3|3|cell-halign|c>|<cwith|7|7|1|1|cell-rborder|0.5ln>|<cwith|7|7|1|1|cell-bborder|0.5ln>|<cwith|7|7|1|1|cell-lborder|0.5ln>|<cwith|7|7|1|1|cell-lsep|1spc>|<cwith|7|7|1|1|cell-rsep|1spc>|<cwith|7|7|1|1|cell-bsep|1spc>|<cwith|7|7|1|1|cell-tsep|1spc>|<cwith|7|7|3|3|cell-rborder|1ln>|<cwith|7|7|3|3|cell-halign|c>|<cwith|7|7|1|1|cell-lsep|1spc>|<cwith|7|7|1|1|cell-rsep|1spc>|<cwith|7|7|1|1|cell-bsep|1spc>|<cwith|7|7|1|1|cell-tsep|1spc>|<cwith|7|7|1|1|cell-rborder|0.5ln>|<cwith|7|7|1|1|cell-bborder|0.5ln>|<cwith|7|7|1|1|cell-lborder|0.5ln>|<cwith|7|7|1|1|cell-lsep|1spc>|<cwith|7|7|1|1|cell-rsep|1spc>|<cwith|7|7|1|1|cell-bsep|1spc>|<cwith|7|7|1|1|cell-tsep|1spc>|<cwith|7|7|1|1|cell-rborder|0.5ln>|<cwith|7|7|1|1|cell-bborder|0.5ln>|<cwith|7|7|1|1|cell-lborder|0.5ln>|<cwith|7|7|1|1|cell-lsep|1spc>|<cwith|7|7|1|1|cell-rsep|1spc>|<cwith|7|7|1|1|cell-bsep|1spc>|<cwith|7|7|1|1|cell-tsep|1spc>|<cwith|7|7|3|3|cell-rborder|1ln>|<cwith|7|7|1|1|cell-halign|c>|<cwith|7|7|2|2|cell-halign|c>|<cwith|7|7|3|3|cell-halign|c>|<cwith|7|7|1|1|cell-lsep|1spc>|<cwith|7|7|1|1|cell-rsep|1spc>|<cwith|7|7|1|1|cell-bsep|1spc>|<cwith|7|7|1|1|cell-tsep|1spc>|<cwith|7|7|1|1|cell-rborder|0.5ln>|<cwith|7|7|1|1|cell-bborder|0.5ln>|<cwith|7|7|1|1|cell-lborder|0.5ln>|<cwith|7|7|1|1|cell-lsep|1spc>|<cwith|7|7|1|1|cell-rsep|1spc>|<cwith|7|7|1|1|cell-bsep|1spc>|<cwith|7|7|1|1|cell-tsep|1spc>|<cwith|7|7|1|1|cell-rborder|0.5ln>|<cwith|7|7|1|1|cell-bborder|0.5ln>|<cwith|7|7|1|1|cell-lborder|0.5ln>|<cwith|7|7|1|1|cell-lsep|1spc>|<cwith|7|7|1|1|cell-rsep|1spc>|<cwith|7|7|1|1|cell-bsep|1spc>|<cwith|7|7|1|1|cell-tsep|1spc>|<cwith|7|7|3|3|cell-rborder|1ln>|<cwith|7|7|1|1|cell-halign|c>|<cwith|7|7|2|2|cell-halign|c>|<table|<row|<cell|快捷键>|<cell|例子>|<cell|加宽变元>|<cell|快捷键>|<cell|结果>>|<row|<cell|<key|math ~><todo|和系统快捷键冲突>>|<cell|<math|<wide|x|~>>>|<cell|<math|<wide|x+y|~>>>|<cell|<key|math '>>|<cell|<math|<wide|x|\<acute\>>>>>|<row|<cell|<key|math ^>>|<cell|<math|<wide|x|^>>>|<cell|<math|<wide|x+y|^>>>|<cell|<key|math ‘>>|<cell|<math|<wide|x|\<grave\>>>>>|<row|<cell|<key|math B>>|<cell|<math|<wide|x|\<bar\>>>>|<cell|<math|<wide|x+y|\<bar\>>>>|<cell|<key|math .>>|<cell|<math|<wide|x|\<dot\>>>>>|<row|<cell|<key|math V>>|<cell|<math|<wide|x|\<vect\>>>>|<cell|<math|<wide|AB|\<vect\>>>>|<cell|<key|math ">>|<cell|<math|<wide|x|\<ddot\>>>>>|<row|<cell|<key|math C>>|<cell|<math|<wide|x|\<check\>>>>|<cell|<math|<wide|x+y|\<check\>>>>|<cell|>|<cell|>>|<row|<cell|<key|math U>>|<cell|<math|<wide|x|\<breve\>>>>|<cell|<math|<wide|x+y|\<breve\>>>>|<cell|>|<cell|>>>>>
  </big-table|顶标的快捷键>

  使用键前缀<prefix|math:under>可将相应的顶标插入到表达式下面。比如，快捷键<key|math:under B x + y>可用于输入<math|<wide*|x+y|\<bar\>>>。

  <section|语义编辑工具><label|section:semantic_editing_facilities>

  自从<name|1.0.7.10>，<TeXmacs>新增了一些数学公式的语义编辑特性。合理使用这些特性，就能使您的公式至少在句法层面上保证正确。比如，在公式<math|a+b>中，计算机能识别<math|+>是作用在变量<math|a>和<math|b>上的运算符。注意这里所谓”语义”仅限于此，即<TeXmacs>不会去关注加法的数学本质。

  语义编辑需要用户注意一些额外的事物，至少是适应它们。比如，用<key|*>输入乘号和用<key|Space>输入函数是用户的需要了解且实践的知识。诚然，展现在图像上，这些操作的细节无法辨识，因为它们都是以空格的形式为用户所见。然而这些操作的语义显然截然不同。

  尽管通常情况下，就排版而言，语义正确的文档和以打印为目的的正式文档没有太多的区别。我们认为用户为此付出的努力是有价值的，具体理由如下

  <\itemize>
    <item>比如，当您输入的公式用于计算机的代数系统时，语义丰富的文档更显优势。

    <item>句法上正确的文档出现排版错误或者更复杂的数学错误的可能性更小。

    <item>对某些编辑操作，诸如剪切和粘贴，您可以更方便的选中句法上意义完整的子公式。

    <item>这降低了您使用非标准标记的可能性，非标准标记会增加您的作品潜在用户的阅读难度。
  </itemize>

  更进一步，其它语义相关的工具其实已经集成到了某些特性中，如语义搜索和替换或者互联网上的语义搜索。

  点击<menu|Edit|Preferences|Mathematics|Semantic editing>激活语义编辑工具。 在语义编辑模式下，您将使用到针对公式句法结构的结构化编辑特性。比如，<em|语义焦点><label|semantic-focus>通常是<with|font-series|bold|当前焦点>（见<smart-ref|section:typing_structured_text>）的子公式。又如，您只能选中句法上有意义的子公式。

  语义焦点的意义如下所述：首先，句法上正确的公式显示为绿色，错误的则为红色。这样您就可以在输入公式时迅速发现排版错误。其二，如果您对某个数学操作符或者关系的优先级存在任何疑问，从语义焦点便可以看出缺省优先级。具体地，将您的光标置于操作符的右边，则该操作符所作用的子表达式会高亮显示。在加法（或者更一般的结合算符）这个例子中，所有的被加数都会高亮显示。

  <section|常见错误和语法纠正>

  默认情况下，语义编辑模式“能够理解”最经典的数学符号。这是通过使用专门为主流数学设计的语法实现的。显然，使用固定的语法会导致下列问题：\ 

  <\itemize>
    <item>数学公式常常会包含一些<em|特别的>记号。例如，公式可能会含有一些文字或有含义的空格。另一个<with|font-shape|italic|特别的>记号的例子是符号序列<math|++-+-+>。这些情况下，用户应该<strong|明确注明>（见<smart-ref|section:semantic_editing_facilities>）公式的合适部分，这样这些公式才会在语义上有意义。

    <item>用来解释数学公式的<TeXmacs>语法可能在某些情况下不够完备。可以使用<TeXmacs>宏机制来自定义或扩展该语法。特定领域的符号可以写在一个专用的样式包里。
  </itemize>

  除了这些本质上难以避免的问题，下面是一些常见而且“容易犯”的错误，这些错误会导致语义关联到数学公式出现问题：

  <\itemize>
    <item>由于<TeXmacs>是一个所见即所得的编辑器，一些文档结构对用户来说是不可见的。比如，数学公式<math|x+y>的呈现意味着用到了斜体和特殊的空格。而对于公式<math|f<around*|(|x|)>>，很容易把右半个括号输入到公式外面，但看起来没什么不同。

    <item>许多数学符号是有歧义的。比如，<math|a*<around*|(|b+c|)>>通常会理解为<math|a\<cdot\><around*|(|b+c|)>>，而<math|f<around*|(|x+y|)>>则会理解为一个函数应用。在语义编辑模式，用户要消除这个歧义就需要手动用<key|*>加入乘号和<key|space>加入空格。乘法/函数应用歧义是语法错误的主要来源之一，因为许多用户不会注意不可见的区别。同样， <math|\<wedge\>>字形既可以表示“逻辑与”也可以表示“楔积”。这个“同形异义”问题在<strong|数学符号的语义>（<smart-ref|section:semantics_of_mathematical_symbols>)）一节给出了更详细的解释。\ 

    <item>有可能一段文字最初是用<LaTeX>或者老版本的<TeXmacs>写的。在这种情况下，文档不会包含大运算符范围内的括号匹配的信息。例如，在公式<math|<around*|[|x,y|[>>中，我们是否应该把第二个括号看成是右半个括号呢？而这是右侧开区间的法国标准记法。更一般地，在把语义与已有文档关联起来的时候，有可能会出现我们前面提到的各种问题。
  </itemize>

  在开启语义编辑模式之后，要检查一个公式是否是正确的，就要把光标移到公式内部，然后观察<strong|语义焦点>（见<smart-ref|section:semantic_editing_facilities>）的外框的颜色：绿色代表公式正确，红色代表存在错误。或者，如果你的焦点在一个数学公式上的话，可以点<menu|Focus|Preferences|Highlight incorrect formulas>，这样所有不正确的公式都会高亮，用红色方框标出。

  对于第二种“容易犯的”错误， <TeXmacs>提供了一个自动语法修正器。把光标焦点放在公式上之后，就可以用<menu|Edit|Correct|Correct all>来修正你文档中所有的公式，或只修正选中部分的公式。 如果启用了版本工具，可以用<menu|Edit|Correct|Correct manually>来查看原文档和修正过的文档的差异。你可以用版本工具来对比这些差异，并选择合适的版本。

  具体用哪种算法来修正可以通过<menu|Edit|Preferences|Mathematics|Manual correction>来选择：

  <\description>
    <item*|删除多余的不可见运算符>该算法用于删除任何多余的函数或乘法。例如，习惯于编辑ASCII文件的用户通常在二进制中缀周围键入空格，例如加法。此算法将删除此类“函数空格”。

    <item*|插入缺少的不可见运算符>在<LaTeX>中，从来不会区分乘法和函数。当导入一个<LaTeX>文档的时候，检测和加入缺少的乘法和函数空格就是十分重要的。

    <item*|同形字符替换>该算法可以对视觉上相似但语义上不同的符号做一些其它的有用替换。比如，反斜杠<math|\\>在合适的情况下会替换为二元集合差中缀运算（如在<math|X\<setminus\>Y>中）。
  </description>

  在<menu|Edit|Preferences|Mathematics|Automatic correction>，还可以选择打开文件时默认应用的修正算法。在导入<LaTeX>文件的时候，总是会运行一遍修正算法的。

  修正过语法之后，剩下的错误就是真正的笔误或非标准或不支持的符号了。我们也会发现，“正确的”公式不一定就是表示想要的意思。要想检查是否真的表示想要的含义，就只能在输入公式的时候注意一下了。

  <section|数学符号的语义><label|section:semantics_of_mathematical_symbols>

  <TeXmacs>中的数学符号都有一些属性，这些属性对应于他们想要表示的含义。例如， <TeXmacs>能够知道<math|<op|+>>是一个中缀运算符，!是一个后缀，以及分隔符。

  重要的数学常量<math|\<mathe\>=2.71828\<cdots\>>, <math|\<mathpi\>=3.14159\<cdots\>>和<math|\<mathi\>>在<TeXmacs>中是用特殊的符号表示的。这些符号和纯粹的字符<math|e>, <math|\<pi\>>和<math|i>有着不同的字形，可以通过快捷键<shortcut|\<mathe\>>, <shortcut|\<mathpi\>>和<shortcut|\<mathi\>>来输入。我们建议系统性地使用这些快捷键。

  相反，语义上不同的符号可能在字形上很相像。比如<math|f<around|(|x,y|)>>中的逗号分隔符，与<math|3\<comma\>14159\<cdots\>>中的小数逗号意义完全不同。请注意，这两个符号的间距规则是不一样的。语义不同但字形相同的符号称作<localize|homoglyphs>。 注意我们的语义是纯语法的：例如，<math|+>中缀通常用于加法，但有时也用来连接字符串。然而，这两种用法在语法上没有区别，因为<math|+>符号仍然是一个二元中缀，在与其他符号的优先级上，两者也是一致的。

  最容易混淆的同形字符是<TeXmacs>支持的非可见字符:

  <\itemize>
    <item>乘积，输入<key|*>。例如：<math|a*b>。

    <item>函数，输入<key|space>。例如：<math|sin x>。

    <item>非可见分隔符，输入<shortcut|\<nocomma\>>。例如：矩阵<math|A=<around|(|a<rsub|i\<nocomma\>j>|)>>。

    <item>非可见加法，输入<shortcut|\<noplus\>>。例如：<math|17\<noplus\><frac*|3|8>>。

    <item>非可见符号，输入<shortcut|\<nosymbol\>>。例如：递增 <math|\<nosymbol\>+1>。

    <item><label|nobracket>非可见括号（主要用于内部情况）。一组匹配的非可见括号用<key|( var>输入。
  </itemize>

  再一次建议大家输入这些非可见符号的时候格外小心。尤其是区分乘法和函数的时候要注意，因为没有100%准确的方法来区分这二者（我们前面已经提到了<math|a<around|(|b+c|)>>和<math|f<around|(|x+y|)>>）。

  <TeXmacs>支持两种非常通用的输入同形字符的方式。一方面，我们依赖于标准变体系统。例如，<math|\<times\>>和<math|\<ast\>>分别通过<shortcut|\<times\>>和<shortcut|\<ast\>>来得到。在表<nbsp><reference|homoglyph-table>中我们给出了<TeXmacs>支持的同形字符的完整列表。

  <big-table|<block|<tformat|<table|<row|<cell|快捷键>|<cell|字形>|<cell|例子>|<cell|语义>>|<row|<cell|<key|*>>|<cell|>|<cell|<math|a*b>>|<cell|乘法>>|<row|<cell|<key|space>>|<cell|>|<cell|<math|sin x>>|<cell|函数>>|<row|<cell|<shortcut|\<nocomma\>>>|<cell|>|<cell|<math|a<rsub|i\<nocomma\>j>=a<rsub|j\<nocomma\>i>>>|<cell|不可见分隔符>>|<row|<cell|<shortcut|\<noplus\>>>|<cell|>|<cell|<with|mode|math|17\<noplus\><frac*|3|8>>>|<cell|不可见加法>>|<row|<cell|<shortcut|\<nosymbol\>>>|<cell|>|<cell|<math|\<nosymbol\>+1>>|<cell|不可见符号>>|<row|<cell|<key|( var>>|<cell|>|<cell|<math|\<Phi\>\<equiv\><around*|\<nobracket\>|\<forall\>x,P<around*|(|x|)>|\<nobracket\>>>>|<cell|不可见括号>>|<row|<cell|<key|\|>>|<cell|<math|\|>>|<cell|<math|<around*|\||-x|\|>=<around*|\||x|\|>>>|<cell|绝对值>>|<row|<cell|<key|\| var>>|<cell|<math|\|>>|<cell|<math|<around*|{|x\<in\>\<bbb-R\>\|x\<gtr\>0|}>>>|<cell|分隔竖线>>|<row|<cell|<key|\| var var>>|<cell|<math|\|>>|<cell|<math|<around*|\<langle\>|a<rsub|i><rsup|2><mid|\|>a<rsub|j><rsup|2>|\<rangle\>>>>|<cell|可拉伸的中间竖线>>|<row|<cell|<key|\| var var var var>>|<cell|<math|\|>>|<cell|<math|11\<divides\>1001>>|<cell|整除关系>>|<row|<cell|<key|,>>|<cell|,>|<cell|<math|f<around*|(|x,y|)>>>|<cell|逗号分隔符>>|<row|<cell|<key|, var>>|<cell|,>|<cell|<math|123\<comma\>456>>|<cell|十进制数字逗号>>|<row|<cell|<key|.>>|<cell|.>|<cell|<math|123.456>>|<cell|十进制数字小数点>>|<row|<cell|<key|. var>>|<cell|.>|<cell|<math|\<mathlambda\>x\<point\>x<rsup|2>>>|<cell|点号连接符>>|<row|<cell|<key|* var var var>>|<cell|<math|\<cdot\>>>|<cell|<math|\<b-v\>\<cdot\>\<b-w\>>>|<cell|点乘>>|<row|<cell|<key|. var var>>|<cell|<math|\<cdummy\>>>|<cell|<math|\<cdummy\>+1>>|<cell|Dummy通配符>>|<row|<cell|<key|:>>|<cell|<math|:>>|<cell|<math|<around*|{|x\<in\>E:P<around*|(|x|)>|}>>>|<cell|分隔符>>|<row|<cell|<shortcut|\<of\>>>|<cell|<math|\<of\>>>|<cell|<math|x\<of\><math-ss|Int>>>|<cell|类型满足>>|<row|<cell|<shortcut|\<over\>>>|<cell|<math|\<over\>>>|<cell|<math|121\<over\>11=11>>|<cell|除法>>|<row|<cell|<key|\\ var>>|<cell|<math|\\>>|<cell|<math|\\x>>|<cell|反斜杠>>|<row|<cell|<key|\\ var var>>|<cell|<math|\\>>|<cell|<math|\<bbb-N\><rsup|\<gtr\>>=\<bbb-N\>\<setminus\><around*|{|0|}>>>|<cell|集合减法>>|<row|<cell|<key|&>>|<cell|<math|\<wedge\>>>|<cell|<math|1=1\<wedge\>2=2>>|<cell|逻辑与>>|<row|<cell|<key|* &>>|<cell|<math|\<exterior\>>>|<cell|<math|\<mathd\>x\<exterior\>\<mathd\>y>>|<cell|楔积>>>>>|<label|homoglyph-table><TeXmacs>支持的同形异义字符.>

  <section|定制数学语义>

  我们已经尽可能地支持了大多数经典的数学符号。然而，用户有时候需要自定义非标准语义的数学符号。而且，某些区域也可能需要一些未被支持的特殊符号。

  <TeXmacs>提供了一个非常简单的<markup|syntax>原语，以便用户手动覆盖公式的默认句法语义。假定语义编辑功能已经开启，快捷键<shortcut|(make 'syntax)>或菜单项<menu|Insert|Semantics|Other>可插入<markup|syntax>原语。它的第一个参数是公式应该显示的模样，参数二则是公式内在的语义。

  比如，如果我们输入<math|\<cal-R\>>作为参数一，<math|\<less\>>作为参数二，那么<math|\<cal-R\>>将被解释为二元关系。更进一步，<math|\<cal-R\>>周围空格分布已经变了，可以认为是在模拟<math|\<less\>>周围的空格分布。在这个特例中，我们也可以使用<markup|math-relation>原语得到等价的结果。大部分标准操作符都可从菜单<menu|Insert|Semantics>找到，或者使用<prefix|math:syntax>键前缀。特别地，您可以使用<shortcut|(make 'math-ignore)>简单地忽略一个公式(FIXME)，使用<shortcut|(make 'math-ordinary)>将公式变成普通符号。

  <markup|syntax>原语与<TeXmacs>宏的结合异常灵活强大。比如，考虑这个公式<math|C=1/2*\<mathpi\>*\<mathi\>*<big|oint>f<around*|(|z|)>*\<mathd\> z>。<math|1/2*\<mathpi\>*\<mathi\>>很有可能应当解释为<math|1/<around*|(|2*\<mathpi\>*\<mathi\>|)>>而不是<math|<around*|(|1/2|)>*\<mathpi\>*\<mathi\>>。因此我们往往使用常量<math|2*\<mathpi\>*\<mathi\>>。首先，需要定义宏<markup|twopii>

  <\tm-fragment>
    <inactive|<assign|twopii|<inactive|<macro|<inactive|<syntax|<math|2*\<pi\>*\<mathi\>>|<math|(2*\<pi\>*\<mathi\>)>>>>>>>
  </tm-fragment>

  用户可以根据自己的偏好将这些宏聚合在一个宏包里面。未来的<TeXmacs>将提供特定区域所需符号的样式包。

  我们注意到定义公式语义的方法往往有多种。比如我们可以这样重定义<markup|twopii>这个宏:

  <\tm-fragment>
    <inactive|<assign|twopii|<inactive|<macro|<math|<around*|\<nobracket\>|2*\<mathpi\>*\<mathi\>|\<nobracket\>>>>>>>
  </tm-fragment>

  我们在<math|2*\<mathpi\>*\<mathi\>>外插入了一对不可见的括号。类似地，在公式

  <\equation*>
    \<mathe\><rsup|<sqrt|x>+\<mathe\><rsup|<sqrt|log x>+\<mathe\><rsup|<sqrt|log log x>+<math-ordinary|\<udots\>\<ddots\>>+log log log x>+log log x>+log x>,
  </equation*>

  我们可以选中整个公式，然后使用<shortcut|(make 'math-ordinary)>赋上一个普通符号的值。然而，更优美的解决方案是，只选中子公式<math|<math-ordinary|\<udots\>\<ddots\>>>，再赋上普通符号的值。另外的例子是早先提到的符号序列<math|++-+\<nocomma\>-+>。可在不同的符号间使用<key|, space>快捷键插入不可见的分隔符使得这个序列可被正确的解释。

  <chapter|表格处理>

  表格实际上为我们提供了一种复杂而通用的对齐标记的方法。它既可以用来呈现数据，也可以用于计算机程序和网页的排版。<with|font|roman|<TeXmacs>>提供了丰富的参数以精确控制表格及单元格的样式。

  <section|创建表格><label|section:creating_tables>

  你可以使用<menu|插入|表格>或者以下快捷键来创建表格：

  <\description>
    <item*|<key|table N t>>创建普通无框表格。

    <item*|<key|table N T>>创建居中无框表格。

    <item*|<key|table N b>>创建普通有框表格。

    <item*|<key|table N B>>创建居中有框表格。
  </description>

  在数学模式下，提供如下类表格结构：

  <\description>
    <item*|<key|table N m>>创建一个矩阵<glossary-explain|矩阵|matrix>。

    <item*|<key|table N d>>创建一个行列式。

    <item*|<key|table N c>>创建一个选择<glossary-explain|选择|choice list>。
  </description>

  下面演示的是普通表格，居中有框表格和矩阵。下面的带标题的小表格是通过<menu|插入|表格|小表格标题>得到的。小表格允许你将多个表格并列排在一行上，而大表格一行只能有一个。通过<menu|插入|表格|大表格标题>可插入大表格。<vspace|0.5fn>

  <small-table|<tabular|<tformat|<table|<row|<cell|boom>|<cell|tree>>|<row|<cell|hallo>|<cell|hello>>|<row|<cell|wiskunde>|<cell|mathematics>>>>>|普通无框表格><small-table|<block*|<tformat|<table|<row|<cell|boom>|<cell|tree>>|<row|<cell|hallo>|<cell|hello>>|<row|<cell|wiskunde>|<cell|mathematics>>>>>|居中有框表格><small-table|<math|<matrix|<tformat|<table|<row|<cell|a>|<cell|b>>|<row|<cell|c>|<cell|d>>>>>>|矩阵>

  <vspace|0.5fn>还有其他的类表格环境块，除此之外新的环境块也可以由用户自己创建。比如，通过<menu|插入|数学|多行公式>或者<key|math &>，你可以进入<markup|eqnarray<math|<rsup|\<ast\>>>>环境块。在此环境块下，关注数学排版的用户可以轻易地对齐一组等式。例如：

  <\eqnarray*>
    <tformat|<table|<row|<cell|sin <around*|(|f<around*|(|x|)>g<around*|(|x|)>|)><rprime|'>>|<cell|=>|<cell|<around*|(|f<around*|(|x|)>g<around*|(|x|)>|)><rprime|'>cos <around*|(|f<around*|(|x|)>g<around*|(|x|)>|)>>>|<row|<cell|>|<cell|=>|<cell|<around*|(|f<rprime|'><around*|(|x|)>g<around*|(|x|)>+f<around*|(|x|)>g<rprime|'><around*|(|x|)>|)>cos<around*|(|f<around*|(|x|)>g<around*|(|x|)>|)>>>>>
  </eqnarray*>

  新创建一个表格时，默认大小为最小（一般是1<math|\<times\>>1），且所有单元格都是空的。通过快捷键 <shortcut|(structured-insert-left)>，<shortcut|(structured-insert-right)>，<shortcut|(structured-insert-up)>和<shortcut|(structured-insert-down)>可以插入新列和新行。比如说，<shortcut|(structured-insert-right)>在当前光标所在位置的右边插入新列，详情参见下图。你也可以用<key|return>在当前光标所在位置的下面插入新行。

  <\big-figure>
    <\equation*>
      <matrix|<tformat|<table|<row|<cell|a<cursor>>|<cell|b>>|<row|<cell|c>|<cell|d>>>>><space|2em>\<longrightarrow\><space|2em><matrix|<tformat|<table|<row|<cell|a>|<cell|<cursor>>|<cell|b>>|<row|<cell|c>|<cell|>|<cell|d>>>>>
    </equation*>
  <|big-figure>
    一个在矩阵中插入新列的例子。如果光标在左边的矩阵所示位置处，此时按下<shortcut|(structured-insert-right)>所得到的即右边的矩阵。
  </big-figure>

  <section|格式化模式>

  在<TeXmacs>中，可以为任意单元格设定格式。比如，你可以为某个单元格设定背景颜色，也可以使整列水平居中。默认地，格式化命令在当前所在单元格上生效，你可以在<menu|Cell|Operation mode>中更改操作模式。下列模式可供选择：

  <\description>
    <item*|<key|table m c>>只对所在单元格生效

    <item*|<key|table m h>>只对所在行生效

    <item*|<key|table m v>>只对所在列生效

    <item*|<key|table m t>>对整个表格生效
  </description>

  也可以使用鼠标选中一个矩形区域，再在这个区域上执行操作。

  <section|对齐>

  在水平或垂直方向上对齐单元格是最常用的格式化操作。可以使用<shortcut|(geometry-left)>， <shortcut|(geometry-right)>， <shortcut|(geometry-up)> 和 <shortcut|(geometry-down)>这些快捷键迅速对单元格执行左，右，上，下对齐。

  您也可以在菜单条目<menu|cell|水平对齐>和<menu|cell|竖直对齐>中完成上述操作。相应的快捷键是 <key|table h><render-key|<math|x>> 和 <key|table v ><render-key|<math|x>>。

  类似地，您或许还需要调整表格及其周遭文字相对位置。此时请选择菜单项<menu|table|水平对齐>和<menu|表格|竖直对齐>。相应的快捷键是<key|table H><render-key|<math|x>> 和 <key|table V><render-key|<math|x>>。

  请您注意表格和单元格作用对象的区别，以及上面快捷键中的<render-key|<math|x>>的含义。<render-key|<math|x>>本身并不是一个键，分别用<key|l> <key|r> <key|t> <key|b> <key|c>替换时，各自表示左、右、上、下和居中对齐。

  <section|大小>

  使用<menu|Table|Cell width|Set width>和<menu|Table|Cell height|Set height>指定单元格的宽度和高度。实际上，宽度（或者高度）由以下三种模式指定：

  <\description>
    <item*|最小模式>实际的宽度<math|=>指定宽度和单元格中内容宽度的较小值

    <item*|固定模式>直接指定实际宽度

    <item*|最大模式>实际宽度=指定宽度和单元格中内容宽度的较大值
  </description>

  边界和补白决定了单元格和其中内容的相对位置。

  使用<menu|Table|Special table properties>指定整个表格的宽度和高度。特别地，你还可以使表格正好延伸至与段落等宽。当你对整个表格指定宽度或者高度时，还可以使用<menu|Table|Special cell properties|Distribute unused space>。默认地，未使用空隙将被平均分配。

  <section|边界和背景色>

  您可以自由指定单元格上下左右四个方向上的边界宽度和补白大小（参见<menu|cell|border>）。相应的快捷键分别是<key|table b><render-key|<math|x>>和<key|table p ><render-key|<math|x>>。

  单元格默认的边界宽度是1ln，即当前字体的标准宽度（比如分式中间那一行的宽度）。水平方向上默认的单元格补白大小为1spc，即当前字体下空格的宽度。垂直方向上默认的单元格补白大小为1sep，即当前两个闭合区域之间标准的最小距离。

  单元格的背景色可在菜单项<menu|cell|background color>中指定。

  整个表格的边界和补白可在<menu|table|border>和<menu|table|padding>中指定。其快捷键和相应的单元格的快捷键相同。特别注意的是，在这种情况下，补白是是在边界之外。

  <section|高级特性>

  在菜单中，您还会发现许多表格的特性。下面是这些特性的简介：

  <\itemize>
    <item>改变单元格的延伸属性，以使其边界侵占其右或者其下单元格，输入n+1则侵占其右或其下n个单元格

    <item>在单元格中创建子表格

    <item>文本高度修正，以使基准对齐

    <item>单元格内容的水平字符连接以及整个表格的垂直字符连接

    <item>将多行多列单元格合并，这样合并后大单元格的边界就会是剩下单元格的边界了

    <item>反激活表格，以显示其“源码”

    <item>指定表格的模板单元格。这样，此后新建的单元格格式属性与模板的相同

    <item>指定表格的最小和最大尺寸，这对接下来的编辑非常有帮助。（在撰写表格宏时也非常实用）
  </itemize>

  目前，所有的表格其实大多是在<markup|tabular>， <markup|block>， <markup|matrix>等环境块下。在撰写您自己的表格宏时，可以使用<menu|table|special|Extract format>从选中的表格导出格式。

  <chapter|链接和内容自动生成>

  <section|创建标签，链接和参考>

  通过<key|Meta+!>或者<menu|插入|链接|标签>创建新的未激活标签，通过<key|Meta+?>或者<menu|插入|链接|参考>创建对应的参考。在输入标签或者参考的名字后，莫忘按下回车键<hlink|激活|../text/keyboard/man-hybrid.zh.tm>。在编辑参考的名字时，按下<key|Tab>可以自动补全。对小节加标签时，建议加在小节标题后。给单行公式加标签时，建议加在公式前。给多行公式加标签时，建议加在公式编号后。回顾一下，按下<key|Ctrl+#>可以退出或进入编号环境。

  通过<key|inactive \<gtr\>>或者<menu|Insert|Link|Hyperlink>插入超链接。第一个域填写的是相关的文本，激活后显示为蓝色。第二个域包含了超链接。超链接可以是本地文档的路径，也可以是网络上文档的地址。使用<verbatim|#<with|font-shape|italic|label>>作为超链接则会指向当前文档中的标签，使用<verbatim|<with|font-shape|italic|url>#<with|font-shape|italic|label>>则指向url所定位到的文档中标签的位置。<label|test>

  类似地，通过<key|inactive *>或者<menu|Insert|Link|Action>可以把一个动作关联到一段文本或者图片上。第二个域填写的是一个Guile/Scheme脚本命令。回车激活后，双击这个动作链接，命令就被执行了。为了系统安全，有些脚本会被拒绝执行。<TeXmacs>默认会弹出对话框询问是否执行，但可以在<menu|Preferences|Security>中更改这一默认行为。注意，这条Guile/Scheme命令

  <\verbatim>
    \ \ \ \ (system "shell-command")
  </verbatim>

  会将<verbatim|shell-command>作为shell命令执行。

  通过<key|inactive i>或者<menu|Insert|Link|Include>可以直接将其它文档的内容包含到当前文档中。这意味着，如果你在那些被包含的文档中做了更改，那么这些更改会自动地更新到当前的文档中。

  <section|插入图片>

  通过<menu|Insert|Image>在文档中插入图片，<TeXmacs>支持这些图片格式： <verbatim|ps>， <verbatim|eps>， <verbatim|tif>， <verbatim|pdf>， <verbatim|pdm>， <verbatim|gif>， <verbatim|ppm>， <verbatim|xpm>和<verbatim|fig>。 <TeXmacs>使用<verbatim|gs>即<name|Ghostscript>来渲染postscript图像。如果你还没有安装<name|Ghostscript>，请安装这个软件，并确认<shell|gs>命令可以直接在终端使用。

  目前其他格式的文件是通过<verbatim|tiff2ps>， <verbatim|pdf2ps>， <verbatim|pnmtops>， <verbatim|giftopnm>， <verbatim|ppmtogif>， <verbatim|xpmtoppm>这些脚本转换的。如果你的系统上没有安装这些脚本，请联系你的系统管理员。

  图片默认是以实际大小显示，并和底部对齐。图片的宽度、高度以及对齐时偏移量可在插入图片时弹出的对话框中指定。

  <\itemize>
    <item>如果指定了新的宽度，而没有指定高度，则图片会保持宽度和高度的比例（反之亦成立）。比如指定宽度为<verbatim|1par>就可以让图片的宽度正好等于段落的宽度，而高度会依比例自动调整。

    <verbatim|w> 和 <verbatim|h> 可以作为指定图片大小的单位，比如 <verbatim|2w> 表示是默认宽度的两倍，而 <verbatim|2h> 则表示默认高度的两倍。

    <item>在指定图片的对齐的时候，可以用 <verbatim|w> 和 <verbatim|h> 表示宽度和高度显示的大小（注意此时这两个单位已经不再表示图片的实际宽度和高度了）。例如，给y方向上的偏移赋值为<verbatim|0.5h>，将使图片在竖直方向上向上平移一半的高度。
  </itemize>

  <big-figure|<image|<tuple|<#>|xpm>|60px|56px||0.5h><image|<tuple||xpm>|60px|56px|0.5w|>|左图的偏移为<verbatim|(0w,0.5h)>，右图的偏移为<verbatim|(0.5w,0h)>>

  关于如何编辑以及插入带有<LaTeX>公式的图片，请参考本文档英文<hlink|原文|man-images.en.tm>的最后一段。

  <section|生成目录>

  只要你以正确的方式撰写好文档，生成目录非常容易。只要将你的光标置于目录要生成的位置，然后点击<menu|插入|自动|目录>。

  接着是生成目录，首先要让文档分页显示，在<menu|Document|Page...>的格式一栏下的屏幕渲染选项中选择paper即可，这样每一页就有了一个可供引用的页码。再点击<menu|文档|更新|全部>或者<menu|文档|更新|目录>就生成了目录。注意： 可能需要重复更新多次，直到目录没有变化为止。因为每一次更新后，页码都可能会由于目录大小的改变而变化！

  <section|编制参考文献>

  <subsection|用参考文献条目编辑文件>

  <TeXmacs> 使用 <BibTeX> 模型来处理其参考文献。关于 <BibTeX> 的手册可以很容易地在网络的各个地方找到。 <BibTeX> 文件既可以使用<TeXmacs> 本身输入和编辑，也可以使用外部工具。一些外部工具提供了在网络搜索和检索文献条目的功能，这可能是有时选择这些工具的原因。<TeXmacs> \ 实现了对 <BibTeX> 文件的良好转换器，因此可以很容易地与多个编辑器结合使用。

  内置的 <BibTeX> 文件编辑器会自动用于具有 .bib 扩展名的文件。可以使用<menu|Insert|Database entry> <todo|菜单没找到>轻松添加新条目。创建新条目时，必填字段以深蓝色显示，可选字段以深绿色显示，可选字段以浅蓝色显示。条目头部中的特殊字段是您的条目名称，稍后将用于引用此条目。编辑字段时，您可以使用 <shortcut|(kbd-return)> 确认并跳转到下一个（空白的可选字段在这样做时将自动被移除）。当光标位于文献条目内时，也可以使用<menu|Focus|Insert above>和<menu|Focus|Insert below>添加额外的字段。

  <todo|翻译>

  <BibTeX> contains a few unnatural conventions for entering names of authors and managing capitalization inside titles. When editing <BibTeX> files using <TeXmacs>, these conventions are replaced by the following more user friendly conventions:

  <\itemize>
    <item>When entering authors (inside “Author” or “Editor” fields), use the <markup|name> tag for specifying last names (using <menu|Insert|Last name> or <shortcut|(make 'name)>) For instance, “Albert Einstein” should be entered as “Albert <name|Einstein>” or as “A. <name|Einstein>”. Special particles such as “von” can be entered using <menu|Insert|Particle>. Title suffices such as “Jr.” can be entered similarly using <menu|Insert|Title suffix>.

    <item>When entering titles, do not capitalize, except for the first character and names or concepts that always must be. For instance, use “Riemannian geometry” instead of “Riemannian Geometry” and “Differential Galois theory” instead of “Differential Galois Theory”.
  </itemize>

  <subsection|Inserting citations and compiling bibliographies>

  Assuming that you have created a <verbatim|.bib> file with your bibliographic references, the mechanism to automatically compile a bibliography is the following:

  <\itemize>
    <item>Use <menu|Insert|Link|Citation> and <menu|Insert|Link|Invisible citation> to insert citations, which correspond to entries in your <verbatim|.bib> file.

    <item>At the place where your bibliography should be compiled, click on <menu|Insert|Automatic|Bibliography>. At the prompt, you should enter a <verbatim|bibtex> style (such as <verbatim|plain>, <verbatim|alpha>, <verbatim|abbrv>, etc.) and your <verbatim|.bib> file.

    <item>Use <menu|Document|Update|Bibliography> in order to compile your bibliography.
  </itemize>

  Notice that additional BiB<TeX> styles should be put in the directory <verbatim|~/.TeXmacs/system/bib>.

  <section|生成索引>

  <\description>
    <item*|放置索引条目><label|place_index_entries>

    把光标定位在要放置索引条目的位置，<menu|Insert|Link|Index entry|Main>，并输入参数Key的值<todo|如何规范表述这个操作？Key是否要被翻译？>，例如“index-sample”，按下 <shortcut|(kbd-return)> 折叠标记。

    这是最简易的操作，当然你也可以选择<menu|index entry>下的其它选项：<menu|sub>，<menu|subsub>，<menu|complex>，<menu|interject>，这会在<smart-ref|more_types_of_index_entries>中介绍。

    <item*|生成索引目录><label|generate_index>

    将光标放在要生成索引的位置，<menu|Insert|Automatic|Index>，索引将类似于目录的方式生成。

    索引生成后，如果没有更新，可通过<menu|document|update|all>手动刷新。<todo|<menu|document|update|index>失效！；商业版要增加自动刷新功能>

    <item*|更多索引类型><label|more_types_of_index_entries>

    在<menu|Insert|Link|Index entry>菜单中，您可以找到几种类型的索引条目。

    最简单的是<menu|main>，<menu|sub>，<menu|subsub>，它们分别是具有一个、两个和三个参数的宏。形式为<menu|sub>和<menu|subsub>的条目可以用来将索引条目从属于其他条目。

    <todo|不知道多元组如何写，因此不会用复杂索引><menu|complex>的索引条目需要四个参数。第一个是一个键，表示条目如何排序，它必须是一个“多元组”（使用 <key|inactive \<less\>> 创建<todo|快捷键失效>），其第一个组成部分是主要类别，第二个是子类别，依此类推。<menu|complex>索引条目的第二个参数要么是空白的，要么是“strong”，在这种情况下，您的条目页码将以粗体字型出现。第三个参数通常为空，但如果您创建了两个具有相同非空白第三个参数的索引条目，那么这将创建一个页码的“范围”。第四个参数，再次是一个多元组，是条目本身。

    也可以使用<menu|Insert|Link|Index entry>中的<menu|interject>来创建没有页码的索引行。这个宏的第一个参数是索引行的排序Key<todo|排序Key使用规范？>。第二个参数包含实际文本。这种结构可能有助于分割索引的不同部分，如“ A”，“ B”等。如果你想让“A”出现在Key为1的索引的上方，令Key为0，Entry为A即可。
  </description>

  <section|编制术语表>

  术语表的编制与索引的编制类似，但无需对条目排序。<menu|regular>的术语条目只包含若干文字和一个自动生成的页码。<menu|explained>的术语条目还包含额外的参数，以解释该术语。<menu|duplicate>的术语条目则用于显示该术语第二次出现的页码。

  <section|同一类内容的不同生成>

  <TeXmacs> allows users to create multiple bibliographies, tables of contents, indexes, <abbr|etc.> inside the same document. Let us explain how to do this for bibliographies; the procedure is similar for other types of automatically generated content.

  First of all, every separate bibliography is identified by a “name”. The default name of the bibliography is <verbatim|bib>. Using <menu|Insert|Link|Alternate|Bibliography>, it is possible to specify a different bibliography (than the default one) for a certain region of text.

  For instance, to specify that a given citation should appear in a second bibliography with name <verbatim|bib2>, you should proceed as follows:

  <\itemize>
    <item>Click on <menu|Insert|Link|Alternate|Bibliography> and enter <verbatim|bib2> on the prompt. This will insert an empty <markup|with-bib> tag into your document, with the cursor inside.

    <item>Inside this <markup|with-bib> tag, enter your citation, using <menu|Insert|Link|Citation>.
  </itemize>

  If needed, the <markup|with-bib> tag can be made to span over a large portion of text. All citations inside this span will be be put into the bibliography with name <verbatim|bib2>.

  The bibliography <verbatim|bib2> itself should be created in a similar way: first click on <menu|Insert|Link|Alternate|Bibliography> and enter <verbatim|bib2> on the prompt. Next insert the bibliography as usual, <em|via> <menu|Insert|Automatic|Bibliography>. Now do <menu|Document|Update|All> as many times as need in order to generate the bibliography and get all links right.

  <section|书籍和多文件的文档>

  <todo|翻译>

  When a document gets really large, you may want to subdivide it into smaller pieces. This both makes the individual pieces more easily reusable in other works and it improves the editor's responsiveness. An entire file can be inserted into another one using <menu|Insert|Link|Include>. In order to speed up the treatment of included documents, they are being buffered. In order to update all included documents, you should use <menu|Tools|Update|Inclusions>.

  When writing a book, one usually puts the individual chapters in files <verbatim|c1.tm>, <verbatim|c2.tm> until <verbatim|cn.tm>. One next creates one file <verbatim|book.tm> for the whole book, in which the files <verbatim|c1.tm>, <verbatim|c2.tm> until <verbatim|cn.tm> are included using the above mechanism. The table of contents, bibliography, etc. are usually put into <verbatim|book.tm>.

  In order to see cross references to other chapters when editing a particular chapter <verbatim|ci.tm>, one may specify <verbatim|book.tm> as a “master file” for the files <verbatim|c1.tm> to <verbatim|cn.tm> using <menu|Tools|Project|Attach master>. Currently, the chapter numbers themselves are not dealt with by this mechanism, so you may want to manually assign the environment variable <src-var|chapter-nr> at the start of each chapter file in order to get the numbering right when editing.

  <chapter|内置绘图工具>

  除了可以插入其他程序生成的图片之外，<TeXmacs>还内置了基本的作图工具以供使用。尽管这套工具较大多数专业的作图工具而言，功能稀少，然而其优点在于，它是与<TeXmacs>完美整合在一起的。比如，很容易就能在图片中插入文本、数学内容和超链接。又如，内置工具所作之图往往更美观，因为它们和周围的文本使用的是一样的字体和线宽。

  <section|开始作图>

  点击<menu|Insert|Image|Draw image>开始作图。在某些情况下，你也许想在已有的图片（或者其他内容）上绘图。此时，你可以先选中该区域，再点击<menu|Insert|Image|Draw over selection>。

  插入图片的默认宽度是整个段落宽度。使用快捷键<shortcut|(graphics-decrease-hsize)>， <shortcut|(graphics-increase-hsize)>， <shortcut|(graphics-decrease-vsize)>， <shortcut|(graphics-increase-vsize)>可以调整图片的尺寸。使用<shortcut|(graphics-decrease-hsize-fast)>， <shortcut|(graphics-increase-hsize-fast)>， <shortcut|(graphics-decrease-vsize-fast)>， <shortcut|(graphics-increase-vsize-fast)>调整得更快。你也可以通过<menu|Insert|Geometry|Size>精确指定图片的长和宽<todo|最好提示用户记得输单位，例如0.5par>。绘图完毕，你可以使用<menu|Insert|Geometry|Crop>自动剪裁掉绘图内容上下左右的空白（当然，会留下一部分作为补白）。

  对于技术类的图，用坐标纸来绘制是再好不过的了。点击<menu|Insert|Grid|Type|Cartesian>即可。在菜单<menu|Insert|Grid>中，还可以调整坐标和网格线的颜色以及网格的单位长度。打印时，网格默认会被打印出来。如果不希望打印网格，那么打印前需要先移除网格。

  <TeXmacs>默认将网格的原点置于屏幕的中央并且使用1cm作为单位长度。使用<shortcut|(graphics-move-origin-left)>， <shortcut|(graphics-move-origin-right)>， <shortcut|(graphics-move-origin-up)>， <shortcut|(graphics-move-origin-down)>可以控制图片在网格上的移动，使用<shortcut|(graphics-move-origin-left-fast)>， <shortcut|(graphics-move-origin-right-fast)>， <shortcut|(graphics-move-origin-up-fast)>， <shortcut|(graphics-move-origin-down-fast)>则可以加大移动的步伐。通过<menu|Insert|Geometry|Unit>可以改变网格的单位长度。使用<shortcut|(graphics-zoom-in)>和<shortcut|(graphics-zoom-out)>可以放缩图片，对应的菜单项是<menu|Insert|Geometry|Zoom>。

  <section|插入图形对象>

  插入新图片或点击进入已有图片后，依赖于模式的第二行工具栏会显示一系列图形模式的图标。特别地，其中的第二组图标<icon|tm_point_mode.xpm>， <icon|tm_line_mode.xpm>， <icon|tm_cline_mode.xpm>， <icon|tm_spline_mode.xpm>， <icon|tm_cspline_mode.xpm>， <icon|tm_arc_mode.xpm>， <icon|tm_carc_mode.xpm>， <icon|tm_textat_mode.xpm>， <icon|tm_math.xpm>是一系列可以点击并插入图片的图形对象。<TeXmacs>当前支持下列这些原生的图形对象：

  <\description>
    <item*|点>点击<icon|tm_point_mode.xpm>或者<menu|Insert|Point>，你就能在图片上通过鼠标左键插入点。

    <item*|线和多边形>点击<icon|tm_line_mode.xpm>或者<menu|Insert|Line>后，每一次左击都将插入一个虚拟的点，直线将顺次连接这些点，双击可以插入最后一个点，并结束本次绘制。点击<icon|tm_cline_mode.xpm>或者<menu|Insert|Polygon>后，行为与插入直线类似，只是最后一个点插入后，将有一条额外的直线使之与第一个点相连。

    <item*|样条曲线和闭合样条曲线><icon|tm_spline_mode.xpm>即<menu|Insert|Spline>，<icon|tm_cspline_mode.xpm>即<menu|Insert|Closed spline>。插入曲线的操作方式与插入直线的方式一模一样，不同之处在于，连接这些点的是样条曲线。

    <item*|圆弧和圆圈><icon|tm_arc_mode.xpm>即<menu|Insert|Arc>，<icon|tm_carc_mode.xpm>即<menu|Insert|Circle>。通过圆心和圆上的一个点可以确定一个圆。所以指定该对象后，只需要左击插入两个点即可。

    <item*|椭圆>点击<menu|Insert|Ellipse>，可以绘制椭圆。

    <item*|文本和数学><icon|tm_textat_mode.xpm>即<menu|Insert|Text>，<icon|tm_math.xpm>即<menu|Insert|Mathematics>。指定该对象后，在图片上左击选中插入的位置，再编辑即可。值得注意的是，这里的文本其实不限定于纯粹的文本，其本质是一个容器，大部分<TeXmacs>内容都可以栖身其中。
  </description>

  这些基本对象的典型例子如下图所示：

  <\center>
    <tabular*|<tformat|<table|<row|<cell|<small-figure|<with|gr-mode|point|gr-frame|<tuple|scale|1cm|<tuple|0.5gw|0.5gh>>|gr-geometry|<tuple|geometry|3cm|3cm|center>|<graphics||<point|0.499041|-0.00699497>|<point|-0.919136|-0.23983>|<point|0.329706|-1.19234>>>|点>>|<cell|<small-figure|<with|gr-mode|<tuple|edit|line>|gr-frame|<tuple|scale|1cm|<tuple|0.5gw|0.5gh>>|gr-geometry|<tuple|geometry|3cm|3cm|center>|<graphics||<line|<point|-0.926313|0.839678>|<point|0.809366318296071|0.564509194337875>|<point|-0.862812541341447|-0.13399589892843>|<point|1.04220134938484|-0.260996824976849>|<point|-0.121973806059003|-1.17117012832385>>>>|线>>|<cell|<small-figure|<with|gr-mode|<tuple|edit|cline>|gr-frame|<tuple|scale|1cm|<tuple|0.5gw|0.669998gh>>|gr-geometry|<tuple|geometry|3cm|3cm|center>|<graphics||<cline|<point|-0.742988|0.839678>|<point|0.844523085064162|0.691510120386294>|<point|0.886856727080302|-0.769000529170525>|<point|-0.425486175420029|-1.2770042333642>|<point|-1.25099219473475|-0.13399589892843>>>>|线段>>>>>>

    \;

    <tabular*|<tformat|<table|<row|<cell|<small-figure|<with|gr-mode|<tuple|edit|spline>|gr-frame|<tuple|scale|1cm|<tuple|0.5gw|0.5gh>>|gr-geometry|<tuple|geometry|3cm|3cm|center>|<graphics||<spline|<point|-1.1308|1.0844>|<point|0.880043656568329|0.661066278608281>|<point|-0.855635666093399|-0.0374388146580235>|<point|0.901210477576399|-0.48194205582749>|<point|-0.516966529964281|-1.1804471490938>>>>|样条曲线>>|<cell|<small-figure|<with|gr-mode|<tuple|edit|cspline>|gr-frame|<tuple|scale|1cm|<tuple|0.5gw|0.5gh>>|gr-geometry|<tuple|geometry|3cm|3cm|center>|<graphics||<cspline|<point|-0.651144|0.788067>|<point|0.89403360232835|0.322397142479164>|<point|0.640031750231512|-0.905278475988887>|<point|-0.566477047228469|-1.20161397010187>|<point|-1.15914803545443|-0.206773382722582>>>>|闭合样条曲线>>|<cell|<small-figure|<with|gr-mode|<tuple|edit|arc>|gr-frame|<tuple|scale|1cm|<tuple|0.5gw|0.5gh>>|gr-geometry|<tuple|geometry|3cm|3cm|center>|<graphics||<arc|<point|-0.827656|-1.15928>|<point|0.865689906072232|-0.5454425188517>|<point|-0.806488953565286|0.87273448868898>>>>|圆弧>>>>>>

    \;

    <tabular*|<tformat|<table|<row|<cell|<small-figure|<with|gr-mode|<tuple|edit|carc>|gr-frame|<tuple|scale|1cm|<tuple|0.5gw|0.5gh>>|gr-geometry|<tuple|geometry|3cm|3cm|center>|<graphics||<carc|<point|-0.262964677867443|0.990458393967456>|<point|1.02821140362482|-0.0467158354279667>|<point|-0.0724632887948141|-1.1473905278476>>>>|圆圈>>|<cell|<small-figure|<with|gr-mode|<tuple|edit|text-at>|gr-frame|<tuple|scale|1cm|<tuple|0.5gw|0.5gh>>|gr-geometry|<tuple|geometry|3cm|3cm|center>|<graphics||<text-at|Hello|<point|-0.164307|0.545955>>>>|文本>>|<cell|<small-figure|<with|gr-mode|<tuple|edit|math-at>|gr-frame|<tuple|scale|1cm|<tuple|0.5gw|0.5gh>>|gr-geometry|<tuple|geometry|3cm|3cm|center>|<graphics||<math-at|\<mathe\><rsup|\<mathpi\>*\<mathi\>>=-1|<point|-1.08166|-0.533553>>>>|数学>>>>>>
  </center>

  <section|编辑图形对象>

  所有支持插入新对象（点，线，多边形等）的模式也同样支持直接编辑已存在的对象。一旦鼠标移动到一个对象上方，该对象的控制点就会被自动高亮，并一些编辑操作，如下所示： <todo|注意，若按钮点亮在最后一排图标，该功能不可用>

  <\description>
    <item*|移动控制点>当鼠标足够接近一个控制点时，你可以用鼠标左键拖拽控制点到某处。

    <item*|插入新的控制点>对于那些拥有一个以上控制点的对象，比如线、多边形、样条曲线和闭合样条曲线，可以在边上插入新的控制点<todo|实测，圆也可以，只不过是拖拽改变圆心>。首先将鼠标移动到目标边上，此时目标边两端的控制点将高亮显示。然后按下鼠标左键不放并拖拽，在合适的地方松开。

    <item*|移除控制点>使用鼠标中键可以移除当前控制点。也可以用<key|Del>或者<key|Backspace>。<todo|右键也可以>

    <item*|移除整个对象>使用鼠标中键并同时按下<key|S->将移除当前高亮的整个对象。<todo|未来Shift需要改为选中对象的辅助按键>
  </description>

  在编辑过程中，你可能注意到了，<TeXmacs>会试着自动将鼠标<em|附着>到控制点、对象的边缘、曲线的交点和网格上的点。这就使得我们能够快速绘制复杂的精确图形，不仅仅精确到一两个像素（指那种放到或者打印后很丑的精度）。在文本或者数学公式四周有八个隐藏的控制点，<TeXmacs>会尽可能地把鼠标附着到这些点上。这使得图<reference|diagram-fig>的绘制变得容易得多。

  图形对象在图片上的绘制依照一种栈的顺序，这种顺序会影响到重叠对象的覆盖和被覆盖。使用<shortcut|(graphics-zmove 'closer)> 和<shortcut|(graphics-zmove 'farther)>，你可以使当前高亮的对象上浮或者下沉。同样地，控制点也可能由于被其它控制点覆盖而无法访问。在这种情况下，你可以使用<key|tab>遍历在当前光标所在位置下的所有控制点。

  <\big-figure|<with|gr-mode|<tuple|group-edit|group-ungroup>|gr-frame|<tuple|scale|1cm|<tuple|0.729978gw|0.140033gh>>|gr-geometry|<tuple|geometry|1par|0.6par>|gr-grid|<tuple|empty>|gr-grid-old|<tuple|cartesian|<point|0|0>|1>|gr-edit-grid-aspect|<tuple|<tuple|axes|none>|<tuple|1|none>|<tuple|10|none>>|gr-edit-grid|<tuple|empty>|gr-edit-grid-old|<tuple|cartesian|<point|0|0>|1>|gr-text-at-halign|center|gr-arrow-end|\<gtr\>|gr-auto-crop|true|<graphics||<with|text-at-halign|center|<math-at|A|<point|-5|3>>>|<with|text-at-halign|center|<math-at|B|<point|-3.5|3>>>|<with|text-at-halign|center|<math-at|C|<point|-5|2>>>|<with|text-at-halign|center|<math-at|D|<point|-3.5|2>>>|<with|text-at-halign|center|<math-at|X|<point|-2|3>>>|<with|text-at-halign|center|<math-at|Y|<point|-2|2>>>|<with|arrow-end|\<gtr\>|<line|<point|-4.75015|3.12052>|<point|-3.75133946289192|3.1205185871147>>>|<with|arrow-end|\<gtr\>|<line|<point|-5|2.88244>|<point|-5.0|2.35861225029766>>>|<with|arrow-end|\<gtr\>|<line|<point|-4.75637|2.12052>|<point|-3.76357653128721|2.1205185871147>>>|<with|arrow-end|\<gtr\>|<line|<point|-3.5|2.88244>|<point|-3.5|2.35861225029766>>>|<with|arrow-end|\<gtr\>|<line|<point|-3.24864|3.12052>|<point|-2.26367575076068|3.1205185871147>>>|<with|arrow-end|\<gtr\>|<line|<point|-3.23641|2.12052>|<point|-2.21995303611589|2.1205185871147>>>|<with|arrow-end|\<gtr\>|<line|<point|-2|2.88244>|<point|-2.0|2.35861225029766>>>|<with|arrow-end|\<gtr\>|<spline|<point|-4.75015|3.35861>|<point|-2.87767892578383|3.71332186797195>|<point|-1.31133417118666|3.26881862680249>|<point|-1.7800304273052|2.35861225029766>>>>>>
    <label|diagram-fig>使用数学公式方框四周八个控制点的附着特性作图的一个例子。注意该图已经被剪裁过了。
  </big-figure>

  <section|样式属性详述>

  每一种基础图形对象都有对应的一些影响渲染的样式属性。这些属性如下所示：

  <paragraph|颜色>该属性用于指定颜色，应用于任何图形对象。

  <paragraph|填充色>该属性用于指定对象的填充色，应用于所有图形对象，文本和数学除外。

  <\big-figure|<with|gr-mode|<tuple|edit|cspline>|gr-frame|<tuple|scale|1cm|<tuple|0.5gw|0.5gh>>|gr-geometry|<tuple|geometry|1par|0.6par>|gr-fill-color|pastel red|gr-color|dark magenta|gr-auto-crop|true|<graphics||<cspline|<point|-4.82503|-0.183391>|<point|-4.54985778542135|2.12379282973938>|<point|-3.34334898796137|1.57345548352957>|<point|-2.623677073687|0.070611191956608>|<point|-3.89368633417119|0.790283106230983>>|<with|fill-color|pastel yellow|<cspline|<point|-1.75584|2.22963>|<point|-2.24267429554174|1.23478634740045>|<point|-1.62883648630771|0.324613044053446>|<point|-1.88283833840455|1.21361952639238>>>|<with|color|dark blue|fill-color|pastel orange|<cspline|<point|-0.0201581|1.78512>|<point|-0.845664109009128|1.36178727344887>|<point|-0.464661330863871|0.493947612118005>|<point|0.424345151475063|0.917284032279402>>>|<with|color|dark magenta|fill-color|pastel red|<cspline|<point|2.11769|1.99679>|<point|2.81619592538696|0.811449927239053>|<point|1.56735348591083|0.769116285222913>>>>>>
    一些不同颜色和填充色的闭合样条曲线示例。
  </big-figure>

  <paragraph|不透明度>该属性用于指定对象从0%到100%的不透明度，也是应用于所有图形对象。默认的不透明度为100%，不透明度越低，对象就越透明。

  <big-figure|<with|gr-mode|<tuple|edit|carc>|gr-frame|<tuple|scale|1cm|<tuple|0.5gw|0.5gh>>|gr-geometry|<tuple|geometry|1par|0.6par>|gr-grid|<tuple|empty>|gr-grid-old|<tuple|cartesian|<point|0|0>|1>|gr-edit-grid-aspect|<tuple|<tuple|axes|none>|<tuple|1|none>|<tuple|10|none>>|gr-edit-grid|<tuple|empty>|gr-edit-grid-old|<tuple|cartesian|<point|0|0>|1>|gr-fill-color|pastel green|gr-color|dark green|gr-opacity|20%|gr-auto-crop|true|<graphics||<with|color|dark brown|fill-color|brown|<cline|<point|-5|1>|<point|-5.0|-1.0>|<point|5.0|-1.0>|<point|5.0|1.0>>>|<with|color|dark green|fill-color|pastel green|<carc|<point|4|-1.5>|<point|4.5|-1.0>|<point|4.0|-0.5>>>|<with|color|dark green|opacity|80%|fill-color|pastel green|<carc|<point|2|-1.5>|<point|2.5|-1.0>|<point|2.0|-0.5>>>|<with|color|dark green|opacity|60%|fill-color|pastel green|<carc|<point|0|-1.5>|<point|0.5|-1.0>|<point|0.0|-0.5>>>|<with|color|dark green|opacity|40%|fill-color|pastel green|<carc|<point|-2|-1.5>|<point|-1.5|-1.0>|<point|-2.0|-0.5>>>|<with|color|dark green|opacity|20%|fill-color|pastel green|<carc|<point|-4|-1.5>|<point|-3.5|-1.0>|<point|-4.0|-0.5>>>>>|覆盖在另一个对象上的同一个对象不透明度逐渐增加的一个过程的示例。>

  <paragraph|点形状>支持这些不同的形状： 圆盘、圆圈和方框。

  <big-figure|<with|gr-mode|<tuple|edit|text-at>|gr-frame|<tuple|scale|1cm|<tuple|0.5gw|0.5gh>>|gr-geometry|<tuple|geometry|1par|0.6par>|gr-fill-color|red|gr-grid|<tuple|empty>|gr-grid-old|<tuple|cartesian|<point|0|0>|1>|gr-edit-grid-aspect|<tuple|<tuple|axes|none>|<tuple|1|none>|<tuple|10|none>>|gr-edit-grid|<tuple|empty>|gr-edit-grid-old|<tuple|cartesian|<point|0|0>|1>|gr-point-style|square|gr-text-at-halign|center|gr-auto-crop|true|<graphics||<with|fill-color|red|<point|-2|0>>|<with|fill-color|red|point-style|round|<point|0|0>>|<with|fill-color|red|point-style|square|<point|2|0>>|<with|text-at-halign|center|<text-at|方框|<point|2|0.5>>>|<with|text-at-halign|center|<text-at|圆圈|<point|0|0.5>>>|<with|text-at-halign|center|<text-at|圆盘|<point|-2|0.5>>>>>|黑色和红色填充色的不同的点形状。>

  <paragraph|线宽度>线宽度属性应用于所有曲线（包括线段，多边形，样条曲线，闭合样条曲线，圆弧和圆）。其默认大小为<verbatim|1ln>，即数学公式分式中线段的宽度。你可以指定其为任何<TeXmacs>长度。

  <\big-figure|<with|gr-mode|<tuple|edit|text-at>|gr-frame|<tuple|scale|1cm|<tuple|0.5gw|0.5gh>>|gr-geometry|<tuple|geometry|1par|0.6par>|gr-grid|<tuple|empty>|gr-grid-old|<tuple|cartesian|<point|0|0>|1>|gr-edit-grid-aspect|<tuple|<tuple|axes|none>|<tuple|1|none>|<tuple|10|none>>|gr-edit-grid|<tuple|empty>|gr-edit-grid-old|<tuple|cartesian|<point|0|0>|1>|gr-line-width|5ln|gr-auto-crop|true|<graphics||<spline|<point|-3|0>|<point|-2.0|0.3>|<point|0.0|-0.3>|<point|2.0|0.3>|<point|3.0|0.0>>|<with|line-width|0.5ln|<spline|<point|-3|1>|<point|-2.0|1.3>|<point|0.0|0.7>|<point|2.0|1.3>|<point|3.0|1.0>>>|<with|line-width|2ln|<spline|<point|-3|-1>|<point|-2.0|-0.7>|<point|0.0|-1.3>|<point|2.0|-0.7>|<point|3.0|-1.0>>>|<with|line-width|5ln|<spline|<point|-3|-2>|<point|-2.0|-1.7>|<point|0.0|-2.3>|<point|2.0|-1.7>|<point|3.0|-2.0>>>|<text-at|0.5ln|<point|3.5|1>>|<text-at|1ln|<point|3.5|0>>|<text-at|2ln|<point|3.5|-1>>|<text-at|5ln|<point|3.5|-2>>>>>
    使用不同线宽度的同一条曲线。
  </big-figure>

  <paragraph|线组成>可以在<menu|Focus|Line dashes>中指定曲线的组成样式。

  <\big-figure|<with|gr-mode|<tuple|edit|line>|gr-frame|<tuple|scale|1cm|<tuple|0.5gw|0.5gh>>|gr-geometry|<tuple|geometry|1par|0.6par>|gr-grid|<tuple|empty>|gr-grid-old|<tuple|cartesian|<point|0|0>|1>|gr-edit-grid-aspect|<tuple|<tuple|axes|none>|<tuple|1|none>|<tuple|10|none>>|gr-edit-grid|<tuple|empty>|gr-edit-grid-old|<tuple|cartesian|<point|0|0>|1>|gr-line-width|2ln|gr-dash-style|11100|gr-dash-style-unit|20ln|gr-auto-crop|true|<graphics||<with|line-width|2ln|<line|<point|-3|1>|<point|-2.0|1.5>|<point|0.0|0.5>|<point|2.0|1.5>|<point|3.0|1.0>>>|<with|dash-style|10|line-width|2ln|<line|<point|-3|0.5>|<point|-2.0|1.0>|<point|0.0|0.0>|<point|2.0|1.0>|<point|3.0|0.5>>>|<with|dash-style|11100|line-width|2ln|<line|<point|-3|0>|<point|-2.0|0.5>|<point|0.0|-0.5>|<point|2.0|0.5>|<point|3.0|0.0>>>|<with|dash-style|1111010|line-width|2ln|<line|<point|-3|-0.5>|<point|-2.0|0.0>|<point|0.0|-1.0>|<point|2.0|0.0>|<point|3.0|-0.5>>>|<with|dash-style|1111010|line-width|2ln|dash-style-unit|10ln|<line|<point|-3|-1>|<point|-2.0|-0.5>|<point|0.0|-1.5>|<point|2.0|-0.5>|<point|3.0|-1.0>>>|<with|dash-style|11100|line-width|2ln|dash-style-unit|20ln|<line|<point|-3|-1.5>|<point|-2.0|-1.0>|<point|0.0|-2.0>|<point|2.0|-1.0>|<point|3.0|-1.5>>>>>>
    使用不同组成样式的同一条曲线。
  </big-figure>

  <paragraph|线箭头>可以使用<menu|Focus|Line arrows>指定曲线两端的箭头样式。

  <\big-figure|<with|gr-mode|<tuple|edit|line>|gr-frame|<tuple|scale|1cm|<tuple|0.5gw|0.5gh>>|gr-geometry|<tuple|geometry|1par|0.6par>|gr-grid|<tuple|empty>|gr-grid-old|<tuple|cartesian|<point|0|0>|1>|gr-edit-grid-aspect|<tuple|<tuple|axes|none>|<tuple|1|none>|<tuple|10|none>>|gr-edit-grid|<tuple|empty>|gr-edit-grid-old|<tuple|cartesian|<point|0|0>|1>|gr-line-width|2ln|gr-arrow-begin|\||gr-arrow-end|\||gr-auto-crop|true|<graphics||<with|line-width|2ln|<line|<point|-4|2>|<point|-1.0|2.0>>>|<with|arrow-end|\<gtr\>|line-width|2ln|<line|<point|-4|1.5>|<point|-1.0|1.5>>>|<with|arrow-end|\|\<gtr\>|line-width|2ln|<line|<point|-4|1>|<point|-1.0|1.0>>>|<with|arrow-end|\<gtr\>\<gtr\>|line-width|2ln|<line|<point|-4|0.5>|<point|-1.0|0.5>>>|<with|arrow-end|\<less\>|line-width|2ln|<line|<point|-4|0>|<point|-1.0|0.0>>>|<with|arrow-end|\<less\>\||line-width|2ln|<line|<point|-4|-0.5>|<point|-1.0|-0.5>>>|<with|arrow-end|\<less\>\<less\>|line-width|2ln|<line|<point|-4|-1>|<point|-1.0|-1.0>>>|<with|arrow-end|\||line-width|2ln|<line|<point|-4|-1.5>|<point|-1.0|-1.5>>>|<with|arrow-end|o|line-width|2ln|<line|<point|-4|-2>|<point|-1.0|-2.0>>>|<with|arrow-end|\|\<gtr\>|line-width|2ln|arrow-begin|\<less\>\||<line|<point|0|2>|<point|3.0|2.0>>>|<with|arrow-end|\|\<gtr\>|line-width|2ln|arrow-begin|\<gtr\>|<line|<point|0|1.5>|<point|3.0|1.5>>>|<with|arrow-end|o|line-width|2ln|arrow-begin|o|<line|<point|0|1>|<point|3.0|1.0>>>|<with|arrow-end|\<less\>\||line-width|2ln|arrow-begin|\|\<gtr\>|<line|<point|0|0.5>|<point|3.0|0.5>>>|<with|arrow-end|\<less\>|line-width|2ln|arrow-begin|\<gtr\>|<line|<point|0|0>|<point|3.0|0.0>>>|<with|line-width|2ln|arrow-begin|\<gtr\>|<line|<point|0|-0.5>|<point|3.0|-0.5>>>|<with|arrow-end|\<gtr\>\<gtr\>|line-width|2ln|arrow-begin|\<gtr\>|<line|<point|0|-1>|<point|3.0|-1.0>>>|<with|arrow-end|\<gtr\>\<gtr\>|line-width|2ln|arrow-begin|\<gtr\>\<gtr\>|<line|<point|0|-1.5>|<point|3.0|-1.5>>>|<with|arrow-end|\||line-width|2ln|arrow-begin|\||<line|<point|0|-2>|<point|3.0|-2.0>>>>>>
    两端使用不同类型箭头的同一条线段。
  </big-figure>

  <paragraph|文本对齐>对于文本和数学方格，可以指定其水平和竖直对齐的属性，如下所示：

  <\big-figure|<with|gr-mode|<tuple|edit|text-at>|gr-frame|<tuple|scale|1cm|<tuple|0.420008gw|0.5gh>>|gr-geometry|<tuple|geometry|1par|0.6par>|gr-grid|<tuple|empty>|gr-grid-old|<tuple|cartesian|<point|0|0>|1>|gr-edit-grid-aspect|<tuple|<tuple|axes|none>|<tuple|1|none>|<tuple|10|none>>|gr-edit-grid|<tuple|empty>|gr-edit-grid-old|<tuple|cartesian|<point|0|0>|1>|gr-line-width|2ln|gr-text-at-halign|center|gr-text-at-valign|top|gr-auto-crop|true|<graphics||<with|color|light grey|line-width|2ln|<line|<point|-3|2>|<point|-3.0|-2.0>>>|<with|text-at-valign|center|<text-at|左边|<point|-3|1>>>|<with|text-at-valign|center|text-at-halign|center|<text-at|居中|<point|-3|0>>>|<with|text-at-valign|center|text-at-halign|right|<text-at|右边|<point|-3|-1>>>|<with|color|light grey|line-width|2ln|<line|<point|-1|0>|<point|7.0|0.0>>>|<with|text-at-valign|bottom|text-at-halign|center|<text-at|底部 <math|y>|<point|0|0>>>|<with|text-at-halign|center|<text-at|基线 <math|y>|<point|1.5|0>>>|<with|text-at-valign|axis|text-at-halign|center|<text-at|轴线 <math|y>|<point|3|0>>>|<with|text-at-valign|center|text-at-halign|center|<text-at|居中 <math|y>|<point|4.5|0>>>|<with|text-at-valign|top|text-at-halign|center|<text-at|顶部 <math|y>|<point|6|0>>>>>>
    文本方格的水平和垂直方向上对齐的图解。
  </big-figure>

  <section|编辑对象的组合>

  第二栏工具栏最右端的图标可用于编辑图形对象的组合。在组合编辑模式中，你可以右击选中或者取消选中对象。你也可以拖拽鼠标右键通过矩形选框选中其中的所有对象。此时左击，则当前的操作将作用在所有选中的对象上。

  所支持的对组合的操作如下所示：<todo|选中对象 右键>

  <\description>
    <item*|改变属性><icon|tm_edit_props.xpm>即<menu|Insert|Set properties>。左击对象后，焦点栏中的当前属性就应用到了选中对象上。

    <item*|移动对象><icon|tm_group_move.xpm>即<menu|Insert|Move objects>。选中对象会跟着鼠标移动直到你左击。

    <item*|缩放对象><icon|tm_group_zoom.xpm>即<menu|Insert|Resize objects>。选中对象会跟着鼠标缩放直到你左击。

    <item*|旋转对象><icon|tm_group_rotate.xpm>即<menu|Insert|Rotate objects>。选中对象会跟着鼠标旋转直到你左击。<todo|实测，圆的缩放、旋转不以圆心为中心，可能是两点画圆功能引入的问题>

    <item*|组合或者打散><icon|tm_group_group.xpm>即<menu|Insert|Group/ungroup>。左击之后，选中对象将被组合在一起。若是组合对象，则左击之后将被打散。<todo|先用右键把要打组对象选中，然后按左键就被组合在一起；若要去除组内对象，左键一下组，右键把要去除的对象取消选择，再左键打组>
  </description>

  在组合编辑模式中，复制和粘贴操作仍然适用。

  <chapter|进阶布局特性>

  <section|文档流>

  复杂的文档通常包含脚注及浮动对象（指区别于正文文本的对象)。实际上，那些复杂文档是分流处理的，其一为正文文本，其二为脚注，其三为浮动对象，其四是两栏文本。不同的文档流，其分页特征各不相同。

  使用<menu|Format|Page insertion|Footnote>插入脚注。 使用<menu|Paragraph|Number of columns>更改文本的栏数。

  <section|浮动对象>

  浮动对象可以在页面上相对正文独立移动。图片或者表格太大，而无法完美插入正文，此时便可使用浮动对象解决问题。使用<menu|Format|Page insertion|Floating object>可插入浮动对象。

  您也可以分别使用<menu|Format|Page insertion|Floating figure>或者<menu|Format|Page insertion|Floating table>直接插入图片或者表格。有时候，需要将多个小图片或者多个小表格合并成一个浮动对象，此时分别<menu|Insert|Image|Small figure>或者<menu|Insert|Table|Small table>。

  创建浮动对象后，您可用<menu|Insert|Position float>来移动对象。您可以指定它是在页面顶部、底部、文本中还是在下一页。默认地，浮动对象可在任何位置出现。然而，浮动对象不可能在离顶部或者底部小于三行文本距离处中出现。

  <section|分页>

  用户可在<menu|Document|Page|Breaking>中精确控制分页。在其子菜单<menu|Algorithm>中,您可以指定分页使用的算法。专业选项适用于打印，但是在分页模式下会使编辑器变慢。粗略选项速度最快，适中选项对普通文档的分页还算专业。多栏文档应使用专业选项，并且不可避免地显得缓慢。

  您还可以在子菜单<menu|Limits>中使得分页算法可以在特定情况下增大或者减小页面长度。段落间隔的可伸展性可在<menu|Flexibility>子菜单中指定。默认系数是1；偏小的系数会使段落间隔控制更加严格，而使分页质量降低。

  <chapter|编辑工具><label|chapter:editing_tools>

  本章我们讨论<TeXmacs>中的通用编辑方法。除了经典的特性，如剪切和粘贴，搜索和替换等， <TeXmacs>还充分挖掘文档的结构性以提供额外的优秀功能。这些功能的代表是结构化光标移动和结构化变元。我们也在传统的功能如搜索和替换中寻求结构化的美感。例如，当您搜索数学模式中的<math|x>，结果只会匹配同样是数学模式中的<math|x>。

  <section|剪切和粘贴>

  使用鼠标左键，您可以选中文本。选中后，点击<menu|Edit|Cut>或者<shortcut|(kbd-cut)>，将会删除选中文本；而点击<menu|Edit|Copy>或者<shortcut|(kbd-copy)>则会留下选中文本。此时，再点击<menu|Edit|Paste>或者<shortcut|(kbd-paste)>，您可以将此前选中的文本粘贴至光标所在位置。

  选中文本后，您还可以改变选中区域的属性。比如，使用鼠标左键选中一些黑色文字，点击<render-menu|Format|<rigid|<render-menu|Color|<tabular*|<tformat|<cwith|1|1|1|1|cell-vcorrect|n>|<cwith|1|1|1|1|cell-lsep|1spc>|<cwith|1|1|1|1|cell-rsep|1spc>|<cwith|1|1|1|1|cell-bsep|1spc>|<cwith|1|1|1|1|cell-tsep|1spc>|<cwith|1|1|1|1|cell-width|1.5em>|<cwith|1|1|1|1|cell-hmode|exact>|<cwith|1|1|1|1|cell-background|red>|<table|<row|<cell|>>>>>>>>，将选中文字变成红色。又如，选中公式后点击<menu|Insert|Fraction>，则此公式将成为新插入分式的分子。

  与其它应用程序之间通过复制和粘贴机制通信时，文本是以<TeXmacs>的数据格式传输的。这意味直接从外部粘贴有格式的文本至<TeXmacs>，容易导致格式混乱。您可以通过<menu|File|Import>和<menu|File|Export>规避这种风险。默认地，复制和粘贴使用文本缓冲区。使用<menu|Edit|Paste from>和<menu|Edit|Copy to>，您可以指定选中文本的来源和去向。例如对于结构化文本<math|<frac|1|2>>，复制到<LaTeX>；粘贴自纯文本，可以得到$\\frac{1}{2}$；粘贴自<LaTeX>，可以得到结构化文本<math|<frac|1|2>>。

  使用键盘选中文本有以下两种方法：其一是按中<prefix|S->不放<\footnote>
    这里显示为<key|S->的原因就是按下此键，并不能剩下，还需要按下其它按键组合使用。
  </footnote>，使用<key|left>， <key|right>在文本上移动。其二是使用<shortcut|(kbd-select-enlarge)>固定一个起始点，再移动光标，移动过程中，起始点和光标所在点之间的区域即为选中区域。按下<shortcut|(selection-cancel)>，您可以退出这种选中的状态。

  注意使用<shortcut|(kbd-select-enlarge)>还可以用于结构化选中。按下<shortcut|(kbd-select-enlarge)>两次，当前光标所在处的单词将被选中。再次按下<shortcut|(kbd-select-enlarge)>，选中的范围将依照结构逐层扩大，比如一开始选中的是单词，下一步可能是段落。最终，将选中全文，此时，再次按下<shortcut|(kbd-select-enlarge)>，选中区域被清空。这里的<shortcut|(kbd-select-enlarge)>，也可以用鼠标左键替代。

  <section|查找和替换>

  使用<shortcut|(interactive-search)>或者<menu|Edit|Search>开始搜索文本。在搜索中，搜索字符在底端状态栏的左侧显示。你输入的每一个字符都将附加到搜索字符的末尾，文本中匹配的字符以细线红框围绕显示。在搜索过程按下<key|return>，搜索将继续进行。如果在下文中没有找到匹配项，<TeXmacs>什么也不做<todo|如果没有找到匹配项，应该显示“没有找到匹配项”；如果能找到，应显示“找到N项，目前指向第n项”>，底端的状态栏会显示相关信息，此时再次按下<shortcut|(interactive-search)>，搜索将从正文起始处重新进行<todo|无法复现>。按下<key|Backspace>可在搜索文本中撤销上一个字符输入。\ 

  通常情况下，搜索方向为自光标处往下。在Emacs快捷键风格中，使用<key|C-r>可以自光标处往上搜索。在搜索中，只匹配相同模式和相同语言下的文本。模式和语言在您开始搜索时有光标所在处决定。这意味着，如果你在数学模式中搜索<math|x>，那么文本中普通的x是不会被匹配到的<todo|最好能给用户一个选择的开关，选择搜索的宽松/严格模式，对于实际使用是方便的>。当前的局限之处在于，所搜索的文本只能是普通文本而不是数学符号或者更加复杂的结构化文本<todo|可以用结构化文本搜索>。

  使用<shortcut|(interactive-replace)>或者<menu|Edit|Replace>可查询并替换文本。开始替换时，在底端先请您输入被替换文本，再输入替换文本。每一次匹配到文本时，底端状态栏询问您选择(y)替换文本(n)不替换文本(a)替换此处及所有匹配处三者之一<todo|这段描述和mogan实际行为差异较大，需重写>。和搜索一样，查询-替换命令对模式和语言敏感。

  当前的搜索和替换系统还十分基础，仅仅是对普通文本的简单处理。未来，我们计划对结构化文本实现一种更加强大的搜索和替换机制。<todo|要尽快改进搜索功能，才能把手册这样的长文档实用性发挥出来>

  当前，您还可以用以下方式搜索和替换文档中的文本片段<todo|这一整段功能失效>：在您的文档中某处或者是其他的窗口中选中你想搜索的文本，点击菜单项<menu|Edit|Copy to|Search>，接下来按<shortcut|(interactive-search)>便可用选中的文本搜索。类似地，选中文本，点击菜单项<menu|Edit|Copy to|Replace>，再次选中另一个文本，接下来按<shortcut|(interactive-replace)>就能以前后两次选中的文本为参数执行替换操作。

  <section|拼写检查>

  在您的系统上已安裝拼写检查软件的前提下<\footnote>
    对于macOS系统，墨干会调用macOS系统提供的拼写检查API，故而无需安装额外的软件。对于Windows和Linux，请自行安装Hunspell或者Aspell，如果两者都安装了，那么会优先使用Hunspell。
  </footnote>，使用<shortcut|(interactive-spell)> 或者<menu|Edit|Spell>可以检查您的文本中是否有拼写错误。使用前，还请您先检查一下您所用语言的字典是否已经安装。

  对全文或者选中文本启用拼写后，您将会在底端收到错词的修正提示，有以下选项供您选择：

  <\description>
    <item*|tab)>接受错词，这样，以后的检查中将忽略该词

    <item*|+)>申明该词其实是正确的，并将该词添加到您的个人词典

    <item*|1-9)>对错词的推荐修正选项
  </description>

  请注意，拼写检查软件只管拼写对错，并不检查句子的语法正确与否。

  启动拼写检查后，设定语言是当前光标所在处的语言或者是选中区域的起始处的语言。拼写检查只会检查设定语言的拼写问题。这意味着，如果文档中有多种语言，您需要对每一个部分分别启用拼写检查。例如，当前的文档语言是中文，您在中文文档中的英文内容并不会被检查，除非你使用<menu|Insert|Language|British>手动标记相关内容的语言为英文。

  <section|撤销和恢复>

  <TeXmacs>只在运行时支持撤销和恢复操作。您可以使用菜单项<menu|Edit|Undo>和<menu|Edit|Redo>以及相应快捷键<shortcut|(undo 0)>和<shortcut|(redo 0)>来控制您对文档的改变。

  只有对文档内容本身的更改可以被撤销和恢复。例如，文档的全局属性，比如文档的样式、页面大小等等，无法被撤销和恢复。另外，对外部系统的调用也无法被撤销和恢复，比如在计算机代数系统的会话中，可编辑的内容可以被撤销和恢复，但是实际的计算是无法被撤销和恢复的。

  <section|结构化编辑><label|section:structured_editing>

  作为普适法则，几乎所有的结构化编辑命令是上下文相关的，从文档源代码的角度上讲，结构化编辑的效果由光标所在结构最深处的标记所决定。当您选中某些文本时，焦点会定位于选中结构最深处的标记。在诸如相似标记间导航的结构化操作中，当前的焦点会临时设置为其它某处。当前的焦点由光标所在结构中最深处的青盒子显式指示。

  比如，结构化插入命令<shortcut|(structured-insert-left)>， <shortcut|(structured-insert-right)>， <shortcut|(structured-insert-up)> 和 <shortcut|(structured-insert-down)> 在表格和树中含义不同。在表格中是插入行与列(见图<reference|matrix-insert-fig>)。在树中是插入新节点(见图 <reference|tree-insert-fig>)。倘若您的光标在表格中的树中，则从文档的源代码上说，最里面的标记实际上是树，所以使用结构化插入将优先插入节点，而不是行与列。

  在大多数情况下，结构化操作下标记的默认行为已预定义。比如<shortcut|(structured-insert-left)> 或<shortcut|(structured-insert-right)>是在标记的左边或者右边插入一个新的参数。

  <\big-figure>
    <\equation*>
      <matrix|<tformat|<table|<row|<cell|a>|<cell|b<cursor>>|<cell|c>>|<row|<cell|d>|<cell|e>|<cell|f>>>>><space|5em><matrix|<tformat|<table|<row|<cell|a>|<cell|b>|<cell|<cursor>>|<cell|c>>|<row|<cell|d>|<cell|e>|<cell|>|<cell|f>>>>><space|2em><matrix|<tformat|<table|<row|<cell|a>|<cell|<cursor>>|<cell|b>|<cell|c>>|<row|<cell|d>|<cell|>|<cell|e>|<cell|f>>>>><space|2em><matrix|<tformat|<table|<row|<cell|a>|<cell|b>|<cell|c>>|<row|<cell|>|<cell|<cursor>>|<cell|>>|<row|<cell|d>|<cell|e>|<cell|f>>>>><space|2em><matrix|<tformat|<table|<row|<cell|>|<cell|<cursor>>|<cell|>>|<row|<cell|a>|<cell|b>|<cell|c>>|<row|<cell|d>|<cell|e>|<cell|f>>>>>
    </equation*>
  <|big-figure>
    <label|matrix-insert-fig>假定光标在最左矩阵的<cursor>处。那个右边的四个矩阵按顺序分别对应往左边(<shortcut|(structured-insert-left)>)插入一新列，往右边(<shortcut|(structured-insert-right)> )插入一新列，往下边(<shortcut|(structured-insert-down)>)插入一新行，往上边(<shortcut|(structured-insert-up)>)插入一新行。
  </big-figure>

  <\big-figure|<tree|a|b|c<cursor>|d><space|3em><space|3em><tree|a|b|<cursor>|c|d><space|3em><tree|a|b|c|<cursor>|d><space|3em><tree|a|b|<tree|<cursor>|c>|d><space|3em><tree|a|b|<tree|c|<cursor>>|d>>
    <label|tree-insert-fig>假定光标位于最左边树的 <cursor> 处。那么右边的四棵树分别对应<shortcut|(structured-insert-left)>，<shortcut|(structured-insert-right)>，<shortcut|(structured-insert-up)>，<shortcut|(structured-insert-down)>后的效果
  </big-figure>

  类似地，在矩阵中，<shortcut|(structured-insert-start)>， <shortcut|(structured-insert-end)>， <shortcut|(structured-insert-top)> 和 <shortcut|(structured-insert-bottom)>可用于插入新的首列，末列，首行，末行。<shortcut|(structured-remove-left)> 和 <shortcut|(structured-remove-right)>可用于结构化后向或前向删除。在矩阵中，这将删除光标前或者后的一列(见图<reference|matrix-remove-fig>)。使用<shortcut|(remove-structure-upwards)>或者<shortcut|(remove-structure-upwards)>可删除光标所在标记外的环境块。

  <\big-figure>
    <\equation*>
      <matrix|<tformat|<table|<row|<cell|a>|<cell|b<cursor>>|<cell|c>>|<row|<cell|d>|<cell|e>|<cell|f>>>>><space|5em><matrix|<tformat|<table|<row|<cell|b<cursor>>|<cell|c>>|<row|<cell|e>|<cell|f>>>>><space|2em><matrix|<tformat|<table|<row|<cell|a>|<cell|<cursor>c>>|<row|<cell|d>|<cell|f>>>>><space|2em>b<cursor>
    </equation*>
  <|big-figure>
    <label|matrix-remove-fig>假定光标在最左矩阵的<cursor>处。中间两个矩阵对应按下<shortcut|(structured-remove-left)>和<shortcut|(structured-remove-right)>后的结果。最右边的矩阵是按下<shortcut|(remove-structure-upwards)>或者<shortcut|(remove-structure-upwards)>后的效果，其作用是用单元格内的内容替换掉整个矩阵结构。
  </big-figure>

  <section|结构化光标移动><label|section:structured_cursor_movement>

  <TeXmacs>实现了三种主要的结构化光标移动的机制

  <\enumerate>
    <item>整个文档结构的遍历

    <item>相似标记的遍历

    <item>最深处标记的移动
  </enumerate>

  大部分结构化光标移动的快捷键支持与<prefix|S->组合适用，以在移动的同时选中文本。

  <paragraph*|结构化遍历文档>

  <shortcut|(kbd-select-if-active traverse-left)>，<shortcut|(kbd-select-if-active traverse-right)>，<shortcut|(kbd-select-if-active traverse-up)>，<shortcut|(kbd-select-if-active traverse-down)>用于结构化遍历整个文档。在普通的文本中，<shortcut|(kbd-select-if-active traverse-left)>和<shortcut|(kbd-select-if-active traverse-right)>用于按词移动<\footnote>
    目前按词移动这个功能仅对英文生效，对于中文，后续我们会改进为按标点符号移动，最终，我们希望中文也能达到按词移动的效果，但是改功能需要引入对中文分词系统的依赖。
  </footnote>， 而<shortcut|(kbd-select-if-active traverse-up)>和<shortcut|(kbd-select-if-active traverse-down)>用于按段落移动。

  在其它标记中，<shortcut|(kbd-select-if-active traverse-left)>和<shortcut|(kbd-select-if-active traverse-right)>用于移动到文档中光标可访问的位置，在您持续在文本间按词移动时，则没有这个效果。<shortcut|(kbd-select-if-active traverse-up)>和<shortcut|(kbd-select-if-active traverse-down)>的行为更显上下文相关性，在矩阵中，可用于将某行向上或者向下移动<\footnote>
    该功能暂未实现
  </footnote>。

  <paragraph*|结构化遍历相似标记>

  此类光标移动是为了方便在文档中访问与当前最深处的标签相似的标签。<shortcut|(kbd-select-if-active traverse-previous)>和<shortcut|(kbd-select-if-active traverse-next)>对应与上一个和下一个，而<shortcut|(traverse-first)>和<shortcut|(traverse-last)>对应于第一个和最后一个。

  比如，当光标处于某节的标题中，用<shortcut|(kbd-select-if-active traverse-previous)>可以跳转到前一节的标题中。用<shortcut|(traverse-previous-section-title)>也可以跳回前一节的标题中<\footnote>
    <key|section>按键并不是所有键盘都有的
  </footnote>。

  <paragraph*|最深处标签的移动<todo|win快捷键失效，和系统快捷键冲突>>

  也可以在最深处的标签内移动而不必退出。<shortcut|(structured-left)>， <shortcut|(structured-right)>， <shortcut|(structured-start)>和<shortcut|(structured-end)>对应于跳转到光标的前一个，后一个，第一个，最后一个参数处。而<shortcut|(structured-exit-left)>或<shortcut|(structured-exit-right)>用于从左边或者右边跳出标签。

  在特定场景下，这些默认行为可能无法生效。比如，在表格或树中，这些快捷键对应于按单元格或者按节点的光标移动。除此之外，垂直方向上则使用<shortcut|(structured-up)>，<shortcut|(structured-down)>，<shortcut|(structured-top)>和<shortcut|(structured-bottom)>移动光标。

  <section|结构化变元><label|section:structured_variants>

  在创建定理，公式或者列表这些环境块的时候，我们经常需要在事后更改环境块。您可以使用<shortcut|(variant-circulate (focus-tree) #t)>或者<shortcut|(variant-circulate (focus-tree) #f)>循环选择最深处标记的<em|结构化变元>。前者顺序，后者逆序。

  假定您的光标在定理中，那么不断按下<shortcut|(variant-circulate (focus-tree) #t)>会在命题，引理，推论，证明，定理间轮换。而不断按下快捷键<shortcut|(variant-circulate (focus-tree) #f)>则是逆向轮换:定理 <math|\<rightarrow\>> 证明 <math|\<rightarrow\>> 推论 <math|\<rightarrow\>> 引理 <math|\<rightarrow\>> 命题 <math|\<rightarrow\>> 证明。

  在数学公式这个例子中， <shortcut|(variant-circulate (focus-tree) #t)>用于将行内公式 <math|a<rsup|2>+b<rsup|2>=c<rsup|2>> 转化为单行公式：

  <\equation*>
    a<rsup|2>+b<rsup|2>=c<rsup|2>
  </equation*>

  同时顾及尾随空格（trailing space）和标点符号的处理。

  <TeXmacs>还提供了<shortcut|(numbered-toggle (focus-tree))>快捷键以供您在编号模式和普通模式间切换。此快捷键在定理，注意，表格，公式等环境块适用<todo|这种名词最好和glossary连接，让读者能明白是theorems, remarks, tables, equations 和 <menu|theorem>、<menu|remark>、<menu|table>、<menu|equation>这样的对应关系，译名应当是一一对应的。>。注意<shortcut|(numbered-toggle (focus-tree))>和<shortcut|(variant-circulate (focus-tree) #t)>的区别，前者显示和隐藏编号，而后者是在一组可用环境如列表项目(圆点，短线，箭头等)间轮换。

  <section|移动和缩放对象><label|section:positioning_and_resizing_objects>

  <todo|win系列快捷键都失效，在Linux上没问题>

  <prefix|structured:geometry>键前缀用于移动和缩放对象。比如说，在表格中的单元格内部，使用<key|structured:geometry right>可使单元格更靠右。在使用<menu|Format|Space>插入的空格中，使用该键可增加空格的宽度。下面是结构化移动和缩放快捷键的通用功能描述:

  <\description>
    <item*|<shortcut|(geometry-left)>>减小对象的水平宽度，或者更向左对齐。

    <item*|<shortcut|(geometry-right)>>增加对象的水平宽度，或者更向右对齐。

    <item*|<shortcut|(geometry-down)>>减小/增加对象的竖直高度，或者更向底部对齐。

    <item*|<shortcut|(geometry-up)>>减小/增加对象的竖直高度，或者更向顶部对齐。

    <item*|<shortcut|(geometry-start)>>减小对象的水平位移或者对齐。

    <item*|<shortcut|(geometry-end)>>增加对象的水平位移或者对齐。

    <item*|<shortcut|(geometry-bottom)>>减小对象的垂直位移或者底部对齐。

    <item*|<shortcut|(geometry-top)>>增加对象的垂直位移或者顶部对齐。

    <item*|<shortcut|(geometry-reset)>>将几何性质(大小，位置，对齐)重设为默认值。

    <item*|<shortcut|(geometry-circulate #t)>， <shortcut|(geometry-circulate #f)>>在可用长度单元间循环以指定其几何结构。

    <item*|<shortcut|(geometry-slower)>， <shortcut|(geometry-faster)>>减小或者增加移动或者缩放的步长。
  </description>

  下面是一些特定标记下的特定说明:

  <\description>
    <item*|空白>空白指的是<menu|Format|Space>中的水平或者竖直空白。若要使用快捷键，必须把光标置于空白标记之后。

    <item*|盒修饰器><menu|Format|Transform>菜单中的<markup|move>， <markup|shift>， <markup|resize>和<markup|clipped>标记<todo|过时，实际菜单为<menu|rotate>、<menu|Dilate>、<menu|Skew>、<menu|Linear 2D>>

    <item*|动画>动画的长度可用<shortcut|(geometry-left)>和<shortcut|(geometry-right)>更改。

    <item*|图片>其大小和对齐可供更改。<shortcut|(geometry-left)>和<shortcut|(geometry-right)>可用于图片在水平方向的放大和缩小，<shortcut|(geometry-down)>和<shortcut|(geometry-up)>可用于图片在竖直方向上的放大和缩小。<shortcut|(geometry-bottom)>和<shortcut|(geometry-top)>可以调整图片在竖直方向上的位移。
  </description>

  <section|版本控制>

  与他人合作撰写文档时，会产生这样的需求，即审阅他人对文档的更改，然后或接受或舍弃或更正。在<menu|Tools|Versioning tool>启用版本控制菜单后，菜单栏中会新增<menu|版本>这一项。下面我们来谈谈这个菜单是如何使版本控制的过程更加方便。

  当前流行的版本控制工具有<hlink|<name|Subversion>|http://subversion.tigris.org/>， <hlink|<name|Git>|http://git-scm.com/>， <hlink|<name|Darcs>|http://darcs.net/>， <hlink|<name|GNU Arch>|http://www.gnu.org/software/gnu-arch/>等。<TeXmacs>目前只对<name|Subversion>和<name|Git>提供基础支持，不过要集成其他的版本控制工具也并不困难。

  <paragraph*|比较两个版本>

  假定我们有同一个文档的两个版本<shell|old.tm>和<shell|new.tm>。通过以下步骤可以显示旧版本和新版本的差异：首先打开<shell|new.tm>这个文件，然后点击<menu|Version|Compare|With older version>选中<shell|old.tm>打开。此时，缓冲区的命名仍为<shell|new.tm>，更改通过特殊的标记显示在缓冲区中。假定存在差异，那么光标初始定位在第一个差异处。类似地，你还可以先打开旧版本，在点击<menu|Version|Compare|With newer version>和新版本比较。

  通过子菜单<menu|Version|Move>，你可以在文档中的差异间上下移动。相应的快捷键是 <shortcut|(version-previous-difference)>和<shortcut|(version-next-difference)>。如果你已经了解了<strong|结构化光标移动>（<smart-ref|section:structured_cursor_movement>），不妨使用更加通用的快捷键，即 <shortcut|(traverse-first)> ， <shortcut|(traverse-last)> ， <shortcut|(traverse-first)>和<shortcut|(traverse-last)>。

  <paragraph*|差异的可视化>

  版本间的差异有三种方式显示：只显示旧版本，只显示新版本，或者两者兼顾。旧版本字体呈深红色的，新版本则为墨绿。

  每一处差异的可视化的显示方式都可以通过<menu|Version|Show>或者快捷键<shortcut|(version-show 'version-old)>（显示旧版）， <shortcut|(version-show 'version-new)>（显示新版）和<shortcut|(version-show 'version-both)>（两者都显示）更改。也可以用<shortcut|(variant-circulate (focus-tree) #t)>在这些方式间轮换，此即所谓<strong|结构化变元>（<smart-ref|section:structured_variants>）。通过选中文本，可以扩大以上快捷键的作用域，特别地，选中全文，则所有差异的显示方式同步更改。<\footnote>
    如果你选中了部分文本，或者全文，此时无法使用结构化变元的结构轮换快捷键切换显示的内容。
  </footnote>

  <paragraph*|保留特定版本<todo|win系列快捷键失效>>

  我们经常需要在两个版本之间斟酌推敲，逐步对每一个差异的选择保留其中之一。假定当前光标是在某一个差异之中，那么此时可用子菜单<menu|Version|Retain>或者快捷键 <shortcut|(version-retain 0)>，<shortcut|(version-retain 1)> 和 <shortcut|(version-retain 'current)> 分别保留旧版本，新版本和当前版本。如果当前是新旧版本兼显示，那么按下<shortcut|(version-retain 'current)>会保留新版本。选定版本后，光标会自动跳到下一个差异处，这样我们可以继续进行操作。

  <paragraph*|粒度控制和差异重现>

  子菜单<menu|Version|Grain>用于控制版本间差异的计算。默认地，我们使用最细的粒度<menu|Detailed>。使用<menu|Block>，则版本间的差异将以段落为基础计算。也是就说，在比较中，只要两个版本在段落上有任何差异，就会高亮显示。最粗糙的粒度是<menu|Rough>，只要两个版本间存在差异，全文就会高亮显示。

  粒度选项在使用<menu|Version|File|Compare>时产生作用，但也可以为选中文本更改比较的粒度，只要在选中文本后，再更改<menu|Version|Grain>子菜单即可。特别地，整个缓冲区的比较粒度也可以这样更改。类似地，如果你在一个差异中更改了粒度值，那么差异将以新的粒度重新计算并显示。

  注意您还可以更改文本后，再改变比较粒度。效果将是重新显示选中部分的差异或者是光标处差异。这在特定情境下非常实用。有如下情境，旧版本中有一个引理，而您在新版本中将其改成了定理并在其中做了少量更改。此时，若显示差异，整个定理都将高亮显示。这其实是由<TeXmacs>文档内部的结构决定的。如果要显示其中内容的差异，您只需将旧版本中的引理改成定理即可。

  <paragraph*|使用外部版本控制工具>

  如果你正在编辑的文件所在的目录在某个版本控制系统下，那么<menu|版本>下拉菜单中分隔符以上的部分会被激活。目前<TeXmacs>支持<name|Subversion>和<name|Git>。

  <paragraph|SVN相关功能介绍>

  首先，如果当前的缓冲区在版本控制下，那么你可以通过<menu|Version|History>浏览该文件的历史版本。该子菜单的下拉菜单是一系列旧版本的超链接及相关信息，比如何时何人更改。历史版本是只读的，但你可以使用<menu|Version|Compare|With current user version>将它们和当前的版本比较。

  对版本控制下的文本更改后，编辑器中的版本不再和版本库中的版本相对应。此时，点击<menu|Version|Commit>以提交更新。提交之后，系统会显示您已经提交的更改。通过<menu|Version|Register>，您可以把不在版本控制下的文件添加到版本控制系统中。只是注册文件并不会将文件提交到版本库中，您仍然需要点击<menu|Version|Commit>以提交您的更改。

  如果在你编辑某文件时，其对应的版本库中的文件正好被更改，此时，你需要点击<menu|Version|Update>，将两者合并。现在还没有对完成针对冲突的解决方案，不过，不久您就能轻松解决冲突了。

  <chapter|幻灯片>

  \;

  <TeXmacs> features a “presentation mode”, for making presentations from a laptop.<todo|为什么是笔记本电脑？> The presentation mode is activated/deactivated using <menu|View|Presentation mode> or <shortcut|(toggle-full-screen-mode)>.<todo|好像linux的效果比window好，windows在非幻灯片模式下有个大黑边><todo|linux快捷键被占用> In this chapter, we describe several dedicated style packages and markup elements which can be used for making slick presentations.

  Several types of remote controllers are supported for laptop presentations. Some of them (such as Apple infrared controllers) should work out of the box (at least for the Qt version). Others map the buttons on the remote controller to certain keys on your keyboard, and you will need to toggle <menu|View|Remote control> in order to remap these keys to the right actions during presentations. If necessary, the appropriate mappings may be specified in <menu|Edit|Preferences|Keyboard|Remote control>. By activating the debugging tool <menu|Tools|Debugging tool> and <menu|Debug|keyboard>, you may find out the particular mappings used by your remote control.<todo|遥控器部分暂无法实在测，掠过>

  <section|Beamer styles>

  In order to start writing a laptop presentation, you should first select the <tmstyle|beamer> style using <menu|Document|Style|beamer>. There are several main “themes” for presentations, such as <subsubmenu|Document|Beamer theme|Bluish>, <subsubmenu|Document|Beamer theme|Ice>, <subsubmenu|Document|Beamer theme|Metal>, <subsubmenu|Document|Beamer theme|Reddish>, <subsubmenu|Document|Beamer theme|Ridged paper>, which can be selected from the <menu|Document|Beamer theme> menu.

  The presentation style includes the <tmstyle|alt-colors> style package, which features the use of colors for mathematical formulas, enunciations, etc. Additional customizations of the presentation style are available in the <menu|Focus|Preferences> <todo|不可用>menus for the various tags to which they apply. For instance, the rendering of slide titles and theorems can be further customized.

  <section|Traversal of a presentation>

  One major family of markup tags for presentations concerns the traversal of the document during a presentation. The keys <key|F10> and <key|F11> are used respectively for going back and forth in the presentation. The keys <key|F9> and <key|F12> are used to go to the start <abbr|resp.> end of the presentation. When using the <tmstyle|beamer> style or when enabling the “presentation tool” in the <menu|Tools> menu, a <menu|Dynamic> menu and additional icons will appear, which can also be used for the traversal of your presentation.

  The most basic traversal tag is called a “switch”, and allows the user to show different pieces of text in successive and mutually exclusive manner. The entire presentation itself usually consists of a <markup|screens> switch, where the pieces are the successive “slides” of the presentation. After selection of the <tmstyle|beamer> style, this switch can be inserted using <menu|Focus|Screens> or <menu|Insert|Fold|Switch|Screens>.<todo|不可用> You may jump from one screen to another one using <key|pageup> and <key|pagedown>.

  Inside a switch, new “branches” can be inserted after or before the currently visible branch using <menu|Focus|Insert argument after> or <menu|Focus|Insert argument before>. Besides the <markup|screens> switch, you may use <menu|Insert|Fold|Switch|Standard> to insert paragraph-wide switches, and <menu|Insert|Fold|Switch|Tiny> to insert inline switches (similarly to displayed and inline formulas).

  Another popular way to traverse is presentation is to progressively unroll content. This can be done by inserting an <markup|unroll> tag using <menu|Insert|Fold|Unroll>. Using a “hack” this tag can be combined with the <markup|itemize> and <markup|enumerate> tags: first create the list environment, but remove the first (automatically inserted) <markup|item> tag. Next insert the unroll tag. When pressing <key|enter> inside the unroll tag, new items are created; you still have to use <menu|Focus|Insert argument after> for inserting new branches to the unroll structure (in particular, several items could be unrolled at once).<todo|写的不好懂，其实就是插入可逐个显示的列表，例如<menu|Insert|Fold|Unroll|Itemize>，这样插入的列表可用<menu|mode>工具栏的播放按钮或PageDown/PageUp控制逐个显示/隐藏，至于它在功能上实现的本质，可以从<menu|Beamer>切换到<menu|Source>查看>

  A variant of unrolling is unfolding. This is basically an unroll tag with exactly two branches, but different variants are available in <menu|Insert|Fold|Folded> depending on the desired rendering. In particular, some of the renderings display a button which may be pushed in order to fold or unfold some content. The input-output fields inside computer algebra sessions are also foldable. Similarly, the tags in <menu|Insert|Fold|Summarize> are switches with two branches, again with different kinds of rendering.<todo|没看懂，不会用>

  When using <TeXmacs> in combination with an external plug-in, such as a computer algebra system, you will notice that all input-output fields in <hlink|sessions|../interface/man-session-basic.en.tm> are foldable. In addition, you can create so called “<hlink|executable switches|../interface/man-scripting-language.en.tm>” using the items in the <menu|Insert|Fold|Executable> submenu. This allows you to switch back and forth between a given input to the system and the corresponding output.

  All markup for the traversal of presentations may be nested in a natural way. In the <menu|Insert|Fold|Traversal> menu, you may specify whether unrolled and folded structures should be folded back after traversal.<todo|写的不够明白，其实就是控制这种情形：用标签指定折叠对象A被展开后，跳转到下一个折叠对象B时，折叠对象A是否要恢复折叠态。如果要，就选择折叠对象A整个的情况下，<menu|Insert|Fold|Traversal|Fold Back>。但有一个问题，假设我一开始加了<menu|Fold Back>标签，后面又反悔了，用删除标签按钮会把列表内容也一并删除，而非单独删除标签，似乎必须回到<menu|Source>编辑。>

  <section|Overlays>

  The standard “fold”, “unroll” and “switch” tags implement the most frequent kinds of traversal of a slideshow. However, there are cases in which more complex successions are needed.

  <\big-figure|<block|<tformat|<cwith|1|1|1|1|cell-hyphen|t>|<twith|table-width|0.333par>|<twith|table-hmode|exact>|<table|<row|<\cell>
    <\compact>
      Elimination of <math|x> from

      <\equation*>
        x*sin y-3*x*y=\<alpha\>
      </equation*>

      yields

      <\equation*>
        x=<frac|\<alpha\>|sin y-3*y>.
      </equation*>
    </compact>
  </cell>>>>><space|2em><block|<tformat|<cwith|1|1|1|1|cell-hyphen|t>|<twith|table-width|0.333par>|<twith|table-hmode|exact>|<table|<row|<\cell>
    <\compact>
      Elimination of <math|<with|color|red|x>> from

      <\equation*>
        <with|color|red|x>*sin y-3*<with|color|red|x>*y=\<alpha\>
      </equation*>

      yields

      <\equation*>
        <with|color|red|x>=<frac|\<alpha\>|sin y-3*y>.
      </equation*>
    </compact>
  </cell>>>>>>
    <label|red-x-fig>Example of highlighting a variable <math|x> when switching from one slide to a next one.
  </big-figure>

  For instance, imagine that we are given a slide, and that we wish to highlight all occurrences of some variable <math|x> in red on the next slide (see figure<nbsp><reference|red-x-fig>). This could be achieved by using a switch tag: we just copy the whole slide both in the first and in the second branch of the switch, and next color all instances of <math|x> red in the second branch. However, this solution has the disadvantage that any <em|a posteriori> modification on the slide has to be made both in the first and in the second branch.

  <TeXmacs> provides a so called “overlay” mechanism for this kind of more complex successions of slides. You may insert a pile of overlays using <menu|Insert|Fold|Overlays|Standard>. At the start, the pile contains a unique overlay, but new overlays can then be added using the standard keyboard shortcuts <shortcut|(structured-insert-right)> and <shortcut|(structured-insert-left)> for <hlink|structured insertion|../editing/man-structured-editing.en.tm><todo|链接失效>. When applied to overlays, the standard keys <key|F10> and <key|F11> for traversing the presentation have the effect of going up and down in the pile of overlays.

  By default, all text which is typed by the user will be visible on all overlays. But, using the filters in the menu <menu|Insert|Fold|Overlay>, it is also possible to create text which is only visible on specified overlays of the pile. There are four basic types of filters:

  <\description>
    <item*|<subsubsubmenu|Insert|Fold|Overlay|Visible from here on>>Text that will be visible on this and all subsequent overlays.

    <item*|<subsubsubmenu|Insert|Fold|Overlay|Visible until here>>Text that will be visible on this and all previous overlays.

    <item*|<subsubsubmenu|Insert|Fold|Overlay|Visible only here>>Text that will be visible only on this overlay.

    <item*|<subsubsubmenu|Insert|Fold|Overlay|Visible except here>>Text that will be visible on all but the current overlays.
  </description>

  In a similar way, <TeXmacs> provides tags for alternate views: depending on whether a certain predicate is met, we show the “main content” on certain overlays and the “alternate content” on the remaining overlays. We use the same four types of predicates:

  <\description>
    <item*|<subsubsubmenu|Insert|Fold|Overlay|Alternate from here on>>The alternate text will be used on this and all subsequent overlays.

    <item*|<subsubsubmenu|Insert|Fold|Overlay|Alternate until here>>The alternate text will be used on this and all previous overlays.

    <item*|<subsubsubmenu|Insert|Fold|Overlay|Alternate only here>>The alternate text will only be used on this overlay.

    <item*|<subsubsubmenu|Insert|Fold|Overlay|Alternate except here>>The alternate text will be used on all but the current overlays.
  </description>

  <TeXmacs> finally provides a means of customizing the way that “hidden” and “shown” content should be rendered: user determined coloring schemes can be used using the <markup|alter-colors> tag which can be inserted from <menu|Insert|Fold|Overlay|Specify color alternation>. For instance, in order to achieve the effect mentioned in the example from Figure<nbsp><reference|red-x-fig>, you may specify a “black to red” color alternation, and then use a <subsubsubmenu|Insert|Fold|Overlay|Visible from here on> type of overlay.<todo|操作不出来，不会用>

  <section|Decorations>

  In order to decorate your laptop presentations, <TeXmacs> provides a few extra markup elements: <markup|granite>, <markup|manila-paper>, <markup|metal>, <markup|pine>, <markup|ridged-paper> and <markup|rough-paper>. These tags will put your content on a nice, natural background, as illustrated in the figure below. You may also use the <markup|tit> tag for giving individual slides a title.<todo|如何操作？>

  <\big-figure>
    <use-package|ornaments><tabular*|<tformat|<table|<row|<cell|<granite|<tabular*|<tformat|<twith|table-lsep|0.5em>|<twith|table-rsep|0.5em>|<twith|table-bsep|0.5em>|<twith|table-tsep|0.5em>|<cwith|1|1|1|1|cell-bsep|0.5em>|<table|<row|<cell|<large|<strong|Granite>>>>|<row|<cell|<math|a<rsup|2>+b<rsup|2>=c<rsup|2>>>>>>>><space|1em><metal|<tabular*|<tformat|<twith|table-lsep|0.5em>|<twith|table-rsep|0.5em>|<twith|table-bsep|0.5em>|<twith|table-tsep|0.5em>|<cwith|1|1|1|1|cell-bsep|0.5em>|<table|<row|<cell|<large|<strong|Metal>>>>|<row|<cell|<math|a<rsup|2>+b<rsup|2>=c<rsup|2>>>>>>>><space|1em><pine|<tabular*|<tformat|<twith|table-lsep|0.5em>|<twith|table-rsep|0.5em>|<twith|table-bsep|0.5em>|<twith|table-tsep|0.5em>|<cwith|1|1|1|1|cell-bsep|0.5em>|<table|<row|<cell|<large|<strong|Pine>>>>|<row|<cell|<math|a<rsup|2>+b<rsup|2>=c<rsup|2>>>>>>>>>>|<row|<cell|>>|<row|<cell|<manila-paper|<tabular*|<tformat|<twith|table-lsep|0.5em>|<twith|table-rsep|0.5em>|<twith|table-bsep|0.5em>|<twith|table-tsep|0.5em>|<cwith|1|1|1|1|cell-bsep|0.5em>|<table|<row|<cell|<large|<strong|Manila paper>>>>|<row|<cell|<math|a<rsup|2>+b<rsup|2>=c<rsup|2>>>>>>>><space|1em><ridged-paper|<tabular*|<tformat|<twith|table-lsep|0.5em>|<twith|table-rsep|0.5em>|<twith|table-bsep|0.5em>|<twith|table-tsep|0.5em>|<cwith|1|1|1|1|cell-bsep|0.5em>|<table|<row|<cell|<large|<strong|Ridged paper>>>>|<row|<cell|<math|a<rsup|2>+b<rsup|2>=c<rsup|2>>>>>>>><space|1em><rough-paper|<tabular*|<tformat|<twith|table-lsep|0.5em>|<twith|table-rsep|0.5em>|<twith|table-bsep|0.5em>|<twith|table-tsep|0.5em>|<cwith|1|1|1|1|cell-bsep|0.5em>|<table|<row|<cell|<large|<strong|Rough paper>>>>|<row|<cell|<math|a<rsup|2>+b<rsup|2>=c<rsup|2>>>>>>>>>>>>>

    \;
  <|big-figure>
    <label|ornament-fig>Some standard ornaments for decorating your presentations.
  </big-figure>

  <section|Animations>

  <TeXmacs> provides some rudimentary support for animations inside laptop presentations. This support is likely to be further improved in future <TeXmacs> distributions.

  The simplest animations are available from the menus <menu|Insert|Animation|Translate> <todo|<menu|Insert|Animation|Appear|Translate>>and <menu|Insert|Animation|Progressive>.<todo|<menu|Insert|Animation|Appear|Progressive>> Using the first menu, it is possible to create moving content: you first specify a duration for the full animation and then enter the content which has to be moved. The different kinds of moving content are illustrated in figure<nbsp><reference|translate-fig>. Similarly, using the second menu, it is possible to create content which only progressively appears on the screen. The various kinds of progressive content are illustrated in figure<nbsp><reference|progressive-fig>. The duration of the animations can be <hlink|modified <em|a<nbsp>posteriori>|../editing/man-structured-geometry.en.tm> by putting your cursor inside them and using the shortcuts <shortcut|(geometry-left)> and<nbsp><shortcut|(geometry-right)>. <todo|动画调整都在焦点工具栏进行选择；快捷键失效>

  <big-figure|<tabular*|<tformat|<cwith|1|1|1|1|cell-lsep|0.5em>|<cwith|1|1|1|1|cell-rsep|0.5em>|<cwith|1|1|1|1|cell-bsep|0.5em>|<cwith|1|1|1|1|cell-tsep|0.5em>|<cwith|1|1|1|1|cell-background|pastel yellow>|<cwith|2|2|1|1|cell-tsep|0.5em>|<table|<row|<cell|<anim-translate|<large|Hello world>|2sec|<tuple|-1.0|0.0>|>>>|<row|<cell|<menu|Rightwards>>>>>><space|1em><tabular*|<tformat|<cwith|1|1|1|1|cell-lsep|0.5em>|<cwith|1|1|1|1|cell-rsep|0.5em>|<cwith|1|1|1|1|cell-bsep|0.5em>|<cwith|1|1|1|1|cell-tsep|0.5em>|<cwith|1|1|1|1|cell-background|pastel yellow>|<cwith|2|2|1|1|cell-tsep|0.5em>|<table|<row|<cell|<anim-translate|<large|Hello world>|2sec|<tuple|1.0|0.0>|>>>|<row|<cell|<menu|Leftwards>>>>>><space|1em><tabular*|<tformat|<cwith|1|1|1|1|cell-lsep|0.5em>|<cwith|1|1|1|1|cell-rsep|0.5em>|<cwith|1|1|1|1|cell-bsep|0.5em>|<cwith|1|1|1|1|cell-tsep|0.5em>|<cwith|1|1|1|1|cell-background|pastel yellow>|<cwith|2|2|1|1|cell-tsep|0.5em>|<table|<row|<cell|<anim-translate|<large|Hello world>|2sec|<tuple|0.0|-1.0>|>>>|<row|<cell|<menu|Upwards>>>>>><space|1em><tabular*|<tformat|<cwith|1|1|1|1|cell-lsep|0.5em>|<cwith|1|1|1|1|cell-rsep|0.5em>|<cwith|1|1|1|1|cell-bsep|0.5em>|<cwith|1|1|1|1|cell-tsep|0.5em>|<cwith|1|1|1|1|cell-background|pastel yellow>|<cwith|2|2|1|1|cell-tsep|0.5em>|<table|<row|<cell|<anim-translate|<large|Hello world>|2sec|<tuple|0.0|1.0>|>>>|<row|<cell|<menu|Downwards>>>>>>|<label|translate-fig>Moving content, as inserted from <menu|Insert|Animation|Translate>.>

  <big-figure|<tabular*|<tformat|<cwith|1|1|1|1|cell-lsep|0.5em>|<cwith|1|1|1|1|cell-rsep|0.5em>|<cwith|1|1|1|1|cell-bsep|0.5em>|<cwith|1|1|1|1|cell-tsep|0.5em>|<cwith|1|1|1|1|cell-background|pastel yellow>|<cwith|2|2|1|1|cell-tsep|0.5em>|<table|<row|<cell|<anim-progressive|<large|Hello<anim-progressive||2sec|<tuple|0.0|0.0|0.0|1.0>|>>|2sec|<tuple|0.0|0.0|0.0|1.0>|>>>|<row|<cell|<menu|Rightwards>>>>>><space|1em><tabular*|<tformat|<cwith|1|1|1|1|cell-lsep|0.5em>|<cwith|1|1|1|1|cell-rsep|0.5em>|<cwith|1|1|1|1|cell-bsep|0.5em>|<cwith|1|1|1|1|cell-tsep|0.5em>|<cwith|1|1|1|1|cell-background|pastel yellow>|<cwith|2|2|1|1|cell-tsep|0.5em>|<table|<row|<cell|<anim-progressive|<large|Hello>|2sec|<tuple|1.0|0.0|1.0|1.0>|>>>|<row|<cell|<menu|Leftwards>>>>>><space|1em><tabular*|<tformat|<cwith|1|1|1|1|cell-lsep|0.5em>|<cwith|1|1|1|1|cell-rsep|0.5em>|<cwith|1|1|1|1|cell-bsep|0.5em>|<cwith|1|1|1|1|cell-tsep|0.5em>|<cwith|1|1|1|1|cell-background|pastel yellow>|<cwith|2|2|1|1|cell-tsep|0.5em>|<table|<row|<cell|<anim-progressive|<large|Hello world>|2sec|<tuple|0.5|0.5|0.5|0.5>|>>>|<row|<cell|<menu|From center>>>>>><space|1em><tabular*|<tformat|<cwith|1|1|1|1|cell-lsep|0.5em>|<cwith|1|1|1|1|cell-rsep|0.5em>|<cwith|1|1|1|1|cell-bsep|0.5em>|<cwith|1|1|1|1|cell-tsep|0.5em>|<cwith|1|1|1|1|cell-background|pastel yellow>|<cwith|2|2|1|1|cell-tsep|0.5em>|<table|<row|<cell|<anim-progressive|<large|Hello>|2sec|<tuple|0.0|0.0|1.0|0.0>|>>>|<row|<cell|<menu|Upwards>>>>>><space|1em><tabular*|<tformat|<cwith|1|1|1|1|cell-lsep|0.5em>|<cwith|1|1|1|1|cell-rsep|0.5em>|<cwith|1|1|1|1|cell-bsep|0.5em>|<cwith|1|1|1|1|cell-tsep|0.5em>|<cwith|1|1|1|1|cell-background|pastel yellow>|<cwith|2|2|1|1|cell-tsep|0.5em>|<table|<row|<cell|<anim-progressive|<large|Hello>|2sec|<tuple|0.0|1.0|1.0|1.0>|>>>|<row|<cell|<menu|Downwards>>>>>>|<label|progressive-fig>Progressive content, as inserted from <menu|Insert|Animation|Progressive>.>

  Other basic animations are “animated gif pictures”, which can be inserted from <menu|Insert|Animation|Animation>,<todo|菜单有两个“动画”，上面那个无法点击；下面那个点击了，尝试插入GIF但也失败了，下拉菜是空的不知道填什么可以正确插入> and sounds, which can be inserted from <menu|Insert|Animation|Sound>. Support for movies should be added later.

  It is also possible to combine animation, so as to form larger animations. For instance, using <menu|Insert|Animation|Compose> you can play several animations one after another. Often the individual elements of a composed animations are fixed animation of a given duration, which can be inserted using <menu|Insert|Animation|Fixed>. Of course, you may also use moving or progressive content or even composed animations as building blocks. An animation can be repeated indefinitely using <menu|Insert|Animation|Repeat>. This may for instance be used to create a blinking effect. Some examples of the various possibilities can be found in figure<nbsp><reference|compose-fig>. <rsub|<math|>><todo|链接失效>

  <big-figure|<tabular*|<tformat|<cwith|1|1|1|1|cell-lsep|0.5em>|<cwith|1|1|1|1|cell-rsep|0.5em>|<cwith|1|1|1|1|cell-bsep|0.5em>|<cwith|1|1|1|1|cell-tsep|0.5em>|<cwith|1|1|1|1|cell-background|pastel yellow>|<cwith|2|2|1|1|cell-tsep|0.5em>|<table|<row|<cell|<anim-compose|<anim-constant|<large|Hello>|2sec>|<anim-constant|<large|World>|2sec>>>>|<row|<cell|Compose>>>>><space|1em><tabular*|<tformat|<cwith|1|1|1|1|cell-lsep|0.5em>|<cwith|1|1|1|1|cell-rsep|0.5em>|<cwith|1|1|1|1|cell-bsep|0.5em>|<cwith|1|1|1|1|cell-tsep|0.5em>|<cwith|1|1|1|1|cell-background|pastel yellow>|<cwith|2|2|1|1|cell-tsep|0.5em>|<table|<row|<cell|<anim-repeat|<anim-compose|<anim-constant|<large|<space|0.6spc>Hello>|1sec>|<anim-constant|<large|World>|1sec>>>>>|<row|<cell|Blinking>>>>><space|1em><tabular*|<tformat|<cwith|1|1|1|1|cell-lsep|0.5em>|<cwith|1|1|1|1|cell-rsep|0.5em>|<cwith|1|1|1|1|cell-bsep|0.5em>|<cwith|1|1|1|1|cell-tsep|0.5em>|<cwith|1|1|1|1|cell-background|pastel yellow>|<cwith|2|2|1|1|cell-tsep|0.5em>|<table|<row|<cell|<large|<anim-repeat|<anim-compose|<anim-constant|<with|color|brown|T<space|-0.2spc><rsub|<with|math-level|0|font-shape|small-caps|e>>X<space|-0.2spc>><with|color|dark green|<rsub|<with|math-level|0|font-shape|small-caps|m<space|-0.2spc>a<space|-0.4spc>c<space|-0.2spc>s>>>|1sec>|<anim-constant|<with|color|dark green|T<space|-0.2spc><rsub|<with|color|brown|<with|math-level|0|font-shape|small-caps|e>>>X<space|-0.2spc>><with|color|brown|<rsub|<with|math-level|0|font-shape|small-caps|m<space|-0.2spc>a<space|-0.4spc>c<space|-0.2spc>s>>>|1sec>>>>>>|<row|<cell|<TeXmacs> logo>>>>><space|1em><tabular*|<tformat|<cwith|1|1|1|1|cell-lsep|0.5em>|<cwith|1|1|1|1|cell-rsep|0.5em>|<cwith|1|1|1|1|cell-bsep|0.5em>|<cwith|1|1|1|1|cell-tsep|0.5em>|<cwith|1|1|1|1|cell-background|pastel yellow>|<cwith|2|2|1|1|cell-tsep|0.5em>|<table|<row|<cell|<anim-repeat|<large|<name|<anim-compose|<anim-progressive|<with|color|dark green|Mathe<rsub|<math|>>>|2sec|<tuple|0.0|0.0|0.0|1.0>|><phantom|magiX>|<anim-constant|<with|color|dark green|Mathe<rsub|<math|>>><with|color|dark magenta|magiX>|1sec>>>>>>>|<row|<cell|<name|Magix> animation>>>>>|<label|compose-fig>Different kinds of composed animations.>

  <section|Exporting presentations>

  Once you have created a file with the <tmstyle|beamer> style you may want to export it to <abbr|PDF> in order to be able to give your presentation without using <TeXmacs>. There are two ways in which this can be done: <em|expanded> and <em|unexpanded>.

  <\enumerate>
    <item><em|Expanded> means that <markup|fold>s of all kinds are “flattened” out before they are exported. This is useful if you intend the resulting <abbr|PDF> file to be distributed and printed, since it will have exactly as many pages as slides your presentation.

    <item><em|Unexpanded> means that the <abbr|PDF> file will have as many pages as <em|steps> your presentation, which depending on your use of <markup|fold>, <markup|switch>, <markup|overlay>, etc. will typically result in many more pages.
  </enumerate>

  You can select which of these methods will be used with <menu|Preferences|Converters|TeXmacs-\<gtr\>Pdf/Postscript|Expand beamer slides>.

  <chapter|交互式界面>

  \;

  An important feature of <TeXmacs> is it's ability to communicate with extern systems. For computer algebra systems or other scientific computation systems, this is typically done in shell-like sessions, in which it is possible to evaluate commands and display the results in a nice, graphical way. Some systems can also be used more in the background as scripting languages.

  See <menu|Help|Plug-ins> for a list of existing plug-ins and more documentation on these systems.

  <section|创建会话>

  A session can be started from the <menu|Insert|Session> menu. Since <TeXmacs> is based on the <name|Scheme> language, it is always possible to start a <name|Scheme> session using <menu|Insert|Session|Scheme>. On <name|Unix> systems, it is usually also possible to start <name|Bash> shell sessions using <menu|Insert|Session|Shell>. The remainder of the items in the <menu|Insert|Session> menu depend on the plug-ins which are installed on your system.<todo|这里根据Mogan实际情况重写自带哪些插件，可以安装哪些插件>

  A session consists of a sequence of input and output fields and possible text between them.<todo|possible text指什么？副作用还是什么？> When pressing <shortcut|(kbd-return)> inside an input field of a session, the text inside the environment is evaluated and the result is displayed in an output field.

  When entering a command in a session, the application attempts to execute it. Several commands may be launched concurrently in the same document, but the output will only be active in the session where the cursor is and at the place of the cursor. Therefore, we recommend to use different buffers for parallel executions.<todo|是指新建不同的文档来同时进行吗？>

  For each type of extern application, one may choose between sharing a single process by different sessions, or launching a separate process for each different session. More precisely, when inserting a session using <menu|Insert|Session|Other>, you may specify both a “session type” (Shell, Pari, Maxima, <abbr|etc.>) and a “session name” (the default name is “default”). Sessions with different names correspond to different processes and sessions with the same name share a common process.

  In order to finish the process which underlies a given session, you may use <menu|Session|Close session><todo|<menu|focus>工具栏\<ldots\>\<ldots\>>. When pressing <shortcut|(kbd-return)> in the input of a non-connected system, the system will be restarted automatically. You may also use <menu|Session|Interrupt execution> <todo|<menu|focus>工具栏\<ldots\>\<ldots\>>in order to interrupt the execution of a command. However, several applications do not support this feature.

  In order to evaluate all fields of <abbr|e.g.> a previously created session, you may use <menu|Session|Evaluate|Evaluate all>. <todo|<menu|focus>工具栏\<ldots\>\<ldots\>>Similarly, <menu|Session|Evaluate|Evaluate above> and <menu|Session|Evaluate|Evaluate below> <todo|<menu|focus>工具栏\<ldots\>\<ldots\>>allow you to evaluate all field above or below the current field.

  <section|编辑会话>

  Inside input fields of sessions, the cursor keys have a special meaning: when moving upwards or downwards, you will move to previous or subsequent input fields. When moving to the left or to the right, you will never leave the input field; you should rather use the mouse for this.

  Some facilities for editing input, output and text fields are available in the <menu|Session|Field> menu. Keyboard shortcuts for inserting fields are <shortcut|(structured-insert-up)> (insert above) and <shortcut|(structured-insert-down)>. Keyboard shortcuts for removing matching text/input/output fields are <shortcut|(structured-remove-left)> (remove backwards) and <shortcut|(structured-remove-right)> (remove current fields).

  It is possible to create “subsessions” using <menu|Session|Session|Create subsession> <todo|菜单没找到；<menu|focus>工具栏：<menu|session commands|create subsession>>or <shortcut|(structured-insert-right)>. In that case, the current input-output field becomes the body of an unfolded subsession. Such a subsession consists of an explanatory text together with the subsession body. Subsessions can be folded and unfolded using <shortcut|(dynamic-previous)> <abbr|resp.> <shortcut|(dynamic-next)>. <todo|windows快捷键失效>Subsessions have a nice rendering on the screen when using the <tmpackage|framed-session> package in <menu|Document|Use package|Program>.<todo|菜单没找到>

  Notice that input/output fields and subsessions are foldable: when clicking on the prompt with the mouse, you may fold or unfold the entry to hide or show the output. For laptop presentations, this folding and unfolding process is done automatically when traversing your presentation. It is also possible to fold or unfold all fields in a session using <menu|Session|Session|Fold all fields> and <menu|Session|Session|Unfold all fields>.<todo|菜单没找到；<menu|focus>工具栏：<menu|session commands|fold all fields>>

  Other useful editing operations are <menu|Session|Session|Clear all fields>, which is useful for creating a demo session which will be executed later on, and <menu|Session|Split session>, which can be used for splitting a session into parts for inclusion into a paper.<todo|菜单位置同前情况>

  <\example>
    <label|session-example>A typical <name|Maxima> session is given below. If <name|Maxima> is present on your system, then you may put your cursor in one of the inputs, perform some edits, and try to reexecute it.

    <\session|maxima|default>
      <\output>
        Maxima 5.25.1 http://maxima.sourceforge.net

        using Lisp SBCL 1.0.51

        Distributed under the GNU Public License. See the file COPYING.

        Dedicated to the memory of William Schelter.

        The function bug_report() provides bug reporting information.
      </output>

      <\unfolded-io>
        <with|color|red|(<with|math-font-family|rm|%i>1) >
      <|unfolded-io>
        diff (x^x^x, x)
      <|unfolded-io>
        <math|<with|math-display|true|<text|<with|font-family|tt|color|red|(<with|math-font-family|rm|%o1>) >>x<rsup|x<rsup|x>>*<around*|(|x<rsup|x>*log <around*|(|x|)>*<around*|(|log <around*|(|x|)>+1|)>+x<rsup|x-1>|)>>>
      </unfolded-io>

      <\unfolded-io>
        <with|color|red|(<with|math-font-family|rm|%i>2) >
      <|unfolded-io>
        integrate (%o1, x)
      <|unfolded-io>
        <math|<with|math-display|true|<text|<with|font-family|tt|color|red|(<with|math-font-family|rm|%o2>) >>\<mathe\><rsup|\<mathe\><rsup|x*log <around*|(|x|)>>*log <around*|(|x|)>>>>
      </unfolded-io>

      <\unfolded-io>
        <with|color|red|(<with|math-font-family|rm|%i>3) >
      <|unfolded-io>
        integrate (x^5 / (x^2 - x + 17), x)
      <|unfolded-io>
        <math|<with|math-display|true|<text|<with|font-family|tt|color|red|(<with|math-font-family|rm|%o3>) >><frac|239*log <around*|(|x<rsup|2>-x+17|)>|2>+<frac|1361*arctan <around*|(|<frac|2*x-1|<sqrt|67>>|)>|<sqrt|67>>+<frac|3*x<rsup|4>+4*x<rsup|3>-96*x<rsup|2>-396*x|12>>>
      </unfolded-io>
    </session>
  </example>

  <section|选择输入模式>

  By default, <TeXmacs> will attempt to evaluate the input field when pressing <key|return>. Multiline input can be created using <key|S-return>. Alternatively, when selecting the multiline input mode using <menu|Session|Input mode|Multiline input>, the <key|return> key will behave as usual and <key|S-return> may be used in order to evaluate the input field. Notice finally that certain systems admit built-in heuristics <todo|没看懂>for testing whether the input has been completed; if not, then the <key|return> may behave as usual.

  Certain applications allow you to type the mathematical input in a graphical, two dimensional form. This feature can be used by selecting <menu|Session|Input mode|Mathematical input>. If this feature is available, then it is usually also possible to copy and paste output back into the input. However, it depends on the particular application how well this works. Keep in mind that some key combinations may be used by the <subsubmenu|Session|Input|Mathematical input> mode: for instance the key <key|$> is usually redefined inside math mode, so if you want to input it you'll have to type <key|S-F5><key|$>. <todo|Shift+F5 快捷键失效>You can read more about the prefix key <key|S-F5> in “<hlink|Keyboard shortcuts for text mode|../text/keyboard/man-text-kbd.en.tm>”.

  <\example>
    Below, you will find the <hlink|previous example session|man-session-edit.en.tm#session-example>, but now using mathematical input:

    <\session|maxima|default>
      <\output>
        Maxima 5.25.1 http://maxima.sourceforge.net

        using Lisp SBCL 1.0.51

        Distributed under the GNU Public License. See the file COPYING.

        Dedicated to the memory of William Schelter.

        The function bug_report() provides bug reporting information.
      </output>

      <\unfolded-io-math>
        <with|color|red|(<with|math-font-family|rm|%i>1) >
      <|unfolded-io-math>
        diff<around*|(|x<rsup|x<rsup|x>>,x|\<nobracket\>>
      <|unfolded-io-math>
        <math|<with|math-display|true|<text|<with|font-family|tt|color|red|(<with|math-font-family|rm|%o1>) >>x<rsup|x<rsup|x>>*<around*|(|x<rsup|x>*log <around*|(|x|)>*<around*|(|log <around*|(|x|)>+1|)>+x<rsup|x-1>|)>>>
      </unfolded-io-math>

      <\unfolded-io-math>
        <with|color|red|(<with|math-font-family|rm|%i>2) >
      <|unfolded-io-math>
        <big|int>%o1*\<mathd\> x
      <|unfolded-io-math>
        <math|<with|math-display|true|<text|<with|font-family|tt|color|red|(<with|math-font-family|rm|%o2>) >>\<mathe\><rsup|\<mathe\><rsup|x*log <around*|(|x|)>>*log <around*|(|x|)>>>>
      </unfolded-io-math>

      <\unfolded-io-math>
        <with|color|red|(<with|math-font-family|rm|%i>3) >
      <|unfolded-io-math>
        <big|int><frac|x<rsup|5>|x<rsup|2>-x+17>*\<mathd\> x
      <|unfolded-io-math>
        <math|<with|math-display|true|<text|<with|font-family|tt|color|red|(<with|math-font-family|rm|%o3>) >><frac|239*log <around*|(|x<rsup|2>-x+17|)>|2>+<frac|1361*arctan <around*|(|<frac|2*x-1|<sqrt|67>>|)>|<sqrt|67>>+<frac|3*x<rsup|4>+4*x<rsup|3>-96*x<rsup|2>-396*x|12>>>
      </unfolded-io-math>
    </session>
  </example>

  <section|脚本语言>

  <TeXmacs> provides a few other kinds of additional interfaces to external systems in addition to shell-like interfaces. First of all, it is possible to insert a so called “executable switch” anywhere in the document using <menu|Insert|Fold|Executable>.

  For instance, if <name|Maxima> is installed on your system, then <menu|Insert|Fold|Executable|Maxima> should yield something like <script-output|maxima|default||>. You may enter a<nbsp><name|Maxima> expression in the yellow part of this markup, say <script-output|maxima|default|diff(x^x,x)|<math|x<rsup|x>*<around*|(|log <around*|(|x|)>+1|)>>>. Using <shortcut|(kbd-return)>, you may now switch back and forth between the unevaluated input and the evaluated output <script-output|maxima|default|diff(x^x,x)|<math|x<rsup|x>*<around*|(|log <around*|(|x|)>+1|)>>>. Using <shortcut|(kbd-shift-return)>, you enable multi-line input. This kind of executable switches are very useful for plug-ins such as <name|Dra<TeX>>, <name|Eukleides>, <name|Feynmf>, <abbr|etc.>, which are mainly used for the efficient computation and insertion of special graphics inside <TeXmacs> documents.

  Some plug-ins such as <name|Maxima> can even be selected as a <em|scripting language> using <menu|Document|Scripts|Maxima>. When doing so, a special <menu|Maxima> menu will appear, which allows for many useful operations directly on formulas. For instance, when putting the cursor inside the formula <math|1+1> and pressing <shortcut|(script-eval)> <todo|什么快捷键？>or <menu|Evaluate>, the formula gets evaluated automatically to yield <math|2>.<todo|具体使用方法：对于数学模式的式子，只需把光标放在数学模式box内，<menu|maxima|evaluate>；对于非数学模式的式子，选择这个式子，<menu|maxima|evaluate>>

  If a plug-in can be used as a scripting language, then it is possible to create executable switches with links between them. More precisely, assuming that you selected a scripting language from <menu|Document|Scripts>, you may insert a new <em|executable input field> using <shortcut|(make-calc-input)> or <menu|Insert|Link|Executable input field>. As before, when pressing <key|return>, the current input is evaluated and you will see the corresponding output; you may switch back to the input by pressing <key|return> once more.

  Contrary to executable switches, you may attach an identifier to the executable input field by deactivating the field or by editing the <samp|Ref> field in the focus bar. Inside other executable input fields, you may then refer to the value of the field by inserting a <em|field reference> using <shortcut|(make 'calc-ref)> or <menu|Insert|Link|Field reference>. As a variant to executable input fields, you may sometimes prefer to insert plain <em|input fields> using <shortcut|(make-calc-inert)> or <menu|Insert|Link|Input field>. These fields can only be used as inputs and pressing <key|return> inside such a field will only recompute those other fields which depend on it.<todo|没看懂，不会操作>

  <\example>
    The executable input fields may for instance be nice in pedagogic documents in which parts of the document may be modified and recomputed by the reader. For instance, evaluation of the input fragment

    <\quote-env>
      The derivative of <with|prog-scripts|maxima|<calc-inert|function|<math|x<rsup|x>>>> equals <with|prog-scripts|maxima|<calc-output|derivative|diff(<calc-ref|function>,x)|<math|x<rsup|x>*<around*|(|log <around*|(|x|)>+1|)>>>>.

      The second derivative is given by <with|prog-scripts|maxima|<calc-output|second|diff(<calc-ref|derivative>,x)|<math|x<rsup|x>*<around*|(|log <around*|(|x|)>+1|)><rsup|2>+x<rsup|x-1>>>>.
    </quote-env>

    yields

    <\quote-env>
      The derivative of <with|prog-scripts|maxima|<calc-inert|function2|<math|x<rsup|x>>>> equals <with|prog-scripts|maxima|<calc-output|derivative2|diff(<calc-ref|function2>,x)|<math|x<rsup|x>*<around*|(|log <around*|(|x|)>+1|)>>>>.

      The second derivative is given by <with|prog-scripts|maxima|<calc-output|second2|diff(<calc-ref|derivative2>,x)|<math|x<rsup|x>*<around*|(|log <around*|(|x|)>+1|)><rsup|2>+x<rsup|x-1>>>>.
    </quote-env>

    Of course, if the reader changes the input function <math|x<rsup|x>> into something else and presses <key|return>, then the first and second derivatives will be updated automatically.
  </example>

  <section|电子表格>

  <TeXmacs> provides rudimentary spreadsheet-like facilities with the advantage that the computations can be carried out using any of the plug-ins that can be used as a scripting language. In order to use the spreadsheet facilities, you should therefore start with the selection of a scripting language in the menu <menu|Document|Scripts>.

  As soon as you have selecting a scripting language, such as <name|Maxima>, then you may enter a new spreadsheet using <menu|Insert|Table|Textual spreadsheet> or <menu|Insert|Table|Numeric spreadsheet>. You may edit the spreadsheet as an ordinary table, except that the <key|return> key will attempt to reevaluate the cells of the table.

  In addition, when preceding the contents of a cell by =, then cell will be considered as an input-output switch. More precisely, the input is a formula which will be evaluated using the current scripting language. After the evaluation, only the result of the evaluation is shown in the cell. After pressing <key|return> a second time in the cell, it will be possible switch back and edit the input. In the formulas, one may refer to the others using names such as <samp|c5> for the third row and the fifth column.

  <\example>
    On the left-hand side of the figure below, we have displayed a simple table with formulas for evaluating the sums of the first two items of each row. On the right-hand side, we have shown the result after evaluation.

    <\big-figure|<small|<with|prog-scripts|maxima|<calc-table|simple1|<numeric-dot-table|<tformat|<cwith|1|-1|1|-1|cell-width|5em>|<cwith|1|-1|1|-1|cell-hmode|max>|<table|<row|<cell|<cell-inert|a1|1>>|<cell|<cell-inert|b1|10>>|<cell|<cell-input|c1|=a1+b1|<math|11>>>>|<row|<cell|<cell-inert|a2|100>>|<cell|<cell-inert|b2|1000>>|<cell|<cell-input|c2|=a2+b2|<math|1100>>>>>>>><space|2em><calc-table|simple2|<numeric-dot-table|<tformat|<cwith|1|-1|1|-1|cell-width|5em>|<cwith|1|-1|1|-1|cell-hmode|max>|<table|<row|<cell|<cell-inert|a1|1>>|<cell|<cell-inert|b1|10>>|<cell|<cell-output|c1|=a1+b1|<math|11>>>>|<row|<cell|<cell-inert|a2|100>>|<cell|<cell-inert|b2|1000>>|<cell|<cell-output|c2|=a2+b2|<math|1100>>>>>>>>>>>
      Evaluation of a simple spreadsheet.
    </big-figure>
  </example>

  <\example>
    The cells may contain mathematical formulas and the spreadsheet may take advantage of any of the capacities of the scripting language. For instance, the figure below demonstrates another possible use of <name|Maxima>.

    <\big-figure|<small|<with|prog-scripts|maxima|<calc-table|derivatives1|<textual-table|<tformat|<cwith|1|-1|1|1|cell-width|15em>|<cwith|1|-1|1|1|cell-hmode|max>|<table|<row|<cell|<cell-inert|a1|<math|sin<around*|(|x<rsup|2>|)>>>>>|<row|<cell|<cell-input|a2|=diff(a1,x)|<math|2*x*cos <around*|(|x<rsup|2>|)>>>>>|<row|<cell|<cell-inert|a3|=diff(a2,x)>>>|<row|<cell|<cell-inert|a4|=diff(a3,x)>>>>>>><space|2em><calc-table|derivatives2|<textual-table|<tformat|<cwith|1|-1|1|1|cell-width|15em>|<cwith|1|-1|1|1|cell-hmode|max>|<table|<row|<cell|<cell-inert|a1|<math|sin<around*|(|x<rsup|2>|)>>>>>|<row|<cell|<cell-output|a2|=diff(a1,x)|<math|2*x*cos <around*|(|x<rsup|2>|)>>>>>|<row|<cell|<cell-output|a3|=diff(a2,x)|<math|2*cos <around*|(|x<rsup|2>|)>-4*x<rsup|2>*sin <around*|(|x<rsup|2>|)>>>>>|<row|<cell|<cell-output|a4|=diff(a3,x)|<math|-12*x*sin <around*|(|x<rsup|2>|)>-8*x<rsup|3>*cos <around*|(|x<rsup|2>|)>>>>>>>>>>>>
      Computation of successive derivatives using <name|Maxima>.
    </big-figure>
  </example>

  <TeXmacs> supports a few special notations for applying operations on all cells in a subtable. For instance, as in <name|Excel>, one may use the notation <samp|c3:d5> for indicating all cells <samp|c3>, <samp|c4>, <samp|c5>, <samp|d3>, <samp|d4>, <samp|d5> in the block from <samp|c3> to <samp|d5>. An alternative notation <cell-commas> for <samp|:> can be entered by typing <key|, ,>. In a similar way, one may enter the special notation <cell-plusses> by typing <key|+ +>. For instance, <samp|c3<cell-plusses>d5> stands for the sum of all cells between <samp|c3> and <samp|d5>.

  <\example>
    The figure below shows an example on how to use taking sums of cells. Notice that empty cells count for zero.

    <\big-figure|<small|<with|prog-scripts|maxima|<calc-table|sum1|<numeric-dot-table|<tformat|<cwith|1|-1|1|-1|cell-width|5em>|<cwith|1|-1|1|-1|cell-hmode|max>|<table|<row|<cell|<cell-inert|a1|15.10>>|<cell|<cell-inert|b1|15.10>>|<cell|<cell-inert|c1|30.20>>>|<row|<cell|<cell-inert|a2|100>>|<cell|<cell-inert|b2|125>>|<cell|<cell-inert|c2|75>>>|<row|<cell|<cell-inert|a3|28.50>>|<cell|<cell-inert|b3|>>|<cell|<cell-inert|c3|14.25>>>|<row|<cell|<cell-inert|a4|12>>|<cell|<cell-inert|b4|16>>|<cell|<cell-inert|c4|20>>>|<row|<cell|<cell-inert|a5|=a1<cell-plusses>a4>>|<cell|<cell-inert|b5|=b1<cell-plusses>b4>>|<cell|<cell-inert|c5|=c1<cell-plusses>c4>>>>>>><space|2em><calc-table|sum2|<numeric-dot-table|<tformat|<cwith|1|-1|1|-1|cell-width|5em>|<cwith|1|-1|1|-1|cell-hmode|max>|<cwith|5|5|1|3|cell-width|5em>|<cwith|5|5|1|3|cell-hmode|max>|<table|<row|<cell|<cell-inert|a1|15.10>>|<cell|<cell-inert|b1|15.10>>|<cell|<cell-inert|c1|30.20>>>|<row|<cell|<cell-inert|a2|100>>|<cell|<cell-inert|b2|125>>|<cell|<cell-inert|c2|75>>>|<row|<cell|<cell-inert|a3|28.50>>|<cell|<cell-inert|b3|>>|<cell|<cell-inert|c3|14.25>>>|<row|<cell|<cell-inert|a4|12>>|<cell|<cell-inert|b4|16>>|<cell|<cell-inert|c4|20>>>|<row|<cell|<cell-output|a5|=a1<cell-plusses>a4|<math|155.6>>>|<cell|<cell-output|b5|=b1<cell-plusses>b4|<math|156.1>>>|<cell|<cell-output|c5|=c1<cell-plusses>c4|<math|139.45>>>>>>>>>>>
      Evaluation of a simple spreadsheet.
    </big-figure>
  </example>

  Notice that copying and pasting of subtables works in the same way as for ordinary tables, with the additional features that the names of the cells and references to cells in the formulas are renumbered automatically. Similarly, automatic renumbering is used when inserting new columns or rows, or when removing existing columns or rows.

  We also notice that field references can be used inside spreadsheet cells in order to refer to some computational markup outside the table. Inversely, each spreadsheet also carries an invisible <samp|Ref> field which can be edited by deactivating the spreadsheet or from the focus bar (when selecting the entire spreadsheet). The <samp|Ref> field of the spreadsheet is used as a prefix for referring to the contents of cells outside the table or from within other spreadsheets. For instance, if <samp|Ref> equals <samp|sheet>, then <samp|sheet-c4> will refer to the field <samp|c4> inside the spreadsheet.

  <section|远程插件>

  It sometimes happens that certain plug-ins are only installed on a remote computer. In many cases, it will still be possible to use such a plug-in inside <TeXmacs> over an <hlink|SSH|http://www.openssh.com/> connection.

  In order to make this work, you first have to make sure that SSH is installed on both computers and that connecting by SSH to the remote machine can be done automatically, without having to type a password. This can be done by copying your public identity on the local server to the remote server into the file <verbatim|~/.ssh/authorized_keys>; see the documentation on SSH for more information.

  As the next step, you have to make sure that <TeXmacs> has been installed on both computers. The remote <TeXmacs> installation will mainly be used in order to detect which plug-ins can be used on the remote computer.

  When everything has been set up correctly in this way, select <menu|Insert|Session|Remote> in order to open the remote plug-in selector. Add the name of the remote server by typing its name or IP address and clicking on <menu|Add>. After a small pause, the remote server should appear in the list together with the remote plug-ins which are supported. You may now simply select the plug-in you want to use from the list. Notice that remote plug-ins may take a few seconds in order to boot. Please be patient while booting is in progress.

  Servers which have been added to the list of remote plug-in servers will be remembered at the next time when you start <TeXmacs>. You may use the buttons <menu|Remove> and <menu|Update> in order to remove a server from the list and to redetermine the list of supported remote plug-ins.

  <chapter|撰写样式><label|chapter:style>

  One of the fundamental strengths of <TeXmacs> is the possibility to write your own style files and packages. The purpose of style files is multiple:

  <\itemize>
    <item>They allow the abstraction of repetitive elements in texts, like sections, theorems, enumerations, etc.

    <item>They form a mechanism which allow you to structure your text. For instance, you may indicate that a given portion of your text is an abbreviation, a quotation or “important”.

    <item>Standard document styles enable you to write professionally looking documents, because the corresponding style files have been written with a lot of care by people who know a lot about typography and aesthetics.
  </itemize>

  The user may select a major style from the <menu|Document|Style> menu. The major style usually reflects the kind of document you want to produce (like a letter, an article or a book) or a particular layout policy (like publishing an article in a given journal).

  Style packages, which are selected from the <menu|Document|Style> menu, are used for further customization of the major style. For instance, the <tmpackage|number-europe> package enables European-style theorem numbering and the <tmpackage|maxima> package contains macros for customizing the layout of sessions of the <name|Maxima> computer algebra system. Several packages may be used together.

  When you want to add your own markup to <TeXmacs> or personalize the layout, then you have to choose between writing a principal style file or a style package. In most cases, you will probably prefer to write a style package, since this will allow you to combine it arbitrary other styles. However, in some cases you may prefer to create a new principal style, usually by personalizing an existing style. This is usually the case if you want to mimic the layout policy of some journal. In this chapter, we will both explain how to write your own style packages and how to customize the standard styles.

  <section|Writing a simple style package>

  Let us explain on an example how to write a simple style package. First of all, you have to create a new buffer using <menu|File|New> and select the <tmstyle|source> document style using <menu|Document|Style|source>. Now save your empty style package in your personal style package directory

  <verbatim| \ \ \ $HOME/.TeXmacs/packages>

  Notice that the button <menu|Texts> in the file browser corresponds to the directory

  <verbatim| \ \ \ $HOME/.TeXmacs/texts>

  Consequently, you can go to the style package directory from there, by double clicking on <verbatim|..> and next on <verbatim|packages>. Similarly, the directory

  <verbatim| \ \ \ $HOME/.TeXmacs/styles>

  contains your personal style files. After saving your empty style package, it should automatically appear in the <menu|Document|Package> menu. Notice that style files must be saved using the <verbatim|.ts> file extension. If you save the style file in a subdirectory of <verbatim|$HOME/.TeXmacs/packages>, then it will automatically appear in the corresponding submenu of <menu|Document|Package>.

  Let us now create a simple macro <markup|hi> which displays “Hello world”. First type <shortcut|(make 'assign)>, so as to create an assignment. You should see something like

  <\tm-fragment>
    <inactive*|<assign||>>
  </tm-fragment>

  Now enter “hi” as the first argument and type <shortcut|(make 'macro)> inside the second argument in order to create a macro. You should now see something like

  <\tm-fragment>
    <inactive*|<assign|hi|<macro|>>>
  </tm-fragment>

  Finally, type the text “Hello world” in the body of the macro. Your document should now consist of the following line:

  <\tm-fragment>
    <inactive*|<assign|hi|<macro|Hello world>>>
  </tm-fragment>

  After saving your style package, opening a new document and selecting your package in the <menu|Document|Use package> menu, you may now use the macro <markup|hi> in your document by typing <key|\\ h i> and hitting <shortcut|(kbd-return)>.

  In a similar way, you may create macros with arguments. For instance, assume that we started entering a macro <markup|hello> in a similar way as above. Instead of typing “Hello world”, we first type <shortcut|(structured-insert-left)> inside the macro body so as to create an additional argument on the left hand side of the cursor. We next enter the name of the argument, say “name”. You should now see something like below:

  <\tm-fragment>
    <inactive*|<assign|hello|<macro|name|>>>
  </tm-fragment>

  In the second argument of the body, we now type “Hello ”, <shortcut|(make 'arg)>, “name”, <key|right> and “, how are you today?”. After this you should see

  <\tm-fragment>
    <inactive*|<assign|hello|<macro|name|Hello <arg|name>, how are you today?>>>
  </tm-fragment>

  The <shortcut|(make 'arg)> shortcut is used to retrieve the macro argument <src-arg|name>. Instead of typing <shortcut|(make 'arg)>, “name” and <key|right>, you may also use the hybrid <key|\\>-key and type <key|\\ n a m e> followed by <shortcut|(kbd-return)>. After saving your style package, you may again use the macro in any document which uses your package by typing <key|\\ h e l l o> and hitting <key|return>.

  From the internal point of view, all macro definitions are stored in the environment of the <TeXmacs> typesetter. Besides macros, the environment also contains normal environment variables, such as section counters or the font size. The environment variables can either be globally changed using the <markup|assign> primitive, or locally, using the <markup|with> primitive. For instance, when including the line

  <\tm-fragment>
    <inactive*|<assign|section-nr|-1>>
  </tm-fragment>

  in your package, and using <tmstyle|article> as your major style, then the first section will be numbered <no-break><math|0>. Similarly, the variant

  <\tm-fragment>
    <inactive*|<assign|hello|<macro|name|Hello <with|font-shape|small-caps|<arg|name>>!>>>
  </tm-fragment>

  of the <markup|hello> macro displays the name of the person in <with|font-shape|small-caps|Small Capitals>. Notice that the <markup|with> primitive can also be used to locally redefine a macro. This is for instance used in the definitions of the standard list environments, where the macro which renders list icons is changed inside the body of the list. Yet another variant of the <markup|hello> macro relies on the standard <markup|person> macro:

  <\tm-fragment>
    <inactive*|<assign|hello|<macro|name|Hello <person|<arg|name>>!>>>
  </tm-fragment>

  In order to produce the macro application <inactive*|<person|<arg|name>>>, you first have to start a compound tag using <shortcut|(make 'compound)>, type the name “person”, insert an argument <shortcut|(structured-insert-right)>, and enter the argument <src-arg|name> as before. When you are done, you may press <shortcut|(kbd-return)> in order to change the <markup|compound> tag into a <markup|person> tag. Alternatively, you may type <key|\\>, “person”, <shortcut|(structured-insert-right)> and “name”.

  By combining the above constructs, an ordinary user should already be able to produce style packages for all frequently used notations. An interesting technique for writing macros which involve complex formulas with some subformulas which may change goes as follows:

  <\enumerate>
    <item>Type the formula, say <math|<around|(|a<rsub|1>,\<ldots\>,a<rsub|n>|)>>, in an ordinary document.

    <item>Create the skeleton of your macro in your style package:

    <\tm-fragment>
      <inactive*|<assign|n-tuple|<macro|a|>>>
    </tm-fragment>

    <item>Copy the formula and paste it into the body of your macro:

    <\tm-fragment>
      <inactive*|<assign|n-tuple|<macro|a|(a<rsub|1>,\<ldots\>,a<rsub|n>)>>>
    </tm-fragment>

    <item>Replace the subformulas you want to parameterize by macro arguments:

    <\tm-fragment>
      <inactive*|<assign|n-tuple|<macro|a|(<arg|a><rsub|1>,\<ldots\>,<arg|a><rsub|n>)>>>
    </tm-fragment>

    <item>You may now use the macro in documents which use your package:

    <\equation*>
      <with|n-tuple|<macro|a|<around|(|<arg|a><rsub|1>,\<ldots\>,<arg|a><rsub|n>|)>>|<n-tuple|a>=<n-tuple|b>.>
    </equation*>
  </enumerate>

  <section|Rendering of style files and packages>

  <subsection|ASCII-based or tree-based editing: an intricate choice>

  Most users are used to edit source code using a conventional editor like <name|Emacs>, while presenting the source code in ASCII format. Since all <TeXmacs> documents are stored as <hlink|trees|../../../devel/format/basics/basics.en.tm>, an interesting but complicated question is which format is most suitable for editing such documents. One option is to represent the tree using an ASCII-based format, such as XML, Scheme, or the native format for storing files on a disk. The other option is to edit the trees as such, making no fundamental distinction between source code and normal documents.

  In <TeXmacs> we have chosen to implement the second option. More precisely, any document can be edited in “source mode”, which is merely a mode for rendering the document in a way which makes its tree structure particularly apparent. It may be instructive to take an arbitrary document of yours and to take a look at it in “source mode” by enabling <menu|Document|Source|Edit source tree>.

  The choice between ASCII-based editing and tree-based editing is non-trivial, because <TeXmacs> style files and packages have a double nature: they may be seen as programs which specify how to render macros, but these programs naturally contain ordinary content. There are several reasons why users often prefer to edit source code in an ASCII-based format:

  <\enumerate>
    <item>It is easy to manually format the code so as to make it more readable.

    <item>In particular, it is easy to add comments.

    <item>Standard editors like <name|Emacs> provide tools for automatic highlighting, indentation, <abbr|etc.>

    <item><label|structure-constraints>One is not constraint by any “structure” during the editing phase.
  </enumerate>

  Our approach is to reproduce as much of the above advantages in a structured document environment. Although point <reference|structure-constraints> will obviously be hard to meet when following this approach, we believe that the first three advantages might actually become greater in a structured environment. However, this requires a more profound understanding of how users format and edit source code.

  For instance, consider a piece of manually formatted code like

  <\cpp-code>
    if (cond) hop \ \ = 2;

    else \ \ \ \ \ holala= 3;
  </cpp-code>

  Clearly, the user had a particular formatting policy when writing this code. However, this policy does not appear in the document: manual intervention will be necessary if the variable <verbatim|cond> is renamed <verbatim|c>, or if the variable <verbatim|holala> is renamed <verbatim|hola>.

  At the moment, <TeXmacs> provides no tools for dealing with the above example in an automatic way, but a few tools are already provided. For instance, the user is given a great amount of control on how to indent source code and reasonable defaults are provided as a function of the structure. We also provide high level environments for comments and structured highlighting. Further tools will be developed later and we are open for any suggestions from our users.

  <subsection|Global presentation>

  In the <menu|Source tags> group of the <menu|Document|Source> menu, you find several ways to customize the rendering of source trees in your document. We recommend you to play around with the different possibilities in a document of your own (after enabling <menu|Document|Source|Source tree>) or a standard style package in <verbatim|$TEXMACS_PATH/packages>.

  First of all, you may choose between the different major styles “angular”, “scheme”, “functional” and “<LaTeX>” \ for rendering source trees, as illustrated in the figure below:

  <\big-figure>
    <\quote-env>
      <small|<tabular*|<tformat|<twith|table-width|1par>|<twith|table-hmode|exact>|<cwith|2|2|1|1|cell-hyphen|t>|<cwith|2|2|3|3|cell-hyphen|t>|<cwith|5|5|1|1|cell-hyphen|t>|<cwith|5|5|3|3|cell-hyphen|t>|<table|<row|<cell|<with|font-size|0.71|Angular>>|<cell|>|<cell|<with|font-size|0.71|Scheme>>>|<row|<\cell>
        <\with|src-style|angular>
          <\framed-fragment>
            <inactive*|<assign|quick-theorem|<\macro|body>
              <surround|<no-indent>Theorem. ||<arg|body>>
            </macro>>>
          </framed-fragment>
        </with>
      </cell>|<cell|>|<\cell>
        <\with|src-style|scheme>
          <\framed-fragment>
            <inactive*|<assign|quick-theorem|<\macro|body>
              <surround|<no-indent>Theorem. ||<arg|body>>
            </macro>>>
          </framed-fragment>
        </with>
      </cell>>|<row|<cell|>|<cell|>|<cell|>>|<row|<cell|<with|font-size|0.71|Functional>>|<cell|>|<cell|<with|font-size|0.71|<LaTeX>>>>|<row|<\cell>
        <\with|src-style|functional>
          <\framed-fragment>
            <inactive*|<assign|quick-theorem|<\macro|body>
              <surround|<no-indent>Theorem. ||<arg|body>>
            </macro>>>
          </framed-fragment>
        </with>
      </cell>|<cell|>|<\cell>
        <\with|src-style|latex>
          <\framed-fragment>
            <inactive*|<assign|quick-theorem|<\macro|body>
              <surround|<no-indent>Theorem. ||<arg|body>>
            </macro>>>
          </framed-fragment>
        </with>
      </cell>>>>>>
    </quote-env>
  <|big-figure>
    Different styles for rendering the same source tree.
  </big-figure>

  Secondly, you may wish to reserve a special treatment to certain tags like <markup|concat> and <markup|document>. In the menu <menu|Document|Source|Special> you may specify to which extent you want to treat such tags in a special way:

  <\description>
    <item*|None>No tags receive a special treatment.

    <item*|Formatting>Only the formatting tags <markup|concat> and <markup|document> are represented as usual.

    <item*|Normal>In addition to the formatting tags, a few other tags like <markup|compound>, <markup|value> and <markup|arg> are represented in a special way.

    <item*|Maximal>At the moment, this option is not yet implemented. The intention is to allow the user to write his own customizations and to allow for special rendering of basic operations like <markup|plus>.
  </description>

  These different options are illustrated below:

  <\big-figure>
    <\quote-env>
      <small|<tabular*|<tformat|<twith|table-width|1par>|<twith|table-hmode|exact>|<cwith|2|2|1|1|cell-hyphen|t>|<cwith|2|2|3|3|cell-hyphen|t>|<cwith|5|5|1|1|cell-hyphen|t>|<cwith|5|5|3|3|cell-hyphen|t>|<table|<row|<cell|<with|font-size|0.71|None>>|<cell|>|<cell|<with|font-size|0.71|Formatting>>>|<row|<\cell>
        <\framed-fragment>
          <\with|src-special|raw>
            <inactive*|<assign|quick-theorem|<\macro|body>
              <surround|<no-indent>Theorem. ||<arg|body>>
            </macro>>>
          </with>
        </framed-fragment>
      </cell>|<cell|>|<\cell>
        <\framed-fragment>
          <\with|src-special|format>
            <inactive*|<assign|quick-theorem|<\macro|body>
              <surround|<no-indent>Theorem. ||<arg|body>>
            </macro>>>
          </with>
        </framed-fragment>
      </cell>>|<row|<cell|>|<cell|>|<cell|>>|<row|<cell|<with|font-size|0.71|Normal>>|<cell|>|<cell|<with|font-size|0.71|Maximal>>>|<row|<\cell>
        <\framed-fragment>
          <\with|src-special|normal>
            <inactive*|<assign|quick-theorem|<\macro|body>
              <surround|<no-indent>Theorem. ||<arg|body>>
            </macro>>>
          </with>
        </framed-fragment>
      </cell>|<cell|>|<\cell>
        <\framed-fragment>
          <\with|src-special|maximal>
            <inactive*|<assign|quick-theorem|<\macro|body>
              <surround|<no-indent>Theorem. ||<arg|body>>
            </macro>>>
          </with>
        </framed-fragment>
      </cell>>>>>>
    </quote-env>

    \;
  <|big-figure>
    Different ways to render special tags.
  </big-figure>

  Another thing which may be controlled by the user is whether the presentation of tags should be compact or stretched out across several lines. Several levels of compactification may be specified in the <menu|Document|Source|Compactification> menu:

  <\description>
    <item*|Minimal>The tags are all stretched out across several lines.

    <item*|Only inline tags>All non-inline tags are stretched out across several lines.

    <item*|Normal>All inline arguments at the start of the tag are represented in a compact way. As soon as we encounter a block argument, the remainder of the arguments are stretched out across several lines.

    <item*|Inline arguments>All inline arguments are represented in a compact way and only block tags are stretched out across several lines.

    <item*|Maximal>All source code is represented in a compact way.
  </description>

  The “normal” and “inline arguments” options rarely differ. The visual effect of the different options is illustrated below:

  <\big-figure>
    <\quote-env>
      <small|<tabular*|<tformat|<twith|table-width|1par>|<twith|table-hmode|exact>|<cwith|2|2|1|1|cell-hyphen|t>|<cwith|2|2|3|3|cell-hyphen|t>|<cwith|5|5|1|1|cell-hyphen|t>|<cwith|5|5|3|3|cell-hyphen|t>|<table|<row|<cell|<with|font-size|0.71|Minimal>>|<cell|>|<cell|<with|font-size|0.71|Only inline tags>>>|<row|<\cell>
        <\framed-fragment>
          <\with|src-compact|none>
            <inactive*|<assign|quick-theorem|<\macro|body>
              <surround|<no-indent>Theorem. ||<arg|body>>
            </macro>>>
          </with>
        </framed-fragment>
      </cell>|<cell|>|<\cell>
        <\framed-fragment>
          <\with|src-compact|inline>
            <inactive*|<assign|quick-theorem|<\macro|body>
              <surround|<no-indent>Theorem. ||<arg|body>>
            </macro>>>
          </with>
        </framed-fragment>
      </cell>>|<row|<cell|>|<cell|>|<cell|>>|<row|<cell|<with|font-size|0.71|Normal>>|<cell|>|<cell|<with|font-size|0.71|Maximal>>>|<row|<\cell>
        <\framed-fragment>
          <\with|src-compact|normal>
            <inactive*|<assign|quick-theorem|<\macro|body>
              <surround|<no-indent>Theorem. ||<arg|body>>
            </macro>>>
          </with>
        </framed-fragment>
      </cell>|<cell|>|<\cell>
        <\framed-fragment>
          <\with|src-compact|all>
            <inactive*|<assign|quick-theorem|<\macro|body>
              <surround|<no-indent>Theorem. ||<arg|body>>
            </macro>>>
          </with>
        </framed-fragment>
      </cell>>>>>>
    </quote-env>
  <|big-figure>
    Different levels of compactification.
  </big-figure>

  Finally, the user may specify the way closing tags should be rendered when the tag is stretched out across several lines. The rendering may either be minimalistic, compact, long, or recall the matching opening tag. The different options are illustrated below:

  <\big-figure>
    <\quote-env>
      <small|<tabular*|<tformat|<twith|table-width|1par>|<twith|table-hmode|exact>|<cwith|2|2|1|1|cell-hyphen|t>|<cwith|2|2|3|3|cell-hyphen|t>|<cwith|5|5|1|1|cell-hyphen|t>|<cwith|5|5|3|3|cell-hyphen|t>|<table|<row|<cell|<with|font-size|0.71|Minimal>>|<cell|>|<cell|<with|font-size|0.71|Compact>>>|<row|<\cell>
        <\framed-fragment>
          <\with|src-close|minimal>
            <inactive*|<assign|quick-theorem|<\macro|body>
              <surround|<no-indent>Theorem. ||<arg|body>>
            </macro>>>
          </with>
        </framed-fragment>
      </cell>|<cell|>|<\cell>
        <\framed-fragment>
          <\with|src-close|compact>
            <inactive*|<assign|quick-theorem|<\macro|body>
              <surround|<no-indent>Theorem. ||<arg|body>>
            </macro>>>
          </with>
        </framed-fragment>
      </cell>>|<row|<cell|>|<cell|>|<cell|>>|<row|<cell|<with|font-size|0.71|Stretched>>|<cell|>|<cell|<with|font-size|0.71|Repeat>>>|<row|<\cell>
        <\framed-fragment>
          <\with|src-close|long>
            <inactive*|<assign|quick-theorem|<\macro|body>
              <surround|<no-indent>Theorem. ||<arg|body>>
            </macro>>>
          </with>
        </framed-fragment>
      </cell>|<cell|>|<\cell>
        <\framed-fragment>
          <\with|src-close|repeat>
            <inactive*|<assign|quick-theorem|<\macro|body>
              <surround|<no-indent>Theorem. ||<arg|body>>
            </macro>>>
          </with>
        </framed-fragment>
      </cell>>>>>>
    </quote-env>
  <|big-figure>
    Different ways to render closing tags.
  </big-figure>

  <subsection|Local customization>

  Even though <TeXmacs> tries hard to render source code in a nice way following the global rendering options that you specified, the readability of the source code often needs to be further enhanced locally. In source mode, this can be done using the menus <menu|Source|Activation> and <menu|Source|Presentation>. Any local hints on how to render source code are automatically removed from the document when it is being used as a style file or package.

  First of all, for certain pieces of content the user may prefer to see them in their “activated” form instead as dead source code. This may for instance be the case for embedded images, or for mathematical symbols, like in

  <\tm-fragment>
    <math|<inactive*|<assign|R|<macro|<active*|\<bbb-R\>>>>>>
  </tm-fragment>

  Such an active presentation may also be preferred for certain more complex macros:

  <\tm-fragment>
    <math|<inactive*|<assign|diag|<macro|var|dim|<active*|<matrix|<tformat|<table|<row|<cell|<inactive*|<arg|var>><rsub|1>>|<cell|>|<cell|\<b-0\>>>|<row|<cell|>|<cell|\<ddots\>>|<cell|>>|<row|<cell|\<b-0\>>|<cell|>|<cell|<inactive*|<arg|var>><rsub|<inactive*|<arg|dim>>>>>>>>>>>>>
  </tm-fragment>

  A piece of code can be activated by selecting it and using <menu|Source|Activation|Activate> or <shortcut|(make-mod-active 'active*)>. Similarly, a piece of content may be deactivated using <key|<rigid|M->-> (we used this in the second example above for the rendering of the arguments <src-arg|var> and <src-arg|dim>). Activation and deactivation either apply to the whole tree, or to the root only (<abbr|e.g.> <menu|Source|Activation|Activate once>).

  Another way to customize the rendering is to override some of the global rendering options. This is mainly interesting for controlling more precisely which tags have to be stretched across several lines and which tags have to be represented in a compact fashion. For instance, the <markup|concat> tag can be used in order to concatenate content, as well as for specifying a block of sequential statements, or a combination of both. For instance, in the piece of code

  <\tm-fragment>
    <inactive*|<assign|my-section|<macro|title|<style-with|src-compact|none|<header-hook|<arg|title>><toc-hook|<arg|title>><my-section-title|<arg|title>>>>>>
  </tm-fragment>

  we have stretched the <markup|concat> tag along several lines using <menu|Source|Presentation|Stretched> (notice that this implies the <markup|concat> tag to appear explicitly, so as to avoid confusion with the <markup|document> tag). Similarly, if a part of the concatenation were to be displayed as usual, then one may use <menu|Source|Presentation|Compact>:

  <\tm-fragment>
    <inactive*|<assign|my-section|<macro|title|<style-with|src-compact|none|<header-hook|<arg|title>><toc-hook|<arg|title>><style-with|src-compact|all|<with|font-series|bold|Section:> <arg|title>>>>>>
  </tm-fragment>

  At present, we did not implement a way to mark arguments as inline or block, but we might do this later.

  A final way to customize the rendering of source code is to apply an arbitrary macro using <menu|Source|Presentation|Apply macro> or <menu|Source|Presentation|Apply macro once>. This macro will be automatically removed when you use your document as a style file or package.

  <section|The style-sheet language>

  In the section about <hlink|writing a simple style package|style-example.en.tm> we already gave you a first impression about the style-sheet language of <TeXmacs>. In this section, we will give a more complete survey of the available features. For more detailed descriptions, we refer to the chapter about the <hlink|<TeXmacs> primitives|../../format/stylesheet/stylesheet.en.tm>.

  The style-sheet primitives can be obtained from the <menu|Source> menu when you are in source mode. In all other modes, the <menu|Source> menu becomes visible after enabling the <menu|Source macros tool> in the <menu|Tools> menu. Alternatively, you may use the <prefix|A-> and <prefix|executable> keyboard prefixes in source mode and the<nbsp><prefix|inactive> and<nbsp><prefix|executable> prefixes otherwise. Furthermore, we recall that the hybrid <key|\\>-key may be used for creating macro-applications or arguments, depending on the context. Finally, the <shortcut|(structured-insert-right)> and <shortcut|(structured-insert-left)> keys are used for inserting arguments.

  <subsection|Assignments>

  All user defined <TeXmacs> macros and style variables are stored in the “current typesetting environment”. This environment associates a tree value to each string variable. Variables whose values are macros correspond to new primitives. The others are ordinary environment variables. The primitives for operating on the environment are available from <menu|Source|Define>.

  You may permanently change the value of an environment variable using the <markup|assign> primitive, as in the example

  <\tm-fragment>
    <inactive*|<assign|hi|<macro|Hi there!>>>
  </tm-fragment>

  You may also locally change the values of one or several environment variables using the <markup|with> primitive:

  <\tm-fragment>
    <inactive*|<with|font-series|bold|color|red|Bold red text>>
  </tm-fragment>

  The value of an environment variable may be retrieved using the <markup|value> primitive. This may for instance be used in order to increase a counter:

  <\tm-fragment>
    <inactive*|<assign|my-counter|<plus|<value|my-counter>|1>>>
  </tm-fragment>

  Finally, you may associate logical properties to environment variables using the <markup|drd-props> primitive. This is explained in more detail in the section about <hlink|macro primitives|../../format/stylesheet/prim-macro.en.tm>.

  <subsection|Macro expansion>

  The main interest of the <TeXmacs>' style-sheet language is the possibility to define macros. These come in three flavours: ordinary macros, macros which take an arbitrary number of arguments and external macros, whose expansion is computed by <name|Scheme> or a plug-in. The macro-related primitives are available from the <menu|Source|Macro> menu. Below, we will only describe the ordinary macros. For more details, we refer to the section about <hlink|macro primitives|../../format/stylesheet/prim-macro.en.tm>.

  Ordinary macros are usually defined using

  <\tm-fragment>
    <inactive*|<assign|my-macro|<macro|<active*|x<rsub|1>>|<active*|<math|\<cdots\>>>|<active*|x<rsub|n>>|body>>>
  </tm-fragment>

  After such an assignment, <markup|my-macro> becomes a new primitive with <math|n> arguments, which may be called using

  <\tm-fragment>
    <inactive|<my-macro|<active*|y<rsub|1>>|<active*|<math|\<cdots\>>>|<active*|y<rsub|n>>>>
  </tm-fragment>

  Inside the body of the macro, the <markup|arg> primitive may be used to retrieve the values of the arguments to the macro.

  <\tm-fragment>
    <inactive*|<assign|hello|<macro|name|Hello <arg|name>, you look nice today!>>>
  </tm-fragment>

  It is possible to call a macro with less or more arguments than the expected number. Superfluous arguments are simply ignored. Missing arguments take the nullary <markup|uninit> primitive as value:

  <\tm-fragment>
    <inactive*|<assign|hey|<macro|first|second|<style-with|src-compact|none|<if|<equal|<arg|second>|<uninit>>|Hey <arg|first>, you look lonely today...|Hey <arg|first> and <arg|second>, you form a nice couple!>>>>>
  </tm-fragment>

  We finally notice that you are allowed to compute with macros, in a similar way as in functional programming, except that our macros are not closures (yet). For instance:

  <\tm-fragment>
    <inactive|<assign|my-macro-copy|<inactive|<value|my-macro>>>>
  </tm-fragment>

  The <markup|compound> tag may be used to apply macros which are the result of a computation:

  <\tm-fragment>
    <inactive*|<assign|overloaded-hi|<macro|name|<style-with|src-compact|none|<compound|<if|<nice-weather>|<value|happy-hi>|<value|sad-hi>>|<arg|name>>>>>>
  </tm-fragment>

  <subsection|Formatting primitives>

  This section contains some important notes on formatting primitives which are not really part of the style-sheet language, but nevertheless very related.

  First of all, most <TeXmacs> presentation tags can be divided in two main categories: inline tags and block tags. For instance, <markup|frac> is a typical inline tag, whereas <markup|theorem> is a typical block tag. Some tags, like <markup|strong> are inline if their argument is and block in the contrary case. When writing macros, it is important to be aware of the inline or block nature of tags, because block tags inside a horizontal concatenation are not rendered in an adequate way. If you need to surround a block tag with some inline text, then you need the surround primitive:

  <\tm-fragment>
    <inactive*|<assign|my-theorem|<macro|body|<surround|<no-indent><with|font-series|bold|Theorem. >|<right-flush>|<arg|body>>>>>
  </tm-fragment>

  In this example, we surrounded the body of the theorem with the bold text “Theorem.” at the left hand side and a “right-flush” at the right-hand side. Flushing to the right is important in order to make the blue visual border hints look nice when you are inside the environment.

  In most cases, <TeXmacs> does a good job in determining which tags are inline and which ones are not. However, you sometimes may wish to force a tag to be a block environment. For instance, the tag <markup|very-important> defined by

  <\tm-fragment>
    <inactive*|<assign|very-important|<macro|body|<with|font-series|bold|color|red|<arg|body>>>>>
  </tm-fragment>

  may both be used as an inline tag and a block environment. When placing your cursor just before the <markup|with>-tag and hitting <shortcut|(kbd-return)> followed by <key|backspace>, you obtain

  <\tm-fragment>
    <inactive*|<assign|very-important|<\macro|body>
      <with|font-series|bold|color|red|<arg|body>>
    </macro>>>
  </tm-fragment>

  Since the body of the macro is now a block, your tag <markup|very-important> will automatically become a block environment too. In the future, the <markup|drd-props> primitive will give you even more control over which tags and arguments are inline and which ones are block.

  Another important property of tags is whether they contain normal textual content or tabular content. For instance, consider the definition of the standard <markup|eqnarray*> tag (with a bit of presentation markup suppressed):

  <\tm-fragment>
    <inactive*|<assign|eqnarray*|<macro|body|<with|par-mode|center|mode|math|math-display|true|par-sep|0.45fn|<surround|<no-page-break*><vspace*|0.5fn>|<vspace|0.5fn><no-indent*>|<tformat|<twith|table-hyphen|y>|<twith|table-width|1par>|<twith|table-min-cols|3>|<twith|table-max-cols|3>|<cwith|1|-1|1|1|cell-hpart|1>|<cwith|1|-1|-1|-1|cell-hpart|1>|<arg|body>>>>>>>
  </tm-fragment>

  The use of <markup|surround> indicates that <markup|eqnarray*> is a block environment and the use of <markup|tformat> specifies that it is also a tabular environment. Moreover, the <markup|twith> and <markup|cwith> are used to specify further formatting information: since we are a block environment, we enable hyphenation and let the table span over the whole paragraph (unused space being equally distributed over the first and last columns). Furthermore, we have specified that the table contains exactly three columns.

  Finally, it is important to bear in mind that style-sheets do not merely specify the final presentation of a document, but that they may also contain information for the authoring phase. Above, we have already mentioned the use of the <markup|right-flush> tag in order to improve the rendering of \ visual border hints. Similarly, visual hints on invisible arguments may be given in the form of flags:

  <\tm-fragment>
    <inactive*|<assign|labeled-theorem|<macro|id|body|<style-with|src-compact|none|<surround|<style-with|src-compact|none|<no-indent><flag|Id: <arg|id>|blue|id><with|font-series|bold|Theorem. >>|<right-flush>|<arg|body>>>>>>
  </tm-fragment>

  More generally, the <markup|specific> tag with first argument “screen” may be used to display visual hints, which are removed when printing the document.

  <subsection|Evaluation control>

  The <menu|Source|Evaluation> menu contains several primitives to control the way expressions in the style-sheet language are evaluated. The most frequent use of these primitives is when you want to write a “meta-macro” like <markup|new-theorem> which is used for defining or computing on other macros. For instance:

  <\tm-fragment>
    <inactive*|<assign|new-theorem|<macro|name|text|<quasi|<assign|<unquote|name>|<macro|body|<surround|<no-indent><strong|<unquote|<arg|text>>. >|<right-flush>|<arg|body>>>>>>>>
  </tm-fragment>

  When calling <inactive*|<new-theorem|theorem|Theorem>> in this example, we first evaluate all <markup|unquote> instructions inside the <markup|quasi> primitive, which yields the expression

  <\tm-fragment>
    <inactive*|<assign|theorem|<macro|body|<surround|<no-indent><strong|Theorem. >|<right-flush>|<arg|body>>>>>
  </tm-fragment>

  Next, this expression is evaluated, thereby defining a macro <markup|theorem>.

  It should be noticed that the <TeXmacs> conventions for evaluation are slightly different then those from conventional functional languages like <name|Scheme>. The subtle differences are motivated by our objective to make it as easy as possible for the user to write macros for typesetting purposes.

  For instance, when <TeXmacs> calls a macro <inactive*|<macro|<active*|x<rsub|1>>|<active*|<math|\<cdots\>>>|<active*|x<rsub|n>>|body>> with arguments <verbatim|y<rsub|1>> until <verbatim|y<rsub|n>>, the argument variables <src-arg|x<rsub|1>> until <src-arg|x<rsub|n>> are bound to the unevaluated expressions <verbatim|y<rsub|1>> until <verbatim|y<rsub|n>>, and the body is evaluated with these bindings. The evaluation of <verbatim|y<rsub|i>> takes place each time we request for the argument <no-break><src-arg|x<rsub|i>>. In particular, when applying the macro <inactive*|<macro|x|<arg|x> and again <arg|x>>> to an expression <verbatim|y>, the expression <no-break><verbatim|y> is evaluated twice.

  In <name|Scheme>, the bodies of <name|Scheme> macros are evaluated twice, whereas the arguments of functions are evaluated. On the other hand, when retrieving a variable (whether it is an argument or an environment variable), the value is not evaluated. Consequently, a <TeXmacs> macro

  <\tm-fragment>
    <inactive*|<assign|foo|<macro|x|<blah|<arg|x>|<arg|x>>>>>
  </tm-fragment>

  would correspond to a <name|Scheme> macro

  <\scm-code>
    (define-macro (foo x)

    \ \ ‘(let ((x (lambda () ,x)))

    \ \ \ \ \ (blah (x) (x)))
  </scm-code>

  Conversely, the <name|Scheme> macro and function

  <\scm-code>
    (define-macro (foo x) (blah x x))

    (define (fun x) (blah x x))
  </scm-code>

  admit the following analogues in <TeXmacs>:

  <\tm-fragment>
    <\inactive*>
      <assign|foo|<macro|x|<eval|<blah|<quote-arg|x>|<quote-arg|x>>>>>
    </inactive*>

    <\inactive*>
      <assign|fun|<macro|x|<with|x*|<arg|x>|<blah|<quote-value|x*>|<quote-value|x*>>>>>
    </inactive*>
  </tm-fragment>

  Here the primitives <markup|quote-arg> and <markup|quote-value> are used to retrieve the value of an argument <abbr|resp.> an environment variable. The <TeXmacs> primitives <markup|eval>, <markup|quote>, <markup|quasiquote> and <markup|unquote> behave in the same way as their <name|Scheme> analogues. The <markup|quasi> primitive is a shortcut for quasi-quotation followed by evaluation.

  <subsection|Control flow>

  Besides sequences of instructions, which can be achieved using the <markup|concat> primitive, and the mechanism of macro expansion, the <TeXmacs> style-sheet language provides a few other primitive for affecting the control flow: <markup|if>, <markup|case>, <markup|while> and <markup|for-each>. These primitives are available from the <menu|Source|Control flow> menu. However, we have to warn the user that the conditional constructs are quite fragile: they only apply to inline content and the accessibility of macro arguments should not to much depend on the conditions.

  The most important primitive <markup|if>, which can be entered using <shortcut|(make 'if)>, allows for basic conditional typesetting:

  <\tm-fragment>
    <inactive*|<assign|appendix|<\macro|title|body>
      <style-with|src-compact|none|<compound|<if|<long-document>|<value|chapter-appendix>|<value|section-appendix>>|<arg|title>|<arg|body>>>
    </macro>>>
  </tm-fragment>

  In this example, <markup|appendix> is a block environment consisting of a title and a body, and which is rendered as a chapter for long documents and as a section for short ones. Notice that the following implementation would have been incorrect, since the <markup|if> primitive currently only works for inline content:

  <\tm-fragment>
    <inactive*|<assign|appendix|<\macro|title|body>
      <style-with|src-compact|none|<if|<long-document>|<chapter-appendix|<arg|title>|<arg|body>>|<section-appendix|<arg|title>|<arg|body>>>>
    </macro>>>
  </tm-fragment>

  The <markup|if> primitive may also be used in order to implement optional arguments:

  <\tm-fragment>
    <inactive*|<assign|hey|<macro|first|second|<style-with|src-compact|none|<if|<equal|<arg|second>|<uninit>>|Hey <arg|first>, you look lonely today...|Hey <arg|first> and <arg|second>, you form a nice couple!>>>>>
  </tm-fragment>

  However, <TeXmacs> is not clever enough to detect which arguments are optional and which arguments are accessible (<abbr|i.e.> which arguments can be edited by the user). Therefore, you will have to manually give this information using the <markup|drd-props> primitive. The <markup|case>, <markup|while> and <markup|for-each> primitives are explained in more detail in the <hlink|corresponding section|../../format/stylesheet/prim-control.en.tm> on the <hlink|<TeXmacs> primitives|../../format/stylesheet/stylesheet.en.tm>.

  <subsection|Computational markup>

  In the menus <menu|Source|Arithmetic>, <menu|Source|Text>, <menu|Source|Tuple> and <menu|Source|Condition> you will find different primitives for computing with integers, strings, tuples and boolean values. For instance, in the following code, the <markup|new-important> tag defines a new “important tag” as well as a variant in red:

  <\tm-fragment>
    <inactive*|<assign|new-important|<macro|name|<quasi|<style-with|src-compact|none|<style-with|src-compact|none|<assign|<unquote|<arg|name>>|<macro|x|<with|font-series|bold|<arg|x>>>>><style-with|src-compact|none|<assign|<unquote|<merge|<arg|name>|-red>>|<macro|x|<with|font-series|bold|color|red|<arg|x>>>>>>>>>>
  </tm-fragment>

  Here we use the <markup|merge> primitive in order to concatenate two strings. The different computational primitives are described in more detail in the <hlink|corresponding section|../../format/stylesheet/prim-functional.en.tm> on the <hlink|<TeXmacs> primitives|../../format/stylesheet/stylesheet.en.tm>.

  <section|Customizing the standard TeXmacs styles>

  Whenever the standard <TeXmacs> style files are inadequate for a given purpose, it is possible to write your own style files. However, designing your own style files from scratch may be a complex task, so it is usually preferable to customize the existing styles. This requires some understanding of the global architecture of the standard style files and a more precise understanding of the parts you wish to customize. In this section, we will explain the general principles. For more details, we refer to the chapter on the <hlink|principal <TeXmacs> tags|../design/style-language.en.tm>.

  <subsection|Organization of the style files and packages>

  Each standard <TeXmacs> style file or package is based on a potentially finite number of subpackages. From an abstract point of view, this organization may be represented by a labeled tree. For instance, the tree which corresponds to the <tmstyle|article> style is represented below:

  <\big-figure|<tree|<tmstyle|article>|<tree|<tmpackage|std>|<stack|<tformat|<table|<row|<cell|<tmpackage|std-markup>>>|<row|<cell|<tmpackage|std-symbol>>>|<row|<cell|<tmpackage|std-math>>>|<row|<cell|<tmpackage|std-list>>>|<row|<cell|<tmpackage|std-utils>>>|<row|<cell|<tmpackage|std-counter>>>|<row|<cell|<tmpackage|std-automatic>>>|<row|<cell|<tmpackage|list>>>|<row|<cell|<tmpackage|session>>>>>>>|<tree|<tmpackage|env>|<stack|<tformat|<table|<row|<cell|<tmpackage|env-base>>>|<row|<cell|<tmpackage|env-math>>>|<row|<cell|<tmpackage|env-theorem>>>|<row|<cell|<tmpackage|env-float>>>>>>>|<tree|<tmpackage|title-base>|<tmpackage|title-generic>>|<tmpackage|header-article>|<tree|<tmpackage|section-article>|<tmpackage|section-base>>>>
    The tree with the packages from which the <tmstyle|article> style has been built up. In order to save space, we have regrouped the numerous children of <tmpackage|std> and <tmpackage|env> in vertical lists.
  </big-figure>

  Most of the style packages correspond to a <abbr|d.t.d.> (data type definition) which contains the “abstract interface” of the package, <abbr|i.e.> the exported tags. For instance, the package <tmpackage|std-markup> corresponds to the <abbr|d.t.d.> <tmdtd|std-markup>. Sometimes however, several style packages match the same <abbr|d.t.d.>. For instance, both <tmpackage|header-article> and <tmpackage|header-book> match the <abbr|d.t.d.> <tmdtd|header>, since they merely implement different ways to render the same tags.

  When building your own style files or packages, you may use the <markup|use-package> primitive in order to include other packages. For instance, the <tmstyle|article> style essentially consists of the line

  <\tm-fragment>
    <inactive*|<use-package|std|env|title-generic|header-article|section-article>>
  </tm-fragment>

  More precisely, the <markup|use-package> package sequentially includes the style packages corresponding to its arguments. The packages should be in <verbatim|$TEXMACS_PACKAGE_PATH>, which contains <verbatim|.>, <verbatim|~/.TeXmacs/packages> and <verbatim|$TEXMACS_PATH/packages> by default. Furthermore rendering information for the source code like <markup|style-with> tags are discarded before evaluation of the files.

  <\remark>
    We strongly recommend the user to take a look at some of the standard style files and packages which can be found in

    <\verbatim>
      \ \ \ \ $TEXMACS_PATH/styles

      \ \ \ \ $TEXMACS_PATH/packages
    </verbatim>

    When loading using <shortcut|(interactive load-buffer)>, these paths are in the standard load path. For instance, if you want to take a look at the <tmpackage|std-markup> package, then it suffices to type <shortcut|(interactive load-buffer)>, followed by the file name <verbatim|std-markup.ts> and <shortcut|(kbd-return)>.
  </remark>

  <\remark>
    It is also possible to customize the presentation of the source code of the style files and packages themselves, by using other packages in addition to <tmstyle|source> or by using another major style file based on <tmstyle|source>. In that case, the extra markup provided by such packages may be used for presentation purposes of the source code, but it is not exported when using your package in another file.
  </remark>

  <subsection|General principles for customization>

  Style files and packages basically enrich the current typesetting environment with a combination of

  <\itemize>
    <item>Environment variables.

    <item>Tags for the end-user.

    <item>Customizable macros.
  </itemize>

  Furthermore, they may define some tags for intern implementation purposes, which will not be documented in this manual. They may also specify some logical properties of tags using the <markup|drd-props> primitive.

  Environment variables are almost always attributes for controlling the rendering of content, or counters for sections, equations, <abbr|etc.>. Although several simple tags for the end-user like <markup|strong> may be redefined in your own style files, this practice is not recommended for more complex tags like <markup|section>. Indeed, the <markup|section> tag involves many things like resetting subcounters, entering the title into the table of contents and so on. Therefore, special additional macros are provided the customization of such tags, like <markup|section-title>, <markup|section-clean> and <markup|section-toc>.

  <subsection|Customizing the general layout>

  The general layout of a document is mainly modified by setting the appropriate environment variables for <hlink|page layout|../../format/environment/env-page.en.tm> and <hlink|paragraph layout|../../format/environment/env-par.en.tm>. For instance, by including the following lines in your style file, you can set the page size to <verbatim|letter> and the left and right margins to <verbatim|2in>:

  <\tm-fragment>
    <\inactive*>
      <assign|page-type|letter>

      <assign|page-odd|2in>

      <assign|page-even|2in>

      <assign|page-right|2in>
    </inactive*>
  </tm-fragment>

  It should be noticed that the environment variables for page layout are quite different in <TeXmacs> and <TeX>/<LaTeX>. In order to make it easier to adapt <LaTeX> style files to <TeXmacs>, we have therefore provided the <tmpackage|std-latex> package, which emulates the environment variables from <TeX>/<LaTeX>. Typically, this allows you determine the global layout by lines like

  <\tm-fragment>
    <\inactive*>
      <assign|tex-odd-side-margin|<macro|20pt>>

      <assign|tex-even-side-margin|<macro|20pt>>

      <assign|tex-text-width|<macro|33pc>>
    </inactive*>
  </tm-fragment>

  We notice that macros which return lengths are considered as <hlink|lengths|../../format/basics/lengths.en.tm> themselves. In the case of the <TeX>/<LaTeX> emulation package, we actually <em|require> all lengths to be macros.

  The page headers and footers are usually not determined by global environment variables or macros, since they may change when a new chapter or section is started. Instead, <TeXmacs> provides the call-back macros <markup|header-title>, <markup|header-author>, <markup|header-primary> and <markup|header-secondary>. These macros are called when the document title or author are specified or when a new primary or secondary section is started (primary sections are typically chapters in books, or sections in articles). For instance, the following redefinition makes the principal section name appear on even pages, together with the current page number and a wide underline.

  <\tm-fragment>
    <inactive*|<assign|header-primary|<macro|title|nr|type|<assign|page-even-header|<quasiquote|<style-with|src-compact|none|<wide-std-underlined|<style-with|src-compact|none|<page-the-page><htab|5mm><unquote|<arg|title>>>>>>>>>>
  </tm-fragment>

  <subsection|Customizing list environments>

  Lists are made up of two principal ingredients: the outer list environment and the inner items. List environments may either be customized by customizing or redefining the rendering macros for these environments, or defining additional list environments which match the same abstract interface.

  The rendering of the outer list environment is controlled by the <markup|render-list> macro which takes the body of the list as its argument. For instance, consider the following redefinition of <markup|render-list>:

  <\tm-fragment>
    <inactive*|<assign|render-list|<macro|body|<style-with|src-compact|none|<surround|<no-page-break*><vspace*|0.5fn>|<right-flush><vspace|0.5fn><no-indent*>|<with|par-left|<plus|<value|par-left>|3fn>|par-right|<plus|<value|par-right>|3fn>|<arg|body>>>>>>>
  </tm-fragment>

  This redefinition affects the rendering of all list environments (itemize, enumerate, <abbr|etc.>) by reducing the right margin with a length of <verbatim|3fn>:

  <\with|render-list|<macro|body|<surround|<no-page-break*><vspace*|0.5fn>|<right-flush><vspace|0.5fn><no-indent*>|<with|par-left|<plus|<value|par-left>|3fn>|par-right|<plus|<value|par-right>|3fn>|<arg|body>>>>>
    <\itemize>
      <item>This text, which has been made so long that it does not fit on a single line, is indented on the right hand side by <verbatim|3fn>.

      <\enumerate>
        <item>This text is indented by an additional <verbatim|3fn> on the right hand side, since it occurs inside a second list environment.
      </enumerate>

      <item>Once again: this text, which has been made so long that it does not fit on a single line, is indented on the right hand side by <verbatim|3fn>.
    </itemize>
  </with>

  In a similar way, you may customize the rendering of list items by redefining the macros <markup|aligned-item> and <markup|compact-item>. These macros both take one argument with the text of the item and render it either in a right-aligned way (such that subsequent text is left aligned) or in a left-aligned way (such that subsequent text may not be aligned). For instance, consider the following redefinition of <markup|aligned-item>:

  <\tm-fragment>
    <inactive*|<assign|aligned-item|<macro|x|<style-with|src-compact|none|<vspace*|0.5fn><with|par-first|-3fn|<yes-indent>><resize|<with|color|red|<arg|x>>|<minus|1r|2.5fn>||<plus|1r|0.5fn>|>>>>>
  </tm-fragment>

  Then items inside all list environments with compact items will appear in red:

  <\with|aligned-item|<macro|x|<vspace*|0.5fn><with|par-first|-3fn|<yes-indent>><resize|<with|color|red|<arg|x>>|<minus|1r|2.5fn>||<plus|1r|0.5fn>|>>>
    <\itemize>
      <item>This list and aligned descriptions have red items.

      <\description-aligned>
        <item*|C1>First condition.

        <item*|C2>Second condition.
      </description-aligned>

      <item>The items of compact description lists are rendered using <markup|compact-item>.

      <\description-compact>
        <item*|Gnus and gnats>Nice beasts.

        <item*|Micros and softies>Evil beings.
      </description-compact>
    </itemize>
  </with>

  <\remark>
    The macros <markup|aligned-item> and <markup|compact-item> are required to produce inline content, so that they may be used in order to surround blocks. In particular, several other internal macros (<markup|aligned-space-item>, <markup|long-compact-strong-dot-item>, <abbr|etc.>) are based on <markup|aligned-item> and <markup|compact-item>, and used for the rendering of the different types of lists (<markup|itemize-arrow>, <markup|description-long>, <abbr|etc.>). In the future, we also plan to extend <markup|item> and <markup|item*> with a compulsory <src-arg|body> argument. When customizing the list environments, it is important to keep that in mind, so as to make your style-sheets upward compatible.
  </remark>

  The <tmdtd|std-list> <abbr|d.t.d.> also provides a macro <markup|new-list> to define new lists. Its syntax is <explain-macro|new-list|name|item-render|item-transform>, where <src-arg|name> is the name of the new list environment, <src-arg|item-render> an (inline) macro for rendering the item and <src-arg|item-transform> an additional transformation which is applied on the item text. For instance, the <markup|enumerate-roman> environment is defined by

  <\tm-fragment>
    <\inactive*>
      <new-list|enumerate-roman|<value|aligned-dot-item>|<macro|x|<number|<arg|x>|roman>>>
    </inactive*>
  </tm-fragment>

  <subsection|Customizing numbered textual environments>

  <TeXmacs> provides three standard types of numbered textual environments: theorem-like environments, remark-like environments and exercise-like environments. The following aspects of these environments can be easily customized:

  <\itemize>
    <item>Adding new environments.

    <item>Modifying the rendering of the environments.

    <item>Numbering the theorems in a different way.
  </itemize>

  <paragraph*|Defining new environments>

  First of all, new environments can be added using the meta-macros <markup|new-theorem>, <markup|new-remark> and <markup|new-exercise>. These environments take two arguments: the name of the environment and the name which is used for its rendering. For instance, you may wish to define the environment <markup|experiment> by

  <\tm-fragment>
    <inactive*|<new-theorem|experiment|Experiment>>
  </tm-fragment>

  When available in the <TeXmacs> dictionaries, the text “Experiment” will be automatically translated when your document is written in a foreign language. In the section about <hlink|how to define new environments|../../../main/styles/env/env-base-dtd.en.tm>, it is also explained how to define other numbered textual environments (besides theorems, remarks and exercises).

  <paragraph*|Customization of the rendering>

  The principal rendering of the environments can be customized by redefining the <markup|render-theorem>, <markup|render-remark> and <markup|render-exercise> macros. These macros take the <src-arg|name> of the environment (like “Theorem <no-break>1.2”) and its <src-arg|body> as arguments. For instance, if you want theorems to appear in a slightly indented way, with a slanted body, then you may redefine <markup|render-theorem> as follows:

  <\tm-fragment>
    <inactive*|<assign|render-theorem|<\macro|which|body>
      <padded-normal|1fn|1fn|<surround|<theorem-name|<arg|which><theorem-sep>>||<with|font-shape|slanted|par-left|<plus|<value|par-left>|1.5fn>|<arg|body>>>>
    </macro>>>
  </tm-fragment>

  This redefinition produces the following effect:

  <\with|render-theorem|<\macro|which|body>
    <padded-normal|1fn|1fn|<surround|<theorem-name|<arg|which><theorem-sep>>||<with|font-shape|slanted|par-left|<plus|<value|par-left>|1.5fn>|<arg|body>>>>
  </macro>>
    <\theorem>
      This is a theorem which has been typeset in a slanted font.
    </theorem>
  </with>

  By default, the theorems are rendered as remarks with the only difference that their bodies are typeset in an italic font. Hence, redefining the <markup|render-remark> macro will also affect the rendering of theorems. The default <markup|render-proof> macro is also based on <markup|render-remark>.

  Instead of redefining the entire rendering, the user might just wish to customize the way names of theorems are rendered or redefine the separator between the name and the body. As the user may have noticed by examining the above redefinition of <markup|render-theorem>, these aspects are controlled by the macros <markup|theorem-name> and <markup|theorem-sep>. For instance, consider the following redefinitions:

  <\tm-fragment>
    <inactive*|<assign|theorem-name|<macro|name|<with|color|dark red|font-series|bold|<arg|name>>>>>

    <inactive*|<assign|theorem-sep|<macro|: >>>
  </tm-fragment>

  Then theorem-like environments will be rendered as follows:

  <\with|theorem-name|<macro|name|<with|color|dark red|font-series|bold|<arg|name>>>|theorem-sep|<macro|: >>
    <\proposition>
      This proposition is rendered in is a fancy way.
    </proposition>
  </with>

  <paragraph*|Customization of the numbering>

  In the sections about <hlink|counters and counter groups|../../../main/styles/std/std-counter-dtd.en.tm>, it is explained how to customize the counters of numbered environments for particular purposes. For instance, by redefining <markup|inc-theorem>, you may force theorems to reset the counter of corollaries:

  <\tm-fragment>
    <inactive*|<style-with|src-compact|none|<quasi|<style-with|src-compact|none|<assign|inc-theorem|<macro|<compound|<unquote|<value|inc-theorem>>><reset-corollary>>>>>>>
  </tm-fragment>

  Notice the trick with <markup|quasi> and <markup|unquote> in order to take into account additional action which might have been undertaken by the previous value of the macro <markup|inc-theorem>.

  The following code from <verbatim|number-long-article.ts> is used in order to prefix all standard environments with the number of the current section:

  <\tm-fragment>
    <inactive*|<assign|section-clean|<macro|<reset-subsection><reset-std-env>>>>

    <inactive*|<assign|display-std-env|<macro|nr|<section-prefix><arg|nr>>>>
  </tm-fragment>

  <subsection|Customizing sectional tags>

  By default, <TeXmacs> provides the standard sectional tags from <LaTeX> <markup|part>, <markup|chapter>, <markup|section>, <markup|subsection>, <markup|subsubsection>, <markup|paragraph>, <markup|subparagraph>, as well as the special tag <markup|appendix>. <TeXmacs> also implements the unnumbered variants <markup|part*>, <markup|chapter*>, <abbr|etc.> and special section-like tags <markup|bibliography>, <markup|table-of-contents>, <markup|the-index>, <markup|the-glossary>, <markup|list-of-figures>, <markup|list-of-tables>.

  <\remark>
    <label|section-extra-argument-rem>Currently, the sectional tags take one argument, the section title, but a second argument with the body of the section is planned to be inserted in the future (see the experimental <tmpackage|structured-section> package). For this reason (among others), style files should never redefine the main sectional tags, but rather customize special macros which have been provided to this effect.
  </remark>

  From a global point of view, an important predicate macro is <markup|sectional-short-style>. When it evaluates to <verbatim|true>, then appendices, tables of contents, <abbr|etc.> are considered to be at the same level as sections. In the contrary case, they are at the same level as chapters. Typically, articles use the short sectional style whereas book use the long style.

  The rendering of a sectional tag <markup|<em|x>> is controlled through the macros <markup|<em|x>-sep>, <markup|<em|x>-title> and <markup|<em|x>-numbered-title>. The <markup|<em|x>-sep> macro prints the separator between the section number and the section title. It defaults to the macro <markup|sectional-sep>, which defaults in its turn to a wide space. For instance, after redefining

  <\tm-fragment>
    <inactive*|<assign|sectional-sep|<macro| -- >>>
  </tm-fragment>

  sectional titles would typically look like

  <\tm-fragment>
    <with|section-nr|1|sectional-sep|<macro| -- >|<section-numbered-title|Hairy GNUs>>
  </tm-fragment>

  The <markup|<em|x>-title> and <markup|<em|x>-numbered-title> macros respectively specify how to render unnumbered and numbered section titles. Usually, the user only needs to modify <markup|<em|x>-title>, since <markup|<em|x>-numbered-title> is based on <markup|<em|x>-title>. However, if the numbers have to be rendered in a particular way, then it may be necessary to redefine <markup|<em|x>-numbered-title>. For instance, consider the redefinition

  <\tm-fragment>
    <inactive*|<assign|subsection-numbered-title|<macro|name|<style-with|src-compact|none|<sectional-normal|<with|font-series|bold|<the-subsection>. ><arg|name>>>>>>
  </tm-fragment>

  This has the following effect on the rendering of subsection titles:

  <\tm-fragment>
    <with|section-nr|2|subsection-nr|3|the-subsection|<macro|<value|section-nr>.<value|subsection-nr>>|subsection-numbered-title|<macro|name|<sectional-normal|<with|font-series|bold|<the-subsection>. ><arg|name>>>|<subsection-numbered-title|Very hairy GNUs>>
  </tm-fragment>

  Notice that the <tmpackage|section-base> package provides several <hlink|useful helper macros|../../../main/styles/section/section-base-helper.en.tm> like <markup|sectional-normal>.

  <\remark>
    Sectional titles can either be rendered in a “short” or in the “long” fashion. By default, paragraphs and subparagraphs use the short rendering, for which the body starts immediately at the right of the title:

    <\tm-fragment>
      <paragraph-title|My paragraph>Blah, blah, and more blahs...
    </tm-fragment>

    All other sectional tags use the long rendering, in which case the section title takes a separate line on its own:

    <\tm-fragment>
      <section-title|My section>

      Blah, blah, and more blahs...
    </tm-fragment>

    We do not recommend to modify the standard settings (<abbr|i.e.> to render paragraphs in a long way or sections in a short way). If you really want to do so, then we recommend to redefine the corresponding environment variables <inactive|<value|enrich-x-long>>. This will ensure upward compatibility when sectional tags will take an additional argument (see remark <reference|section-extra-argument-rem>).
  </remark>

  Besides their rendering, several other aspects of sectional tags can be customized:

  <\itemize>
    <item>The call-back macro <markup|<em|x>-clean> can be used for cleaning some counters when a new section is started. For instance, in order to prefix all standard environments by the section counter, you may use the following lines:

    <\tm-fragment>
      <\inactive*>
        <assign|section-clean|<macro|<reset-subsection><reset-std-env>>>

        <assign|display-std-env|<macro|nr|<section-prefix><arg|nr>>>
      </inactive*>
    </tm-fragment>

    <item>The call-back macro <markup|<em|x>-header> should be used in order to modify page headers and footers when a new section is started. Typically, this macro should call <markup|header-primary>, or <markup|header-secondary>, or do nothing.

    <item>The call-back macro <markup|<em|x>-toc> should be used in order to customize the way new sections appear in the table of contents.
  </itemize>

  <subsection|Customizing the treatment of title information>

  <TeXmacs> uses the <markup|doc-data> tag in order to specify global data for the document. These data are treated in two stages by the <markup|doc-data> macro. <hlink|First|../../../main/styles/header/header-title-global.en.tm>, the document data are separated into several categories, according to whether the data should be rendered as a part of the main title or in footnotes or the abstract. <hlink|Secondly|../../../main/styles/header/header-title-customize.en.tm>, the data in each category are rendered using suitable macros.

  Each child of the <markup|doc-data> is a tag with some specific information about the document. Currently implemented tags are <markup|doc-title>, <markup|doc-subtitle>, <markup|doc-author>, <markup|doc-date>, <markup|doc-running-title>, <markup|doc-running-author>, <markup|doc-keywords>, <markup|doc-msc> and <markup|doc-note>. The <markup|doc-author> tag may occur several times. The <markup|author-data> tag is used in order to specify structured data for each of the authors of the document. Each child of the <markup|author-data> tag is a tag with information about the corresponding author. Currently implemented tags with author information are <markup|author-name>, <markup|author-affiliation>, <markup|author-email>, <markup|author-homepage> and <markup|author-note>.

  Most of the tags listed above also correspond to macros for rendering the corresponding information as part of the main title. For instance, if the date should appear in bold italic at a distance of at least <verbatim|1fn> from the other title fields, then you may redefine <markup|doc-date> as

  <\tm-fragment>
    <\inactive*>
      <assign|doc-date|<macro|body|<style-with|src-compact|none|<vspace*|1fn><doc-title-block|<with|font-shape|italic|font-series|bold|<arg|body>>><vspace|1fn>>>>
    </inactive*>
  </tm-fragment>

  The <markup|title-block> macro is used in order to make the text span appropriately over the width of the title. The <markup|doc-title> and <markup|author-name> are special in the sense that they also render possible references to footnotes. For this reason, you should rather customize the <markup|doc-render-title> and <markup|author-render-name> macros in order to customize the rendering of the title and the name themselves.

  Notice also that the <markup|doc-running-title> and <markup|author-running-author> macros do not render anything, but rather call the <markup|header-title> and <markup|header-author> call-backs for setting the appropriate global page headers and footers. By default, the running title and author are extracted from the usual title and author names.

  In addition to the rendering macros which are present in the document, the main title (including author information, the date, <abbr|etc.>) is rendered using the <markup|doc-make-title> macro. The author information, as part of the main title, is rendered using <markup|render-doc-author> or <markup|render-doc-authors>, depending on whether the document has one or more authors. Footnotes to the title or to one of the authors are rendered using <markup|doc-title-note> <abbr|resp.> <markup|doc-author-note>. These footnote macros always expect a <markup|document> tag on input, because they may compress it into a horizontal concatenation.

  The first stage of processing the document data is more complex and the reader is invited to take a look at the <hlink|short descriptions|../../../main/styles/header/header-title-global.en.tm> of the macros which are involved in this process. It is also good to study the definitions of these macros in the <hlink|package itself|$TEXMACS_PATH/packages/header/title-base.ts>. In order to indicate the way things work, we finish with an example on how the email address and homepage of an author can be rendered in a footnote instead of the main title:

  <\tm-fragment>
    <\inactive*>
      <assign|doc-author-main|<\macro|data>
        <\quasi>
          <unquote*|<select|<quote-arg|data>|author-name>>

          <unquote*|<select|<quote-arg|data>|author-affiliation>>
        </quasi>
      </macro>>

      <assign|doc-author-data-note|<xmacro|data|<\quasi>
        <unquote*|<select|<quote-arg|data>|author-email>>

        <unquote*|<select|<quote-arg|data>|author-homepage>>

        <unquote*|<select|<quote-arg|data>|author-note|document|<pat-any>>>
      </quasi>>>
    </inactive*>
  </tm-fragment>

  <section|Further notes and tips>

  <subsection|Customizing arbitrary tags>

  Imagine that you want to change the rendering of a given tag, like <markup|lemma>. As a general rule, <TeXmacs> provides a set of well-chosen macros which can be customized by the user so as to obtain the desired effect. For instance, as we have seen <hlink|above|../customize/customize-theorems.en.tm>, you should use modify one of the macros <markup|render-theorem>, <markup|theorem-name> or <markup|theorem-sep> in order to customize the rendering of <markup|lemma> and all other theorem-like environments.

  However, in some cases, it may not be clear which “well-chosen” macro to customize. If we just wanted to change the presentation of lemmas and not of any other theorem-like environments, then we clearly cannot modify <markup|render-theorem>, <markup|theorem-name> or <markup|theorem-sep>. In other cases, the user may not want to invest his time in completely understanding the macro hierarchy of <TeXmacs>, and find out about the existence of <markup|render-theorem>, <markup|theorem-name> and <markup|theorem-sep>.

  So imagine that you want all lemmas to appear in red. One thing \ you can always do is copy the original definition of lemmas in a safe place and redefine the lemma macro on top of the original definition:

  <\tm-fragment>
    <\inactive*>
      <assign|orig-lemma|<value|lemma>>

      <assign|lemma|<macro|body|<with|color|red|<orig-lemma|<arg|body>>>>>
    </inactive*>
  </tm-fragment>

  Alternatively, if only the text inside the lemma should be rendered in red, then you may do:

  <\tm-fragment>
    <\inactive*>
      <assign|orig-lemma|<value|lemma>>

      <assign|lemma|<macro|body|<orig-lemma|<with|color|red|<arg|body>>>>>
    </inactive*>
  </tm-fragment>

  Of course, you have to be careful that the name <markup|orig-lemma> is not already in use.

  Another frequent situation is that you only want to modify the rendering of a tag when it is used inside another one. On the web, the <em|Cascading Style Sheet> language (<acronym|CSS>) provides a mechanism for doing this. In <TeXmacs>, you may simulate this behaviour by redefining macros inside a <markup|with>. For instance, imagine that we want the inter-paragraph space inside lists inside theorem-like environments to vanish. Then we may use:

  <\tm-fragment>
    <\inactive*>
      <assign|orig-render-theorem|<value|render-theorem>>

      <assign|render-theorem|<macro|name|body|<with|orig-render-list|<value|render-list>|<with|render-list|<macro|x|<orig-render-list|<arg|x>>>|<style-with|src-compact|none|<orig-render-theorem|<arg|name>|<arg|body>>>>>>>
    </inactive*>
  </tm-fragment>

  On the one hand side, this mechanism is a bit more complex than <acronym|CSS>, where it suffices to respecify the <src-var|par-par-sep> attribute of lists inside theorems. On the other hand, it is also more powerful, since the <markup|render-theorem> macro applies to all theorem-like environments at once. Furthermore, if the above mechanism is to be used frequently, then real hackers may simplify the notations using further macro magic.

  <subsection|Standard utilities>

  In the <hlink|package <tmpackage|std-utils>|../../../main/styles/std/std-utils-dtd.en.tm>, the user may find several useful additional macros for writing style files. It mainly contains macros for

  <\itemize>
    <item>Writing block environments which span over the entire paragraph width. Notice that the <tmpackage|title-base> package provides some <hlink|additional macros|../../../main/styles/section/section-base-helper.en.tm> for wide section titles.

    <item>Writing wide block environments which are underlined, overlined or in a frame box.

    <item>Recursive indentation.

    <item>Setting page headers and footers.

    <item>Localization of text.
  </itemize>

  It is good practice to use these standard macros whenever possible when writing style files. Indeed, the low-level <TeXmacs> internals may be subject to minor changes. When building upon standard macros with a clear intention, you increase the upward compatibility of your style-sheets.

  \;

  <chapter|定制墨干>

  \;

  高度可定制性是<TeXmacs>的主要特点之一。一般需求可在<em|><menu|编辑|首选项>中简单配置（见<smart-ref|chapter:config_texmacs>），深入定制则需使用金鱼<name|Scheme>扩展。我们用简单的例子简要概述其工作原理。

  <section|金鱼Scheme入门>

  墨干所使用的Scheme解释器是金鱼Scheme。在使用Scheme语言定制墨干之前，建议先了解一下金鱼Scheme的语法。《有基础SICP》系列视频教程是一个很好的学习渠道。

  <section|撰写初始化配置文件>

  启动程序时，<with|font|roman|<TeXmacs>>将读取并执行这个文件：

  <with|font|roman|<verbatim| \ \ \ $TEXMACS_PATH/progs/init-texmacs.scm>>

  以及用户自己的配置文件（如果存在的话）：<em|>

  <with|font|roman|<verbatim| \ \ \ $TEXMACS_HOME_PATH/progs/my-init-texmacs.scm>>

  每次你新建一个buffer，程序将执行:

  <with|font|roman|<verbatim| \ \ \ $TEXMACS_PATH/progs/init-buffer.scm>>

  以及（如果存在的话）

  <with|font|roman|<verbatim| \ \ \ $TEXMACS_HOME_PATH/progs/my-init-buffer.scm>>

  通过内置的Scheme会话，可以得到<shell|TEXMACS_PATH>和<shell|TEXMACS_HOME_PATH>的具体位置：

  <\session|scheme|default>
    <\unfolded-io|Scheme] >
      (get-texmacs-path)
    <|unfolded-io>
      \<less\>url /usr/share/Xmacs\<gtr\>
    </unfolded-io>

    <\unfolded-io|Scheme] >
      (get-texmacs-home-path)
    <|unfolded-io>
      \<less\>url /home/da/.local/share/XmacsLabs\<gtr\>
    </unfolded-io>

    <\input|Scheme] >
      \;
    </input>
  </session>

  <section|定制快捷键><label|sec:scheme_keyboard>

  下面这行代码用来指定键盘布局

  <\scm-code>
    (kbd-map . <scm-arg|keymaps>)
  </scm-code>

  使用<scm|:mode>选项，你可以指定使键盘布局生效的条件。比如，这行代码：

  <\scm-code>
    (kbd-map (:mode in-math?) . <scm-arg|keymaps>)
  </scm-code>

  指定了只在数学模式下生效的键盘布局。<scm-arg|keymaps> 这个列表中的元素有下面三种形式：

  <\scm-code>
    (<em|key-combination> <scm-arg|action_1> ... <scm-arg|action_n>)

    (<em|key-combination> <scm-arg|result>)

    (<em|key-combination> <scm-arg|result> <scm-arg|help-message>)
  </scm-code>

  第一行中，<scm-arg|action_i>是和<scm-arg|key-combination>相关的Scheme代码。第二行和第三行中的 <scm-arg|result>是<scm-arg|key-combination>结束之后插入的字符串。第三行中，<scm-arg|key-combination> 结束之后，将会显示<scm-arg|help-message>。

  \;

  \;

  \;

  \;
</body>

<\initial>
  <\collection>
    <associate|font-base-size|10>
    <associate|info-flag|minimal>
    <associate|page-medium|papyrus>
    <associate|page-screen-margin|false>
    <associate|par-par-sep|0.5fn>
    <associate|save-aux|false>
  </collection>
</initial>
