<TMU|<tuple|1.1.0|2025.1.3-rc2>>

<style|<tuple|tmdoc|chinese|number-europe>>

<\body>
  <tmdoc-title|<TeXmacs>的交互式界面><label|sec-man-itf>

  能够与外部系统通信是 <TeXmacs> 的一个重要特性。对于计算机代数系统或其他科学计算系统来说，交互通常是在类似 shell 的简陋字符界面中完成的。但是在 <TeXmacs> 的会话中，可以对接这些外部系统，对输入的命令求值后，以一种有良好排版的、图形化的方式显示结果。一些外部系统的 <TeXmacs> 插件还可以用作脚本语言，但更多是在后台执行。

  查看 <menu|Help|Plug-ins> 以获得现有插件的清单和更多关于这些外部系统的文档。

  <section|Creating sessions><label|sec-man-session-basic>

  A session can be started from the <menu|Insert|Session> menu. Since <TeXmacs> is based on the <name|Scheme> language, it is always possible to start a <name|Scheme> session using <menu|Insert|Session|Scheme>. On <name|Unix> systems, it is usually also possible to start <name|Bash> shell sessions using <menu|Insert|Session|Shell>. The remainder of the items in the <menu|Insert|Session> menu depend on the plug-ins which are installed on your system.

  A session consists of a sequence of input and output fields and possible text between them. When pressing <shortcut|(kbd-return)> inside an input field of a session, the text inside the environment is evaluated and the result is displayed in an output field.

  When entering a command in a session, the application attempts to execute it. Several commands may be launched concurrently in the same document, but the output will only be active in the session where the cursor is and at the place of the cursor. Therefore, we recommend to use different buffers for parallel executions.

  For each type of extern application, one may choose between sharing a single process by different sessions, or launching a separate process for each different session. More precisely, when inserting a session using <menu|Insert|Session|Other>, you may specify both a “session type” (Shell, Pari, Maxima, <abbr|etc.>) and a “session name” (the default name is “default”). Sessions with different names correspond to different processes and sessions with the same name share a common process.

  In order to finish the process which underlies a given session, you may use <menu|Session|Close session>. When pressing <shortcut|(kbd-return)> in the input of a non-connected system, the system will be restarted automatically. You may also use <menu|Session|Interrupt execution> in order to interrupt the execution of a command. However, several applications do not support this feature.

  In order to evaluate all fields of <abbr|e.g.> a previously created session, you may use <menu|Session|Evaluate|Evaluate all>. Similarly, <menu|Session|Evaluate|Evaluate above> and <menu|Session|Evaluate|Evaluate below> allow you to evaluate all field above or below the current field.

  <section|Editing sessions><label|sec-man-session-edit>

  Inside input fields of sessions, the cursor keys have a special meaning: when moving upwards or downwards, you will move to previous or subsequent input fields. When moving to the left or to the right, you will never leave the input field; you should rather use the mouse for this.

  Some facilities for editing input, output and text fields are available in the <menu|Session|Field> menu. Keyboard shortcuts for inserting fields are <shortcut|(structured-insert-up)> (insert above) and <shortcut|(structured-insert-down)>. Keyboard shortcuts for removing matching text/input/output fields are <shortcut|(structured-remove-left)> (remove backwards) and <shortcut|(structured-remove-right)> (remove current fields).

  It is possible to create “subsessions” using <menu|Session|Session|Create subsession> or <shortcut|(structured-insert-right)>. In that case, the current input-output field becomes the body of an unfolded subsession. Such a subsession consists of an explanatory text together with the subsession body. Subsessions can be folded and unfolded using <shortcut|(dynamic-previous)> <abbr|resp.> <shortcut|(dynamic-next)>. Subsessions have a nice rendering on the screen when using the <tmpackage|framed-session> package in <menu|Document|Use package|Program>.

  Notice that input/output fields and subsessions are foldable: when clicking on the prompt with the mouse, you may fold or unfold the entry to hide or show the output. For laptop presentations, this folding and unfolding process is done automatically when traversing your presentation. It is also possible to fold or unfold all fields in a session using <menu|Session|Session|Fold all fields> and <menu|Session|Session|Unfold all fields>.

  Other useful editing operations are <menu|Session|Session|Clear all fields>, which is useful for creating a demo session which will be executed later on, and <menu|Session|Split session>, which can be used for splitting a session into parts for inclusion into a paper.

  <\example>
    <label|session-example>A typical <name|Maxima> session is given below. If <name|Maxima> is present on your system, then you may put your cursor in one of the inputs, perform some edits, and try to reexecute it.

    <\session|maxima|default>
      <\output>
        Maxima 5.25.1 http://maxima.sourceforge.net

        using Lisp SBCL 1.0.51

        Distributed under the GNU Public License. See the file COPYING.

        Dedicated to the memory of William Schelter.

        The function bug_report() provides bug reporting information.
      </output>

      <\unfolded-io>
        <with|color|red|(<with|math-font-family|rm|%i>1) >
      <|unfolded-io>
        diff (x^x^x, x)
      <|unfolded-io>
        <math|<with|math-display|true|<text|<with|font-family|tt|color|red|(<with|math-font-family|rm|%o1>) >>x<rsup|x<rsup|x>>*<around*|(|x<rsup|x>*log <around*|(|x|)>*<around*|(|log <around*|(|x|)>+1|)>+x<rsup|x-1>|)>>>
      </unfolded-io>

      <\unfolded-io>
        <with|color|red|(<with|math-font-family|rm|%i>2) >
      <|unfolded-io>
        integrate (%o1, x)
      <|unfolded-io>
        <math|<with|math-display|true|<text|<with|font-family|tt|color|red|(<with|math-font-family|rm|%o2>) >>\<mathe\><rsup|\<mathe\><rsup|x*log <around*|(|x|)>>*log <around*|(|x|)>>>>
      </unfolded-io>

      <\unfolded-io>
        <with|color|red|(<with|math-font-family|rm|%i>3) >
      <|unfolded-io>
        integrate (x^5 / (x^2 - x + 17), x)
      <|unfolded-io>
        <math|<with|math-display|true|<text|<with|font-family|tt|color|red|(<with|math-font-family|rm|%o3>) >><frac|239*log <around*|(|x<rsup|2>-x+17|)>|2>+<frac|1361*arctan <around*|(|<frac|2*x-1|<sqrt|67>>|)>|<sqrt|67>>+<frac|3*x<rsup|4>+4*x<rsup|3>-96*x<rsup|2>-396*x|12>>>
      </unfolded-io>
    </session>
  </example>

  <section|Selecting the input method><label|sec-man-session-input>

  By default, <TeXmacs> will attempt to evaluate the input field when pressing <key|return>. Multiline input can be created using <key|S-return>. Alternatively, when selecting the multiline input mode using <menu|Session|Input mode|Multiline input>, the <key|return> key will behave as usual and <key|S-return> may be used in order to evaluate the input field. Notice finally that certain systems admit built-in heuristics for testing whether the input has been completed; if not, then the <key|return> may behave as usual.

  Certain applications allow you to type the mathematical input in a graphical, two dimensional form. This feature can be used by selecting <menu|Session|Input mode|Mathematical input>. If this feature is available, then it is usually also possible to copy and paste output back into the input. However, it depends on the particular application how well this works. Keep in mind that some key combinations may be used by the <subsubmenu|Session|Input|Mathematical input> mode: for instance the key <key|$> is usually redefined inside math mode, so if you want to input it you'll have to type <key|S-F5><key|$>. You can read more about the prefix key <key|S-F5> in “<hlink|Keyboard shortcuts for text mode|../text/keyboard/man-text-kbd.en.tm>”.

  <\example>
    Below, you will find the <hlink|previous example session|man-session-edit.en.tm#session-example>, but now using mathematical input:

    <\session|maxima|default>
      <\output>
        Maxima 5.25.1 http://maxima.sourceforge.net

        using Lisp SBCL 1.0.51

        Distributed under the GNU Public License. See the file COPYING.

        Dedicated to the memory of William Schelter.

        The function bug_report() provides bug reporting information.
      </output>

      <\unfolded-io-math>
        <with|color|red|(<with|math-font-family|rm|%i>1) >
      <|unfolded-io-math>
        diff<around*|(|x<rsup|x<rsup|x>>,x|)>
      <|unfolded-io-math>
        <math|<with|math-display|true|<text|<with|font-family|tt|color|red|(<with|math-font-family|rm|%o1>) >>x<rsup|x<rsup|x>>*<around*|(|x<rsup|x>*log <around*|(|x|)>*<around*|(|log <around*|(|x|)>+1|)>+x<rsup|x-1>|)>>>
      </unfolded-io-math>

      <\unfolded-io-math>
        <with|color|red|(<with|math-font-family|rm|%i>2) >
      <|unfolded-io-math>
        <big|int>%o1*\<mathd\> x
      <|unfolded-io-math>
        <math|<with|math-display|true|<text|<with|font-family|tt|color|red|(<with|math-font-family|rm|%o2>) >>\<mathe\><rsup|\<mathe\><rsup|x*log <around*|(|x|)>>*log <around*|(|x|)>>>>
      </unfolded-io-math>

      <\unfolded-io-math>
        <with|color|red|(<with|math-font-family|rm|%i>3) >
      <|unfolded-io-math>
        <big|int><frac|x<rsup|5>|x<rsup|2>-x+17>*\<mathd\> x
      <|unfolded-io-math>
        <math|<with|math-display|true|<text|<with|font-family|tt|color|red|(<with|math-font-family|rm|%o3>) >><frac|239*log <around*|(|x<rsup|2>-x+17|)>|2>+<frac|1361*arctan <around*|(|<frac|2*x-1|<sqrt|67>>|)>|<sqrt|67>>+<frac|3*x<rsup|4>+4*x<rsup|3>-96*x<rsup|2>-396*x|12>>>
      </unfolded-io-math>
    </session>
  </example>

  <section|Plug-ins as scripting languages><label|sec-man-scripting-language>

  <TeXmacs> provides a few other kinds of additional interfaces to external systems in addition to shell-like interfaces. First of all, it is possible to insert a so called “executable switch” anywhere in the document using <menu|Insert|Fold|Executable>.

  For instance, if <name|Maxima> is installed on your system, then <menu|Insert|Fold|Executable|Maxima> should yield something like <script-input|maxima|default||>. You may enter a<nbsp><name|Maxima> expression in the yellow part of this markup, say <script-input|maxima|default|diff(x^x,x)|>. Using <shortcut|(kbd-return)>, you may now switch back and forth between the unevaluated input and the evaluated output <script-output|maxima|default|diff(x^x,x)|<math|x<rsup|x>*<around*|(|log <around*|(|x|)>+1|)>>>. Using <shortcut|(kbd-shift-return)>, you enable multi-line input. This kind of executable switches are very useful for plug-ins such as <name|Dra<TeX>>, <name|Eukleides>, <name|Feynmf>, <abbr|etc.>, which are mainly used for the efficient computation and insertion of special graphics inside <TeXmacs> documents.

  Some plug-ins such as <name|Maxima> can even be selected as a <em|scripting language> using <menu|Document|Scripts|Maxima>. When doing so, a special <menu|Maxima> menu will appear, which allows for many useful operations directly on formulas. For instance, when putting the cursor inside the formula <math|1+1> and pressing <shortcut|(script-eval)> or <menu|Evaluate>, the formula gets evaluated automatically to yield <math|2>.

  If a plug-in can be used as a scripting language, then it is possible to create executable switches with links between them. More precisely, assuming that you selected a scripting language from <menu|Document|Scripts>, you may insert a new <em|executable input field> using <shortcut|(make-calc-input)> or <menu|Insert|Link|Executable input field>. As before, when pressing <key|return>, the current input is evaluated and you will see the corresponding output; you may switch back to the input by pressing <key|return> once more.

  Contrary to executable switches, you may attach an identifier to the executable input field by deactivating the field or by editing the <samp|Ref> field in the focus bar. Inside other executable input fields, you may then refer to the value of the field by inserting a <em|field reference> using <shortcut|(make 'calc-ref)> or <menu|Insert|Link|Field reference>. As a variant to executable input fields, you may sometimes prefer to insert plain <em|input fields> using <shortcut|(make-calc-inert)> or <menu|Insert|Link|Input field>. These fields can only be used as inputs and pressing <key|return> inside such a field will only recompute those other fields which depend on it.

  <\example>
    The executable input fields may for instance be nice in pedagogic documents in which parts of the document may be modified and recomputed by the reader. For instance, evaluation of the input fragment

    <\quote-env>
      The derivative of <with|prog-scripts|maxima|<calc-inert|function|<math|x<rsup|x>>>> equals <with|prog-scripts|maxima|<calc-input|derivative|diff(<calc-ref|function>,x)|<math|x<rsup|x>*<around*|(|log <around*|(|x|)>+1|)>>>>.

      The second derivative is given by <with|prog-scripts|maxima|<calc-input|second|diff(<calc-ref|derivative>,x)|<math|x<rsup|x>*<around*|(|log <around*|(|x|)>+1|)><rsup|2>+x<rsup|x-1>>>>.
    </quote-env>

    yields

    <\quote-env>
      The derivative of <with|prog-scripts|maxima|<calc-inert|function2|<math|x<rsup|x>>>> equals <with|prog-scripts|maxima|<calc-output|derivative2|diff(<calc-ref|function2>,x)|<math|x<rsup|x>*<around*|(|log <around*|(|x|)>+1|)>>>>.

      The second derivative is given by <with|prog-scripts|maxima|<calc-output|second2|diff(<calc-ref|derivative2>,x)|<math|x<rsup|x>*<around*|(|log <around*|(|x|)>+1|)><rsup|2>+x<rsup|x-1>>>>.
    </quote-env>

    Of course, if the reader changes the input function <math|x<rsup|x>> into something else and presses <key|return>, then the first and second derivatives will be updated automatically.
  </example>

  <section|Spreadsheets><label|sec-man-spreadsheet>

  <TeXmacs> provides rudimentary spreadsheet-like facilities with the advantage that the computations can be carried out using any of the plug-ins that can be used as a scripting language. In order to use the spreadsheet facilities, you should therefore start with the selection of a scripting language in the menu <menu|Document|Scripts>.

  As soon as you have selecting a scripting language, such as <name|Maxima>, then you may enter a new spreadsheet using <menu|Insert|Table|Textual spreadsheet> or <menu|Insert|Table|Numeric spreadsheet>. You may edit the spreadsheet as an ordinary table, except that the <key|return> key will attempt to reevaluate the cells of the table.

  In addition, when preceding the contents of a cell by =, then cell will be considered as an input-output switch. More precisely, the input is a formula which will be evaluated using the current scripting language. After the evaluation, only the result of the evaluation is shown in the cell. After pressing <key|return> a second time in the cell, it will be possible switch back and edit the input. In the formulas, one may refer to the others using names such as <samp|c5> for the third row and the fifth column.

  <\example>
    On the left-hand side of the figure below, we have displayed a simple table with formulas for evaluating the sums of the first two items of each row. On the right-hand side, we have shown the result after evaluation.

    <\big-figure|<small|<with|prog-scripts|maxima|<calc-table|simple1|<numeric-dot-table|<tformat|<cwith|1|-1|1|-1|cell-width|5em>|<cwith|1|-1|1|-1|cell-hmode|max>|<table|<row|<cell|<cell-inert|a1|1>>|<cell|<cell-inert|b1|10>>|<cell|<cell-inert|c1|=a1+b1>>>|<row|<cell|<cell-inert|a2|100>>|<cell|<cell-inert|b2|1000>>|<cell|<cell-inert|c2|=a2+b2>>>>>>><space|2em><calc-table|simple2|<numeric-dot-table|<tformat|<cwith|1|-1|1|-1|cell-width|5em>|<cwith|1|-1|1|-1|cell-hmode|max>|<table|<row|<cell|<cell-inert|a1|1>>|<cell|<cell-inert|b1|10>>|<cell|<cell-output|c1|=a1+b1|<math|11>>>>|<row|<cell|<cell-inert|a2|100>>|<cell|<cell-inert|b2|1000>>|<cell|<cell-output|c2|=a2+b2|<math|1100>>>>>>>>>>>
      Evaluation of a simple spreadsheet.
    </big-figure>
  </example>

  <\example>
    The cells may contain mathematical formulas and the spreadsheet may take advantage of any of the capacities of the scripting language. For instance, the figure below demonstrates another possible use of <name|Maxima>.

    <\big-figure|<small|<with|prog-scripts|maxima|<calc-table|derivatives1|<textual-table|<tformat|<cwith|1|-1|1|1|cell-width|15em>|<cwith|1|-1|1|1|cell-hmode|max>|<table|<row|<cell|<cell-inert|a1|<math|sin<around*|(|x<rsup|2>|)>>>>>|<row|<cell|<cell-inert|a2|=diff(a1,x)>>>|<row|<cell|<cell-inert|a3|=diff(a2,x)>>>|<row|<cell|<cell-inert|a4|=diff(a3,x)>>>>>>><space|2em><calc-table|derivatives2|<textual-table|<tformat|<cwith|1|-1|1|1|cell-width|15em>|<cwith|1|-1|1|1|cell-hmode|max>|<table|<row|<cell|<cell-inert|a1|<math|sin<around*|(|x<rsup|2>|)>>>>>|<row|<cell|<cell-output|a2|=diff(a1,x)|<math|2*x*cos <around*|(|x<rsup|2>|)>>>>>|<row|<cell|<cell-output|a3|=diff(a2,x)|<math|2*cos <around*|(|x<rsup|2>|)>-4*x<rsup|2>*sin <around*|(|x<rsup|2>|)>>>>>|<row|<cell|<cell-output|a4|=diff(a3,x)|<math|-12*x*sin <around*|(|x<rsup|2>|)>-8*x<rsup|3>*cos <around*|(|x<rsup|2>|)>>>>>>>>>>>>
      Computation of successive derivatives using <name|Maxima>.
    </big-figure>
  </example>

  <TeXmacs> supports a few special notations for applying operations on all cells in a subtable. For instance, as in <name|Excel>, one may use the notation <samp|c3:d5> for indicating all cells <samp|c3>, <samp|c4>, <samp|c5>, <samp|d3>, <samp|d4>, <samp|d5> in the block from <samp|c3> to <samp|d5>. An alternative notation <cell-commas> for <samp|:> can be entered by typing <key|, ,>. In a similar way, one may enter the special notation <cell-plusses> by typing <key|+ +>. For instance, <samp|c3<cell-plusses>d5> stands for the sum of all cells between <samp|c3> and <samp|d5>.

  <\example>
    The figure below shows an example on how to use taking sums of cells. Notice that empty cells count for zero.

    <\big-figure|<small|<with|prog-scripts|maxima|<calc-table|sum1|<numeric-dot-table|<tformat|<cwith|1|-1|1|-1|cell-width|5em>|<cwith|1|-1|1|-1|cell-hmode|max>|<table|<row|<cell|<cell-inert|a1|15.10>>|<cell|<cell-inert|b1|15.10>>|<cell|<cell-inert|c1|30.20>>>|<row|<cell|<cell-inert|a2|100>>|<cell|<cell-inert|b2|125>>|<cell|<cell-inert|c2|75>>>|<row|<cell|<cell-inert|a3|28.50>>|<cell|<cell-inert|b3|>>|<cell|<cell-inert|c3|14.25>>>|<row|<cell|<cell-inert|a4|12>>|<cell|<cell-inert|b4|16>>|<cell|<cell-inert|c4|20>>>|<row|<cell|<cell-inert|a5|=a1<cell-plusses>a4>>|<cell|<cell-inert|b5|=b1<cell-plusses>b4>>|<cell|<cell-inert|c5|=c1<cell-plusses>c4>>>>>>><space|2em><calc-table|sum2|<numeric-dot-table|<tformat|<cwith|1|-1|1|-1|cell-width|5em>|<cwith|1|-1|1|-1|cell-hmode|max>|<cwith|5|5|1|3|cell-width|5em>|<cwith|5|5|1|3|cell-hmode|max>|<table|<row|<cell|<cell-inert|a1|15.10>>|<cell|<cell-inert|b1|15.10>>|<cell|<cell-inert|c1|30.20>>>|<row|<cell|<cell-inert|a2|100>>|<cell|<cell-inert|b2|125>>|<cell|<cell-inert|c2|75>>>|<row|<cell|<cell-inert|a3|28.50>>|<cell|<cell-inert|b3|>>|<cell|<cell-inert|c3|14.25>>>|<row|<cell|<cell-inert|a4|12>>|<cell|<cell-inert|b4|16>>|<cell|<cell-inert|c4|20>>>|<row|<cell|<cell-output|a5|=a1<cell-plusses>a4|<math|155.6>>>|<cell|<cell-output|b5|=b1<cell-plusses>b4|<math|156.1>>>|<cell|<cell-output|c5|=c1<cell-plusses>c4|<math|139.45>>>>>>>>>>>
      Evaluation of a simple spreadsheet.
    </big-figure>
  </example>

  Notice that copying and pasting of subtables works in the same way as for ordinary tables, with the additional features that the names of the cells and references to cells in the formulas are renumbered automatically. Similarly, automatic renumbering is used when inserting new columns or rows, or when removing existing columns or rows.

  We also notice that field references can be used inside spreadsheet cells in order to refer to some computational markup outside the table. Inversely, each spreadsheet also carries an invisible <samp|Ref> field which can be edited by deactivating the spreadsheet or from the focus bar (when selecting the entire spreadsheet). The <samp|Ref> field of the spreadsheet is used as a prefix for referring to the contents of cells outside the table or from within other spreadsheets. For instance, if <samp|Ref> equals <samp|sheet>, then <samp|sheet-c4> will refer to the field <samp|c4> inside the spreadsheet.

  <section|Remote plug-ins><label|sec-man-remote-plugins>

  It sometimes happens that certain plug-ins are only installed on a remote computer. In many cases, it will still be possible to use such a plug-in inside <TeXmacs> over an <hlink|SSH|http://www.openssh.com/> connection.

  In order to make this work, you first have to make sure that SSH is installed on both computers and that connecting by SSH to the remote machine can be done automatically, without having to type a password. This can be done by copying your public identity on the local server to the remote server into the file <verbatim|~/.ssh/authorized_keys>; see the documentation on SSH for more information.

  As the next step, you have to make sure that <TeXmacs> has been installed on both computers. The remote <TeXmacs> installation will mainly be used in order to detect which plug-ins can be used on the remote computer.

  When everything has been set up correctly in this way, select <menu|Insert|Session|Remote> in order to open the remote plug-in selector. Add the name of the remote server by typing its name or IP address and clicking on <menu|Add>. After a small pause, the remote server should appear in the list together with the remote plug-ins which are supported. You may now simply select the plug-in you want to use from the list. Notice that remote plug-ins may take a few seconds in order to boot. Please be patient while booting is in progress.

  Servers which have been added to the list of remote plug-in servers will be remembered at the next time when you start <TeXmacs>. You may use the buttons <menu|Remove> and <menu|Update> in order to remove a server from the list and to redetermine the list of supported remote plug-ins.
</body>

<\initial>
  <\collection>
    <associate|page-medium|paper>
    <associate|page-screen-margin|false>
  </collection>
</initial>
